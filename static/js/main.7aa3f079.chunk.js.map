{"version":3,"sources":["Config/RouteConfig.jsx","Config/AppConfig.jsx","Components/Shell/PanelLeft.jsx","Plugin/Helpers/Helper.js","Patterns/Facade/FormConfig/FormConfigInterface.jsx","Patterns/Facade/FormConfig/Element/ApiConfig.jsx","Patterns/Facade/FormConfig/Element/FieldConfig.jsx","Patterns/Facade/FormConfig/Element/ItemConfig.jsx","Patterns/Facade/FormConfig/Element/CollectionConfig.jsx","Patterns/Facade/FormConfig/Element/Validation/FieldsValidationConfig.jsx","Patterns/Facade/FormConfig/Element/Validation/FormValidationConfig.jsx","Patterns/Facade/FormConfig/Element/Validation/CollectionValidationConfig.jsx","Patterns/Facade/FormConfig/Element/ValidationConfig.jsx","Patterns/Facade/FormConfig/Element/Validation/FieldValidation/FieldRules.jsx","Patterns/Strategy/Validator/Strategy/RulesClass.jsx","Patterns/Strategy/Validator/Strategy/Rules/CollectionUniqueRule.jsx","Patterns/Strategy/Validator/Strategy/Rules/CollectionRequiredRule.jsx","Patterns/Strategy/Validator/Strategy/Rules/FormDependsRule.jsx","Patterns/Facade/FormConfig/Element/FormConfig.jsx","Patterns/Facade/FormConfig/BankAccountConfig.jsx","Patterns/Facade/FormConfig/ContractorConfig.jsx","Patterns/Facade/FormConfig/CompanyConfig.jsx","Components/Shell/PanelRight.jsx","Pages/Component/LoginScreenModal.js","Components/Shell/Invitation.jsx","Components/Shell/ShellNavbar.jsx","Pages/HomePage.jsx","Patterns/Facade/FormConfig/OwnerConfig.jsx","Patterns/Facade/FormConfig/InvoiceItemConfig.jsx","Patterns/Facade/FormConfig/InvoiceConfig.jsx","Patterns/Facade/FormConfig/EconomicEventConfig.jsx","Patterns/Facade/FormConfig/EconomicOperationConfig.jsx","Patterns/Facade/FormConfig/IntproofConfig.jsx","Patterns/Facade/FormConfig/IntproofItemConfig.jsx","Pages/PanelLeftPage.jsx","Pages/PanelRightPage.jsx","Pages/FormPage.jsx","Pages/AboutPage.jsx","Pages/DynamicRoutePage.jsx","Pages/NotFoundPage.jsx","Pages/ProblemResolverPage.jsx","Pages/SandboxPage.jsx","Pages/Component/CodeSample/js/CommandDescription.js","Pages/Component/CodeSample/js/FacadeDescription.js","Pages/CodeSamplesDetailPage.jsx","Pages/Component/CodeSample/js/PrototypeDescription.js","Pages/Component/CodeSample/js/SingletonDescription.js","Pages/Component/CodeSample/js/StrategyDescription.js","Pages/Component/CodeSample/php/FirstAdminCommandDescription.js","Pages/Component/CodeSample/php/ProblemResolverDescription.js","Pages/Component/CodeSample/php/ShopwareSampleDescription.js","Pages/CodeSamplesPage.jsx","Shell.jsx","Patterns/Facade/ResourceConfig.jsx","Plugin/HelperPlugin.js","Plugin/Helpers/Log.js","Plugin/LoggerPlugin.js","Plugin/Api/Resource.jsx","Plugin/ApiPlugin.js","Plugin/PWAPlugin.js","Plugin/DisplayablePlugin.js","Patterns/Prototype/ConcretePrototype/SwipeableWidget/SwipeableCollectionWidget.jsx","Patterns/Prototype/ConcretePrototype/SwipeableWidget/SwipeableItemWidget.jsx","Plugin/WidgetPlugin.js","index.js"],"names":["RouteConfig","name","path","displayName","options","pushState","this","config","key","hasOwnProperty","AppConfig","root","theme","id","data","masterDetailBreakpoint","routes","popup","closeOnEscape","sheet","popover","actions","on","init","app","console","log","serviceWorker","scope","methods","addRoute","route","createSimpleRoute","push","Object","assign","addTabsRoute","tabs","tabsArray","tabRoute","getConfig","newTabRoute","addDetailsRoute","detailRoutes","routeDetail","detailRoute","component","addAsyncRoute","createAsyncRoute","props","type","async","_getAsync","routeTo","routeFrom","resolve","reject","contextType","React","createContext","context","configResolve","params","PanelLeft","Fragment","left","cover","themeDark","link","title","slot","icon","divider","Component","Helper","action","entity","collection","str","charAt","toLowerCase","substr","toUpperCase","object","company","companyName","partnership","street","house","appartment","postalCode","city","nip","regon","foundingDate","formatDate","isPartnership","bankAccounts","contractors","books","book","year","col7","col8","col9","col10","col11","col12","col13","col14","col15","col16b","z1","z2a","z2b","z2c","z2d","z2e","z2f","z2","z3","settlement","settlementDate","income","incomeCumulative","costs","costsCumulative","profit","profitCumulative","social","socialCumulative","socialDeduction","health","healthCumulative","healthDeduction","taxBase","tax","taxCumulative","closed","documents","document","col1","col2","col3","col4","col5","col6","col16a","col17","invoice","datePrep","buyer","invoiceNumber","paymentMethod","paymentDate","bankAccount","invoiceItems","amount","paid","paidValue","paidLeft","Error","parsed","email","firstName","lastName","avatar","logo","parseEntity","bankAccountName","bankName","accountNumber","isDefault","col7Penny","col8Penny","col9Penny","col10Penny","col11Penny","col12Penny","col13Penny","col14Penny","col15Penny","col16bPenny","items","amountPenny","paidValuePenny","paidLeftPenny","economicEvent","pos","unit","unitCount","unitPrice","unitPricePenny","legalBasis","price","pricePenny","economicOperation","proofNumber","intproofItems","genus","documentType","documentNumber","documentDate","description","economicOperations","bookColumn","isPeriodic","period","parseSuffix","target","suffixValue","zoo","sa","operation","date","map","field","formatPeriod","join","fieldName","withNoSelect","conditions","mergeFields","length","value","text","filter","option","condition","optionValue","array","childFieldName","index","getIndexOfValue","parseInt","fieldValue","findIndex","item","String","fieldDate","Date","getMonth","isNaN","getFullYear","getDate","changeYear","changeMonth","monthNames","quarterNames","incrementing","month","resultDate","day","hour","getHours","minute","getMinutes","second","getSeconds","current","toISOString","slice","firstDayMonth","lastDayMonth","Math","floor","actionName","entityName","e","keyCode","preventDefault","nextInput","getElementsByName","currentTarget","focus","setSelectionRange","col","showAsObject","penny","toString","padStart","float","Number","parseFloat","toFixed","settlements","sum","reduce","total","comparePenny","test","mapToObject","obj","forEach","Set","mapToObjectSimple","fromEntries","objectToMap","Map","entries","snakeToCamel","string","replace","m","camelToSnake","camelToArray","split","arrayHasEvery","arraySource","arrayTarget","every","v","includes","arrayHasAny","some","missingTables","toFind","FormConfigInterface","ApiConfig","FieldConfig","label","emptyValue","additionalOptions","acceptVisitor","widgetFactoryCoordinator","setFieldWidget","widget","_widget","ItemConfig","preview","event","handle","header","footer","CollectionConfig","formName","parentForm","FieldsValidationConfig","fields","FormValidationConfig","rules","arguments","rule","CollectionValidationConfig","ValidationConfig","fieldsRules","formRules","collectionRules","FieldRules","required","correctness","undefined","ResultRule","ruleName","success","message","setError","getAnswer","CollectionUniqueRule","algorithm","contextData","algorithmResult","collectionData","CollectionRequiredRule","Array","isArray","FormDependsRule","when","then","formData","whenResult","fieldFunctions","keys","FormConfig","decorator","BankAccountConfig","apiConfig","defaultChecked","delete","color","right","edit","new","form","validation","ContractorConfig","shortcut","simple","afterChange","toggledBy","disabled","CompanyConfig","fullName","after","subtitle","parseAddress","owner","collections","PanelRight","displayable","themeLight","display","getIndexOfElementArrayById","CompanyCollectionWidget","SwipeableCollection","withConfig","withEvents","withHandlers","buildWidget","online","api","resource","Fraqgment","onClick","logout","LoginScreenModal","__proto__","constructor","_request","url","dataType","request","promise","postJSON","response","catch","xhrError","loadingDone","a","dialog","close","setState","error","$f7","loginScreen","login","logger","startProcess","preloader","state","password","result","locationHeader","xhr","getResponseHeader","info","fillData","dbData","views","main","router","back","reloadPrevious","ignoreCache","status","JSON","parse","finally","resultAfterAll","endProcess","buttons","fill","bgColor","isLoading","toast","create","position","closeButton","open","className","noToolbar","noNavbar","noSwipeback","content","placeholder","onInput","Invitation","_isMounted","noHairlines","medium","mediaList","chevronCenter","noLinkClass","ShellNavbar","panelOpen","installApp","classname","HomePage","ProjectsCollectionWidget","user","OwnerConfig","InvoiceItemConfig","optionsWithEmptyValue","labelField","add","displayWhen","selected","href","InvoiceConfig","contractor","EconomicEventConfig","EconomicOperationConfig","IntproofConfig","IntproofItemConfig","strong","view","panelClose","raised","popupOpen","backLink","defaultValue","input","min","max","step","resizable","from","n","checkbox","radio","tag","round","outline","small","large","DynamicRoutePage","$f7route","hash","query","stringify","$f7router","ProblemResolverPage","bottom","external","newMessagesFirst","accordionList","accordionItem","bold","SandboxPage","width","loginScreenOpen","popupClose","loginScreenClose","CommandDescription","FacadeDescription","components","js","command","desc","facade","prototype","language","singleton","strategy","php","firstAdminCommand","problemResolver","shopwareSample","CodeSamplesDetailPage","DescriptionComponent","pattern","ucfirst","tabbar","labels","CodeSamplesPage","showViews","tabLink","tabLinkActive","tab","tabActive","master","reloadDetail","withToolbar","resourceConfig","_form","invoiceItem","intproof","intproofItem","getFormConfig","getIRI","ownerId","entityConfig","ownerConfig","Shell","componentDidMount","window","addEventListener","deferredPrompt","showInstallButton","utils","extend","_config","formSubmit","group","ref","indexOf","_concreteFormComponent","dataset","stateAfterSubmit","_configForm","formClose","validationError","stateErrors","errors","controlChange","fieldConfig","control","closest","settings","checked","prevState","newState","storage","storeFormData","controlCalendarChange","currentRoute","opened","_api","forms","formsQueue","pop","prompt","userChoice","choiceResult","outcome","projectChange","setCurrent","appConfig","transition","PanelLeftPage","PanelRightPage","FormPage","AboutPage","NotFoundPage","logInside","HelperPlugin","helper","enable","disable","bg","Log","givenArgs","captureStackTrace","args","_arguments","objectNames","_source","source","extractNames","_prepareArgs","groupCollapsed","function","_log","groupEnd","errorObject","errorType","errorMessage","lines","stack","lineObjects","regex","line","lineObject","exec","parts","argsData","iterateObjects","trace","preparationFunction","objectLines","atObjectLineText","processTitle","LoggerPlugin","pageBeforeIn","page","pageAfterIn","pageBeforeOut","pageAfterOut","pageInit","pageBeforeRemove","Resource","dbName","version","tables","keyPath","table","db","setupDB","namespace","self","Promise","dbOpen","indexedDB","onupgradeneeded","objectStoreNames","contains","objectStore","createObjectStore","createIndex","unique","multiEntry","abort","onsuccess","onerror","code","useDB","readData","_tableObject","_saveData","setConfig","setData","tableObject","transaction","getAll","list","openCursor","ce","cursor","continue","stores","tx","_get","entityData","_put","_add","put","getCursor","IDBKeyRange","only","_delete","ApiPlugin","resultData","PWAPlugin","pwa","installed","DisplayablePlugin","lcfirst","resourceData","shell","navbar","panel","companyCollection","button","install","indexes","canDisplay","Boolean","SwipeableCollectionWidget","build","_type","_itemPrototype","_handlers","_events","wrapperClass","collectionWidget","configureProps","card","_renderCard","_renderAccordion","_renderList","buttonToPopoverWrapper","data-parent-form","renderItem","accordionContent","badge","inset","configure","render","formConfig","_formConfig","itemConfig","updateData","_composeItem","prototypeInstance","_clone","setProperty","property","k","_app","SwipeableItem","withApp","buildItem","handlers","events","SwipeableItemWidget","sortable","onChange","btnLeft1","btnRight1","useConfig","_configureSettings","itemWidget","swipeout","onSwipeoutOpen","onSwipeoutClosed","_renderActions","configPreview","subtitleValue","afterValue","headerValue","textValue","footerValue","_itemConfig","itemActions","_renderAction","side","actionsProps","i","buttonProps","buttonAttributes","WidgetPlugin","Builder","Framework7","use","Framework7React","ReactDOM","f7","getElementById"],"mappings":"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","file":"static/js/main.7aa3f079.chunk.js","sourcesContent":["/**\n *\n * @property {string} name - Route name, e.g. home\n * @property {string} path - Route path. Means this route will be loaded when we click link that match to this path, or can be loaded by this path using API\n * @property {string} options - Object with additional route options (optional)\n * @property {string} routes - Array with nested routes\n * @property {string} viewName - View name where this route will be forced to load\n *\n * @property {string} master - Enables this route as Master route\n * @property {string} detailRoutes - Array with detail routes\n *\n * @property {string} modules - Array with Lazy Modules to load before route loading\n *\n * //content properties\n * @property {string} el -\n * @property {string} pageName -\n * @property {string} content -\n * @property {string} template -\n * @property {string} templateUrl -\n * @property {string} component - Load page from passed Framework7 Router Component\n * @property {string} componentUrl - load pages as a component via Ajax. Also supports dynamic route params from route path using {{paramName}} expression\n * @property {string} async - function(routeTo, routeFrom, resolve, reject) - Do required asynchronous manipulation and the return required route content and options\n * @property {string} asyncComponent - Method should return Promise resolved with Component or ES module with .default property containing Component.\n *\n * @property {Array} tabs - Array with tab routes\n * @property {string} actions - Action Sheet route\n * @property {string} popup - Popup route\n * @property {string} loginScreen - Login screen route\n * @property {string} popover - Popover route\n * @property {string} sheet - Sheet route\n * @property {string} panel - Panel route\n *\n * @property {string} on - Object with event handlers\n *\n * @property {string} alias -\n * @property {string} redirect -\n *\n * @property {string} beforeEnter -\n * @property {string} beforeLeave -\n *\n * @property {string} keepAlive - Enables so called keepAlive route. When enabled then once loaded page and its component (Vue, React or Router component) will be never destroyed. Instead, it will be detached from DOM and reused again when required.\n *\n */\nexport default class RouteConfig {\n    displayName = 'RouteConfig';\n    /** Route name, e.g. home */\n    id;\n    name;\n    /** Route path. Means this route will be loaded when we click link\n     * that match to this path, or can be loaded by this path using API\n     */\n    path;\n    /** Object with additional route options (optional) */\n    options = {\n        pushState: true,\n    };\n    /** Array of nested routes (optional) */\n    routes;\n    /** View name where this route will be forced to load */\n    viewName;\n\n    // ### Master detail ###\n    /** Enables this route as Master route */\n    master;\n    /** Array with detail routes */\n    detailRoutes;\n\n    // ### Lazy modeules ###\n    /**\n     * Array with Lazy Modules to load before route loading\n     */\n    modules;\n\n    // ### Content Related Properties ###\n    /**\n     * Load page content via Ajax.\n     * Also supports dynamic route params from route path using {{paramName}} expression, e.g.\n     * @example\n     * {\n     *     path: '/users/:userId/posts/:postId',\n     *     url: 'http://myapp.com/posts/{{userId}}/{{postId}}'\n     * }\n     */\n    url;\n    /** Load page from passed Framework7 Router Component */\n    component;\n\n    /**\n     * Do required asynchronous manipulation and the return required route content and options\n     * should return function(routeTo, routeFrom, resolve, reject)\n     */\n    async;\n\n    constructor(name, path) {\n        this.name = name;\n        this.path = path;\n    }\n\n    getConfig() {\n        const config = {};\n        // console.log(this.displayName, this);\n        for (let key in this) {\n            if (this.hasOwnProperty(key) && this[key]) {\n                config[key] = this[key];\n            }\n        }\n        return config;\n    }\n\n}\n","import React from 'react';\nimport RouteConfig from \"./RouteConfig\";\n\nexport default class AppConfig {\n    root = '#app';\n    theme = 'auto';\n    name = 'Anatholius Programowanie - biuro';\n    id = 'pl.anatholius.biuro';\n    data = {};\n\n    masterDetailBreakpoint = 800;\n    routes = [];\n\n    popup = {\n        closeOnEscape: true,\n    };\n    sheet = {\n        closeOnEscape: true,\n    };\n    popover = {\n        closeOnEscape: true,\n    };\n    actions = {\n        closeOnEscape: true,\n    };\n    on = {\n        init: (app) => {\n            console.log('F7 init');\n            // console.log('this', this);\n        },\n\n    };\n    serviceWorker = {\n        path: 'anatholius-gh-sw.js',\n        scope: '/',\n    };\n    methods = {};\n\n    /**\n     * Tworzy i dodaje konfigurację routa z komponentem\n     *\n     * @param {string} name - nazwa trasy\n     * @param {string} path - ścieżka trasy\n     * @param {Object} config - nazwa komponentu strony\n     * @param {Object} [options] - opcje trasy\n     */\n    addRoute = (name, path, config, options) => {\n        const route = this.createSimpleRoute(name, path, config, options);\n        this.routes.push(route);\n    };\n    /**\n     * Tworzy i zwraca konfigurację routa z komponentem\n     *\n     * @param {string} name - nazwa trasy\n     * @param {string} path - ścieżka trasy\n     * @param {Object} config - nazwa komponentu strony\n     * @param {Object} [options] - opcje trasy\n     */\n    createSimpleRoute = (name, path, config, options) => {\n        let route = new RouteConfig(name, path);\n\n        config.options = options;\n        for (let key in config) {\n            if (config.hasOwnProperty(key) && config[key]) {\n                if (key === 'options') {\n                    route[key] = Object.assign(route[key], config[key]);\n                } else {\n                    route[key] = config[key];\n                }\n            }\n        }\n        route.options = Object.assign(route.options, {...options});\n\n        return route;\n    };\n\n    /**\n     * Tworzy i dodaje konfigurację trasy kart\n     *\n     * @param {string} name - nazwa trasy\n     * @param {string} path - ścieżka trasy\n     * @param {Array} tabs - nazwa komponentu strony\n     * @param {Object} config - nazwa komponentu strony\n     * @param {Object} [options] - opcje trasy\n     */\n    addTabsRoute = (name, path, tabs, config, options) => {\n        let route = new RouteConfig(name, path);\n\n        const tabsArray = [];\n        for (let tabRoute of tabs) {\n            if (tabRoute instanceof RouteConfig) {\n                console.log('tabRoute', tabRoute);\n                tabsArray.push(tabRoute.getConfig());\n            } else {\n                const newTabRoute = new RouteConfig(tabRoute.name, tabRoute.path);\n                for (let key in tabRoute) {\n                    if (tabRoute.hasOwnProperty(key) && tabRoute[key]) {\n                        if (key === 'options') {\n                            newTabRoute[key] = Object.assign(newTabRoute[key], tabRoute[key]);\n                        } else {\n                            newTabRoute[key] = tabRoute[key];\n                        }\n                    }\n                }\n                tabsArray.push(newTabRoute.getConfig());\n            }\n        }\n        route.tabs = tabsArray;\n\n        for (let key in config) {\n            if (config.hasOwnProperty(key) && config[key]) {\n                route[key] = config[key];\n            }\n        }\n\n        route.options = Object.assign(route.options, {...options});\n\n        this.routes.push(route.getConfig());\n    };\n\n\n    /**\n     * Tworzy i dodaje konfigurację trasy złożonej z podrzędnych subtras\n     *\n     * @param name - nazwa trasy\n     * @param path - ścieżka trasy\n     * @param {Array} detailRoutes - tablica routów z detalami\n     * @param options - opcje trasy\n     */\n    addDetailsRoute = (name, path, detailRoutes, options) => {\n        let route = new RouteConfig(name, path);\n\n        const tabs = [];\n        for (let routeDetail of detailRoutes) {\n            if (routeDetail instanceof RouteConfig) {\n                tabs.push(routeDetail);\n            } else {\n                const detailRoute = new RouteConfig(name, path);\n                detailRoute.component = routeDetail.component;\n                tabs.push(detailRoute);\n            }\n        }\n        route.detailRoutes = tabs;\n        route.options = Object.assign(route.options, {...options});\n\n        this.routes.push(route);\n    };\n\n    /**\n     * Tworzy i dodaje konfigurację routa asynchronicznego\n     *\n     * @param name - nazwa trasy\n     * @param path - ścieżka trasy\n     * @param config - nazwa komponentu strony\n     * @param options - opcje trasy\n     */\n    addAsyncRoute = (name, path, config, options) => {\n        let route = this.createAsyncRoute(name, path, config, options);\n        this.routes.push(route);\n    };\n\n    createAsyncRoute(name, path, config, options) {\n        let route = new RouteConfig(name, path);\n\n        if (!options.props) {\n            options.props = {};\n        }\n        if (config.type) {\n            options = Object.assign(options, {\n                type: config.type,\n            });\n        }\n        route.options = Object.assign(route.options, options);\n        route.async = this._getAsync(config, options);\n\n        return route;\n    }\n\n    _getAsync(config, options) {\n        return (routeTo, routeFrom, resolve, reject) => {\n            config.component.contextType = React.createContext(options.context);\n\n            const configResolve = {\n                config: {},\n                options: options,\n            };\n            if (!config.hasOwnProperty('type')) {\n                configResolve.config.component = config.component;\n            } else {\n                configResolve.config[config.type] = {\n                    component: config.component,\n                };\n            }\n            configResolve.options.props = routeTo.params;\n\n            resolve(configResolve.config, configResolve.options);\n        };\n    }\n\n    getConfig() {\n        return {\n            id: this.id,\n            root: this.root,\n            theme: this.theme,\n            name: this.name,\n            data: this.data,\n            routes: this.routes,\n            serviceWorker: this.serviceWorker,\n            methods: this.methods,\n            on: this.on,\n        };\n    }\n\n}\n","import React from \"react\";\nimport {BlockTitle, Icon, List, ListItem, Page, Panel, View} from \"framework7-react\";\n\nexport default class PanelLeft extends React.Component {\n    displayName = 'PanelLeft';\n    // static propTypes = {\n    //     display: PropTypes.func,\n    //     // event:   PropTypes.object,\n    // };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Panel left cover themeDark>\n                    <View>\n                        <Page>\n                            <BlockTitle>Navigacja OFF-LINE</BlockTitle>\n                            <List>\n                                <ListItem link=\"#\" title=\"Some link1\">\n                                    <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                                </ListItem>\n                                <ListItem link=\"#\" title=\"Some link2\">\n                                    <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                                </ListItem>\n                                <ListItem link=\"#\" title=\"Some lin2k\">\n                                    <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                                </ListItem>\n\n                                <ListItem divider title=\"Divider Here\"/>\n\n                                <ListItem link=\"#\" title=\"Some link\">\n                                    <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                                </ListItem>\n                            </List>\n                        </Page>\n                    </View>\n                </Panel>\n            </React.Fragment>\n        );\n    }\n}","import React from \"react\";\n\nexport default class Helper {\n\n    static test = () => {\n        console.log('this', this);\n    };\n\n    static mapToObject = map => {\n        const obj = {};\n        map.forEach((value, key) => {\n            if (value instanceof Set) {\n                value = [...value];\n            }\n            obj[key] = value\n        });\n        return obj;\n    };\n\n    static mapToObjectSimple = map => Object.fromEntries(map);\n    static objectToMap = obj => new Map(Object.entries(obj));\n\n    static snakeToCamel = (string) => string.replace(/(_\\w)/g, (m) => m[1].toUpperCase());\n    static camelToSnake = (string) => string.replace(/[\\w]([A-Z])/g, (m) => m[0] + \"_\" + m[1]).toLowerCase();\n    static camelToArray = (string) => string.replace(/[\\w]([A-Z])/g, (m) => m[0] + \"_\" + m[1]).toLowerCase().split('_');\n\n    static arrayHasEvery = (arraySource, arrayTarget) => arrayTarget.every(v => arraySource.includes(v));\n    static arrayHasAny = (arraySource, arrayTarget) => {\n        for (let some of arraySource) {\n            if (arrayTarget.includes(some)) {\n                return true;\n            }\n        }\n    };\n\n    static missingTables = (arraySource, toFind) => toFind.filter(e => !arraySource.includes(e));\n\n// static renderComponent(component) {\n//     return renderToString(component);\n// }\n\n    static lcfirst(str) {\n        str += '';\n        let f = str.charAt(0).toLowerCase();\n        return f + str.substr(1);\n    }\n\n    static ucfirst(str) {\n        str += '';\n        let f = str.charAt(0).toUpperCase();\n        return f + str.substr(1);\n    }\n\n    static populate(object, entity, data) {\n        if (entity && data) {\n            switch (entity) {\n                case 'owner':\n                    break;\n                case 'company':\n                    object.company = {\n                        id: data['id'],\n                        companyName: data['companyName'],\n                        partnership: data['partnership'],\n                        street: data['street'],\n                        house: data['house'],\n                        appartment: data['appartment'],\n                        postalCode: data['postalCode'],\n                        city: data['city'],\n                        nip: data['nip'],\n                        regon: data['regon'],\n                        foundingDate: Helper.formatDate(data['foundingDate']),\n                        isPartnership: data['isPartnership'],\n                        bankAccounts: data['bankAccounts'],\n                    };\n                    object.contractors = data['contractors'];\n                    object.books = data['books'];\n                    break;\n                case 'book':\n                    object.book = {\n                        id: data['id'],\n                        year: data['year'],\n                        col7: data['col7'],\n                        col8: data['col8'],\n                        col9: data['col9'],\n                        col10: data['col10'],\n                        col11: data['col11'],\n                        col12: data['col12'],\n                        col13: data['col13'],\n                        col14: data['col14'],\n                        col15: data['col15'],\n                        col16b: data['col16b'],\n                        z1: data['z1'],\n                        z2a: data['z2a'],\n                        z2b: data['z2b'],\n                        z2c: data['z2c'],\n                        z2d: data['z2d'],\n                        z2e: data['z2e'],\n                        z2f: data['z2f'],\n                        z2: data['z2'],\n                        z3: data['z3'],\n                    };\n                    break;\n                case 'settlement':\n                    object.settlement = {\n                        id: data['id'],\n                        settlementDate: data['settlementDate'],\n                        income: data['income'],\n                        incomeCumulative: data['incomeCumulative'],\n                        costs: data['costs'],\n                        costsCumulative: data['costsCumulative'],\n                        profit: data['profit'],\n                        profitCumulative: data['profitCumulative'],\n                        social: data['social'],\n                        socialCumulative: data['socialCumulative'],\n                        socialDeduction: data['socialDeduction'],\n                        health: data['health'],\n                        healthCumulative: data['healthCumulative'],\n                        healthDeduction: data['healthDeduction'],\n                        taxBase: data['taxBase'],\n                        tax: data['tax'],\n                        taxCumulative: data['taxCumulative'],\n                        closed: data['closed'],\n                        documents: data['documents'],\n                    };\n                    break;\n                case 'document':\n                    object.document = {\n                        id: data['id'],\n                        type: data['type'],\n                        col1: data['col1'],\n                        col2: data['col2'],\n                        col3: data['col3'],\n                        col4: data['col4'],\n                        col5: data['col5'],\n                        col6: data['col6'],\n                        col7: data['col7'],\n                        col8: data['col8'],\n                        col9: data['col9'],\n                        col10: data['col10'],\n                        col11: data['col11'],\n                        col12: data['col12'],\n                        col13: data['col13'],\n                        col14: data['col14'],\n                        col15: data['col15'],\n                        col16a: data['col16a'],\n                        col16b: data['col16b'],\n                        col17: data['col17'],\n                    };\n                    break;\n                case 'invoice':\n                    object.invoice = {\n                        id: data['id'],\n                        city: data['city'],\n                        datePrep: data['datePrep'],\n                        buyer: data['buyer'],\n                        invoiceNumber: data['invoiceNumber'],\n                        paymentMethod: data['paymentMethod'],\n                        paymentDate: data['paymentDate'],\n                        bankAccount: data['bankAccount'],\n                        invoiceItems: data['invoiceItems'],\n                        amount: data['amount'],\n                        paid: data['paid'],\n                        paidValue: data['paidValue'],\n                        paidLeft: data['paidLeft'],\n                    };\n                    break;\n                case 'intproof':\n                    break;\n                case 'economicOperation':\n\n                    break;\n                default:\n                    throw new Error(`Unknown entity in Helper.populate() function`);\n            }\n        }\n        return object;\n    }\n\n    static parseEntity(entity, data) {\n        if (!data) {\n            return null;\n        }\n        let parsed = {\n            id: data['id'] ? data['id'] : null,\n        };\n        switch (entity) {\n            case 'owner': {\n                parsed.email = data['email'] ? data['email'] : null;\n                parsed.firstName = data['firstName'] ? data['firstName'] : null;\n                parsed.lastName = data['lastName'] ? data['lastName'] : null;\n                parsed.avatar = data['avatar'] ? data['avatar'] : null;\n                break;\n            }\n            case 'company': {\n                parsed.companyName = data['companyName'];\n                parsed.partnership = data['partnership'];\n                parsed.isPartnership = data['isPartnership'];\n                parsed.street = data['street'];\n                parsed.house = data['house'];\n                parsed.appartment = data['appartment'];\n                parsed.postalCode = data['postalCode'];\n                parsed.city = data['city'];\n                parsed.nip = data['nip'];\n                parsed.regon = data['regon'];\n                parsed.foundingDate = data['foundingDate'];\n                parsed.logo = data['logo'];\n                const bankAccounts = [];\n                for (let key in data['bankAccounts']) {\n                    if (data['bankAccounts'].hasOwnProperty(key)) {\n                        bankAccounts.push(Helper.parseEntity('bankAccount', data['bankAccounts'][key]));\n                    }\n                }\n                parsed.bankAccounts = bankAccounts;\n\n                break;\n            }\n            case 'bankAccount': {\n                parsed.bankAccountName = data['bankAccountName'];\n                parsed.bankName = data['bankName'];\n                parsed.accountNumber = data['accountNumber'];\n                parsed.isDefault = data['isDefault'];\n                break;\n            }\n            case 'book': {\n                parsed.year = data['year'];\n                parsed.col7 = data['col7'] ? data['col7'] : null;\n                parsed.col8 = data['col8'] ? data['col8'] : null;\n                parsed.col9 = data['col9'] ? data['col9'] : null;\n                parsed.col10 = data['col10'] ? data['col10'] : null;\n                parsed.col11 = data['col11'] ? data['col11'] : null;\n                parsed.col12 = data['col12'] ? data['col12'] : null;\n                parsed.col13 = data['col13'] ? data['col13'] : null;\n                parsed.col14 = data['col14'] ? data['col14'] : null;\n                parsed.col15 = data['col15'] ? data['col15'] : null;\n                parsed.col16b = data['col16b'] ? data['col16b'] : null;\n                parsed.z1 = data['z1'] ? data['z1'] : null;\n                parsed.z2a = data['z2a'] ? data['z2a'] : null;\n                parsed.z2b = data['z2b'] ? data['z2b'] : null;\n                parsed.z2c = data['z2c'] ? data['z2c'] : null;\n                parsed.z2d = data['z2d'] ? data['z2d'] : null;\n                parsed.z2e = data['z2e'] ? data['z2e'] : null;\n                parsed.z2f = data['z2f'] ? data['z2f'] : null;\n                parsed.z2 = data['z2'] ? data['z2'] : null;\n                parsed.z3 = data['z3'] ? data['z3'] : null;\n                break;\n            }\n            case 'settlement': {\n                parsed.settlementDate = data['settlementDate'];\n                parsed.documents = data['documents'];\n                parsed.income = data['income'] ? data['income'] : null;\n                parsed.incomeCumulative = data['incomeCumulative'] ? data['incomeCumulative'] : null;\n                parsed.costs = data['costs'] ? data['costs'] : null;\n                parsed.costsCumulative = data['costsCumulative'] ? data['costsCumulative'] : null;\n                parsed.profit = data['profit'] ? data['profit'] : null;\n                parsed.profitCumulative = data['profitCumulative'] ? data['profitCumulative'] : null;\n                parsed.social = data['social'] ? data['social'] : null;\n                parsed.socialCumulative = data['socialCumulative'] ? data['socialCumulative'] : null;\n                parsed.socialDeduction = data['socialDeduction'] ? data['socialDeduction'] : null;\n                parsed.health = data['health'] ? data['health'] : null;\n                parsed.healthCumulative = data['healthCumulative'] ? data['healthCumulative'] : null;\n                parsed.healthDeduction = data['healthDeduction'] ? data['healthDeduction'] : null;\n                parsed.taxBase = data['taxBase'] ? data['taxBase'] : null;\n                parsed.tax = data['tax'] ? data['tax'] : null;\n                parsed.taxCumulative = data['taxCumulative'] ? data['taxCumulative'] : null;\n                parsed.closed = data['closed'] ? data['closed'] : null;\n                if (data['book']) {\n                    parsed.book = Helper.parseEntity('book', data['book']);\n                }\n                break;\n            }\n            case 'document': {\n                parsed.type = data['type'];\n                // parsed.invoice = Helper.parseEntity('invoice', data['invoice']);\n                // parsed.intproof = Helper.parseEntity('intproof', data['intproof']);\n                parsed.col1 = data['col1'];\n                parsed.col2 = data['col2'];\n                parsed.col3 = data['col3'];\n                parsed.col4 = data['col4'];\n                parsed.col5 = data['col5'];\n                parsed.col6 = Helper.parseEntity('economicEvent', data['col6']);\n                parsed.col7 = data['col7'];\n                parsed.col7Penny = data['col7Penny'];\n                parsed.col8 = data['col8'];\n                parsed.col8Penny = data['col8Penny'];\n                parsed.col9 = data['col9'];\n                parsed.col9Penny = data['col9Penny'];\n                parsed.col10 = data['col10'];\n                parsed.col10Penny = data['col10Penny'];\n                parsed.col11 = data['col11'];\n                parsed.col11Penny = data['col11Penny'];\n                parsed.col12 = data['col12'];\n                parsed.col12Penny = data['col12Penny'];\n                parsed.col13 = data['col13'];\n                parsed.col13Penny = data['col13Penny'];\n                parsed.col14 = data['col14'];\n                parsed.col14Penny = data['col14Penny'];\n                parsed.col15 = data['col15'];\n                parsed.col15Penny = data['col15Penny'];\n                parsed.col16a = data['col16a'];\n                parsed.col16b = data['col16b'];\n                parsed.col16bPenny = data['col16bPenny'];\n                parsed.col17 = data['col17'];\n                if (data['settlement']) {\n                    parsed.settlement = Helper.parseEntity('settlement', data['settlement']);\n                }\n                break;\n            }\n            case 'invoice': {\n                parsed.city = data['city'];\n                parsed.datePrep = data['datePrep'];\n                parsed.buyer = data['buyer'];\n                parsed.invoiceNumber = data['invoiceNumber'];\n                parsed.paymentMethod = data['paymentMethod'];\n                parsed.paymentDate = data['paymentDate'];\n                parsed.bankAccount = data['bankAccount'];\n                const items = [];\n                for (let key in data['invoiceItems']) {\n                    if (data['invoiceItems'].hasOwnProperty(key)) {\n                        items.push(Helper.parseEntity('invoiceItem', data['invoiceItems'][key]));\n                    }\n                }\n                parsed.invoiceItems = items;\n                parsed.amount = data['amount'];\n                parsed.amountPenny = data['amountPenny'];\n                parsed.paidValue = data['paidValue'];\n                parsed.paidValuePenny = data['paidValuePenny'];\n                parsed.paidLeft = data['paidLeft'];\n                parsed.paidLeftPenny = data['paidLeftPenny'];\n                parsed.economicEvent = Helper.parseEntity('economicEvent', data['economicEvent']);\n                break;\n            }\n            case 'invoiceItem': {\n                parsed.pos = data['pos'];\n                parsed.title = data['title'];\n                parsed.unit = data['unit'];\n                parsed.unitCount = data['unitCount'];\n                parsed.unitPrice = data['unitPrice'];\n                parsed.unitPricePenny = data['unitPricePenny'];\n                parsed.legalBasis = data['legalBasis'];\n                parsed.price = data['price'];\n                parsed.pricePenny = data['pricePenny'];\n                parsed.economicOperation = Helper.parseEntity('economicOperation', data['economicOperation']);\n                break;\n            }\n            case 'intproof': {\n                parsed.city = data['city'];\n                parsed.datePrep = data['datePrep'];\n                parsed.proofNumber = data['proofNumber'];\n                const items = [];\n                for (let key in data['intproofItems']) {\n                    if (data['intproofItems'].hasOwnProperty(key)) {\n                        items.push(Helper.parseEntity('intproofItem', data['intproofItems'][key]));\n                    }\n                }\n                parsed.intproofItems = items;\n                parsed.amount = data['amount'];\n                parsed.amountPenny = data['amountPenny'];\n                parsed.economicEvent = Helper.parseEntity('economicEvent', data['economicEvent']);\n                break;\n            }\n            case 'intproofItem': {\n                parsed.pos = data['pos'];\n                parsed.title = data['title'];\n                parsed.genus = data['genus'];\n                parsed.documentType = data['documentType'];\n                parsed.documentNumber = data['documentNumber'];\n                parsed.documentDate = data['documentDate'];\n                parsed.unit = data['unit'];\n                parsed.unitCount = data['unitCount'];\n                parsed.unitPrice = data['unitPrice'];\n                parsed.unitPricePenny = data['unitPricePenny'];\n                parsed.price = data['price'];\n                parsed.pricePenny = data['pricePenny'];\n                parsed.economicOperation = Helper.parseEntity('economicOperation', data['economicOperation']);\n                break;\n            }\n            case 'economicEvent': {\n                parsed.type = data['type'];\n                parsed.description = data['description'];\n                const economicOperations = [];\n                for (let key in data['economicOperations']) {\n                    if (data['economicOperations'].hasOwnProperty(key)) {\n                        economicOperations.push(Helper.parseEntity('economicOperation', data['economicOperations'][key]));\n                    }\n                }\n                parsed.economicOperations = economicOperations;\n                // parsed.company = parseEntity('company', data['company']);\n                break;\n            }\n            case 'economicOperation': {\n                // parsed.economicEvent = data['economicEvent']['id'];\n                parsed.type = data['type'];\n                parsed.description = data['description'];\n                parsed.bookColumn = data['bookColumn'];\n                parsed.isPeriodic = data['isPeriodic'];\n                parsed.period = data['period'];\n                parsed.title = data['title'];\n                break;\n            }\n            default:\n                throw new Error(`Unknown entity in Helper.populate() function`);\n        }\n        return parsed;\n    }\n\n\n    /**\n     * Returns React.Fragment component with formatted vignette for invoice by company data\n     *\n     * @param data\n     * @returns {string|*}\n     * @private\n     */\n    static printVignette(data) {\n        return (data && data.nip) && (\n            <React.Fragment>\n                <b>{data.companyName}{data.isPartnership ? ' ' + Helper.parseSuffix(data.partnership) : ''}</b><br/>\n                {data.street} {data.house}{data.appartment && '/' + data.appartment}<br/>\n                {data.postalCode} {data.city}<br/>\n                NIP: {data.nip}\n            </React.Fragment>\n        )\n    }\n\n    /**\n     * Zwraca przeparsowane dane adresowe do jednolinijkowego stringa\n     *\n     * @param data\n     * @param target\n     * @returns {string}\n     */\n    static parseAddress(data, target = 'kpir') {\n        if (data) {\n            if (target === 'vignette') {\n                return `${data.street} ${data.house}${data.appartment && '/' + data.appartment}<br/>\n${data.postalCode} ${data.city}<br/>`;\n            } else {\n                return `${data.street} ${data.house}${data.appartment && '/' + data.appartment}; ${data.postalCode} ${data.city}`;\n            }\n        }\n        return '';\n    }\n\n    static parseSuffix(suffixValue) {\n        const suffixes = {\n            zoo: 'Sp. z o.o.',\n            sa: 'S.A.',\n        };\n        return suffixes[suffixValue];\n    }\n\n    static fullName(company) {\n        return company.companyName + (company.isPartnership ? ' ' + Helper.parseSuffix(company.partnership) : '');\n    }\n\n// static prepareInvoiceNumber(contractor) {\n//     const currentDate = new Date();\n//     const no = parent.api.entity.documents.reduce((total, document) => total + (document['col4'] === fullName(contractor) ? 1 : 0), 1);\n//     return `${contractor.shortcut}/${currentDate.getFullYear()}/${currentDate.getMonth()}/${no}`;\n// }\n\n    static formatItemTitle(operation, date) {\n        if (operation) {\n            const title = ['description', 'title', 'period'].map(field => {\n                let result;\n                if (field === 'description') {\n                    return operation['description']\n                }\n                if (!operation['isPeriodic']) {\n                    return '';\n                }\n\n                if (operation[field] !== '' && operation[field] !== null) {\n                    result = field !== 'period' ? ' ' + operation[field] : ' - ' +\n                        Helper.formatPeriod(operation[field], date)\n                    ;\n                } else {\n                    result = '';\n                }\n\n                return result;\n            });\n            return typeof (title) === 'string' ? title : title.join('');\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Returns json formatted options {value, text} from array where value=array['id'], text=array[fieldName]\n     *\n     * @param fieldName - field name\n     * @param data - value of field\n     * @param withNoSelect - add choose option on start\n     * @param conditions - conditions to find element\n     * @param mergeFields - fields to merge in select view\n     * @returns {*[]|*}\n     * @private\n     */\n    static formatOptions(fieldName, data, withNoSelect = true, conditions = [], mergeFields = []) {\n        if (data && data.length > 0) {\n            if (withNoSelect) {\n                return [\n                    {value: '', text: data.length === 0 ? `Brak opcji` : `Wybierz`},\n                    ...data.filter(option => {\n                        let condition = true;\n                        for (let key in conditions) {\n                            if (conditions.hasOwnProperty(key)) {\n                                if (option[key] !== conditions[key]) {\n                                    condition = false;\n                                }\n                            }\n                        }\n                        return condition;\n                    }).map(option => {\n                        const text = mergeFields.map(field => {\n                            let ret;\n\n                            if (option[field] !== '' && option[field] !== null) {\n                                ret = (field !== 'period' ? ' ' : ' - ') + option[field];\n                            } else {\n                                ret = '';\n                            }\n                            return ret;\n                        });\n                        let optionValue = '';\n                        if (fieldName === 'companyName') {\n                            optionValue = option[fieldName] + (option['isPartnership'] ? ' ' + Helper.parseSuffix(option['partnership']) : '');\n                        } else {\n                            optionValue = option[fieldName] + (option[fieldName] !== text ? (typeof (text) == 'string' ? text : text.join('')) : '')\n                        }\n                        return {\n                            value: option['id'],\n                            text: optionValue,\n                        };\n                    }),\n                ];\n            } else {\n                return data.map(option => {\n                    const text = option[fieldName] + mergeFields.map(field => {\n                        let ret;\n\n                        if (option[field] !== '' && option[field] !== null) {\n                            ret = (field !== 'period' ? ' ' : ' - ') + option[field];\n                        } else {\n                            ret = '';\n                        }\n                        return ret;\n                    });\n\n                    let optionValue = '';\n                    if (fieldName === 'companyName') {\n                        optionValue = option[fieldName] + (option['isPartnership'] ? ' ' + Helper.parseSuffix(option['partnership']) : '');\n                    } else {\n                        optionValue = option[fieldName] + (option[fieldName] !== text ? (typeof (text) == 'string' ? text : text.join('')) : '');\n                    }\n                    return {\n                        value: option['id'],\n                        text: optionValue,\n                    }\n                });\n            }\n        }\n        return [\n            {value: '', text: `Brak opcji`},\n        ];\n    }\n\n    /**\n     * Return array element by value of id attribute\n     *\n     * @param id\n     * @param array\n     * @param childFieldName - name of field to find index by id its child\n     * @returns {*}\n     * @returns {null|*}\n     */\n    static getArrayElementById(id, array, childFieldName = null) {\n        if (id) {\n            if (childFieldName !== null) {\n                for (let key in array) {\n                    if (array.hasOwnProperty(key) && array[key][childFieldName] && array[key][childFieldName]['id'] === id) {\n                        return array[key];\n                    }\n                }\n            } else {\n                const index = Helper.getIndexOfValue('id', id, array);\n                return index !== -1 ? array[index] : null;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    static getIndexOfElementArrayById(id, array) {\n        // console.group('getIndexOfElementArrayById');\n        // console.log(id, array);\n        // console.groupEnd();\n        if (id && array.length > 0) {\n            for (let key in array) {\n                if (array.hasOwnProperty(key)) {\n                    if (parseInt(id) === array[key]['id']) {\n                        return key;\n                    }\n                }\n            }\n        } else {\n            return null;\n        }\n    }\n\n    static getIndexOfValue(fieldName, fieldValue, array) {\n        return array.findIndex(item => String(item[fieldName]) === String(fieldValue));\n    }\n\n    static getIndexOfField(fieldName, fieldValue, array) {\n        return array.findIndex(item => String(item[fieldName]) === String(fieldValue));\n    }\n\n    /**\n     * Return element of {array} by {fieldValue} of field {fieldName}\n     *\n     * @param fieldName\n     * @param fieldValue\n     * @param array\n     * @returns {*}\n     */\n    static findArrayElementByFieldValue(fieldName, fieldValue, array) {\n        const index = Helper.getIndexOfValue(fieldName, fieldValue, array);\n        return index !== -1 ? array[index] : null;\n    }\n\n    /**\n     * Wyszukuje instancję w tablicy instancji na podstawie daty bez względu w jakiej formie jest ona podana\n     *\n     * @param fieldName\n     * @param date\n     * @param array\n     * @returns {null|*}\n     */\n    static findArrayElementByFieldDate(fieldName, date, array) {\n        if (date) {\n            for (let key in array) {\n                if (array.hasOwnProperty(key)) {\n                    if (array[key][fieldName]) {\n                        let fieldDate = array[key][fieldName];\n\n                        const isBackendDate = !!fieldDate.date;\n                        if (isBackendDate) {\n                            fieldDate = new Date(fieldDate.date);\n                            // const backendDate = isBackendDate && !isNaN(Date.parse(fieldDate.date));\n                        }\n                        if (typeof date.getMonth === 'undefined') {\n                            date = new Date(date);\n                        }\n                        if (typeof fieldDate.getMonth === 'undefined') {\n                            fieldDate = new Date(fieldDate);\n                        }\n                        if (!isNaN(fieldDate.getMonth()) &&\n                            date.getFullYear() ===\n                            fieldDate.getFullYear()\n                            && date.getMonth() === fieldDate.getMonth()\n                            && date.getDate() === fieldDate.getDate()\n                        ) {\n                            return array[key];\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    static formatPeriod(period, date) {\n        return Helper.formatDate(date, 'invoicePeriod' + period)\n    }\n\n    static stringifyDate(date) {\n        return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n    }\n\n    /**\n     * Formatuje datę do użycia w kontrolkach\n     *\n     * @param date\n     * @param type\n     * @param changeYear\n     * @param changeMonth\n     * @returns {string|number}\n     */\n    static formatDate(date, type, changeYear = 0, changeMonth = 0) {\n        if (!date) {\n            return '';\n        }\n\n        const monthNames = [\"styczeń\", \"luty\", \"marzec\", \"kwiecień\", \"maj\", \"czerwiec\",\n            \"lipiec\", \"sierpień\", \"wrzesień\", \"październik\", \"listopad\", \"grudzień\",\n        ];\n        const quarterNames = [\"I kwartał\", \"II kwartał\", \"III kwartał\", \"IV kwartał\"];\n        let incrementing = 0;\n        if (date && date.date) {\n            incrementing = 1;\n            date = new Date(date.date);\n        }\n        if (typeof date === 'string') {\n            date = new Date(date);\n        }\n        const month = date.getMonth() + changeMonth;\n        const resultDate = {\n            year: date.getFullYear() + changeYear,\n            month: month,\n            day: date.getDate(),\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            current: (new Date(\n                date.getFullYear() + changeYear,\n                month,\n                date.getDate() + incrementing,\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds(),\n            )).toISOString().slice(0, 10),\n            firstDayMonth: (new Date(\n                date.getFullYear() + changeYear,\n                month,\n                1 + incrementing,\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds(),\n            )).toISOString().slice(0, 10),\n            lastDayMonth: new Date(\n                date.getFullYear() + changeYear,\n                month + 1,\n                incrementing,\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds(),\n            ).toISOString().slice(0, 10),\n        };\n\n        switch (type) {\n            case 'bookYear':\n                return resultDate.year;\n            case 'settlementPeriod':\n                return monthNames[resultDate.month] + ' ' + resultDate.year;\n            case 'invoicePeriodMonth':\n                return monthNames[resultDate.month];\n            case 'invoicePeriodQuarter':\n                return quarterNames[Math.floor(resultDate.month / 3) - 1];\n            case 'invoicePeriodYear':\n                return resultDate.year;\n            case 'settlementDate':\n            case 'navigationDate':\n                return resultDate.lastDayMonth;\n            default:\n                return resultDate.current;\n        }\n\n    }\n\n    const\n    actions = [\n        {action: 'companies', entity: 'company', collection: 'companies'},\n        {action: 'bank_accounts', entity: 'bankAccount', collection: 'bankAccounts'},\n        {action: 'contractors', entity: 'contractor', collection: 'contractors'},\n        {action: 'books', entity: 'book', collection: 'books'},\n        {action: 'settlements', entity: 'settlement', collection: 'settlements'},\n        {action: 'documents', entity: 'document', collection: 'documents'},\n        {action: 'invoices', entity: 'invoice', collection: 'invoices'},\n        {action: 'invoice_items', entity: 'invoiceItem', collection: 'invoiceItems'},\n        {action: 'intproofs', entity: 'intproof', collection: 'intproofs'},\n        {action: 'intproof_items', entity: 'intproofItem', collection: 'intproofs'},\n        {action: 'economic_events', entity: 'economicEvent', collection: 'economicEvents'},\n        {action: 'economic_operations', entity: 'economicOperation', collection: 'economicOperations'},\n    ];\n\n    static actionsEntity(actionName) {\n        console.log(actionName);\n        return Helper.actions[Helper.actions.findIndex(item => item.action === actionName)].entity;\n    }\n\n    static entitysAction(entityName) {\n        return Helper.actions[Helper.actions.findIndex(item => item.entity === entityName)].action;\n    }\n\n    static entitysCollection(entityName) {\n        return Helper.actions[Helper.actions.findIndex(item => item.entity === entityName)].collection;\n    }\n\n    static _handleComaUnitPrice(e) {\n        if (e.keyCode === 188 || e.keyCode === 190 || e.keyCode === 110) {\n            e.preventDefault();\n            const nextInput = document.getElementsByName(`${e.currentTarget.name}Penny`).item(0);\n            nextInput.focus();\n            nextInput.setSelectionRange(0, nextInput.value.length);\n        }\n    }\n\n    static comparePenny(document, col, showAsObject = false) {\n        if (document[col] === null) {\n            return '';\n        }\n        const unit = document[col]['unit'];\n        const penny = document[col]['penny'] !== null && document[col]['penny'] !== '' ? document[col]['penny'].toString().padStart(2, '0') : '00';\n        const value = parseInt(`${unit}${penny}`);\n        const float = value / 100;\n        if (showAsObject) {\n            return {\n                unit: unit,\n                penny: penny,\n            }\n        } else {\n            return Number.parseFloat(float.toString()).toFixed(2);\n        }\n    }\n\n    static sumColumn(settlements, col) {\n        const sum = settlements.reduce((total, settlement) => {\n            return total + parseFloat(Helper.comparePenny(settlement, 'col' + col));\n        }, 0);\n        return parseFloat(sum).toFixed(2);\n    }\n}","/**\n * @interface\n *\n * @property {string} type - typ konfigu\n * @property {ApiConfig} apiConfig - konfiguracja Api backendowego\n * @property {Object} fields - konfiguracja encji\n * @property {ItemConfig} item - konfiguracja encji\n * @property {CollectionConfig} collection - konfiguracja kolekcji\n * @property {FormConfig} form - konfiguracja kolekcji\n * @property {ValidationConfig} validation - konfiguracja kolekcji\n * @property {Object} [data] Optional - konfiguracja kolekcji\n */\nexport default class FormConfigInterface {\n    /** @type string */\n    type;\n    /** @type ApiConfig */\n    apiConfig;\n    /** @type Object */\n    fields;\n    /** @type ItemConfig */\n    item;\n    /** @type CollectionConfig */\n    collection;\n    /** @type FormConfig */\n    form;\n    /** @type ValidationConfig */\n    validation;\n    /** @type Object */\n    data;\n}","/**\n * @property {string} action\n */\nexport default class ApiConfig {\n    /** @type {string} - nazwa akcji */\n    action = \"\";\n    \n    /**\n     * @param {string} action\n     */\n    constructor(action) {\n        this.action = action;\n    }\n    \n}","/**\n * @property {string} action\n * @property {string} name\n * @property {string} label\n * @property {string} emptyValue\n */\nexport default class FieldConfig {\n    \n    /** @type {string} - typ pola */\n    type;\n    /** @type {string} - nazwa pola */\n    name;\n    /** @type {string} - etykieta pola */\n    label;\n    /** @type {string} - pusta wartość */\n    emptyValue;\n    \n    _widget;\n    \n    /**\n     * @param type - typ\n     * @param name - nazwa\n     * @param label - label\n     * @param emptyValue - pusta wartość\n     * @param [additionalOptions] - dodatkowe opcje\n     */\n    constructor(type, name, label, emptyValue, additionalOptions = null) {\n        this.type = type;\n        this.name = name;\n        this.label = label;\n        this.emptyValue = emptyValue;\n        if (additionalOptions) {\n            for (let key in additionalOptions) {\n                if (additionalOptions.hasOwnProperty(key)) {\n                    this[key] = additionalOptions[key];\n                }\n            }\n        }\n    }\n    \n    acceptVisitor = (widgetFactoryCoordinator) => {\n        // widgetFactoryCoordinator.visitField(this);\n        widgetFactoryCoordinator.setFieldWidget(this);\n    };\n    \n    setFieldWidget = (widget) => {\n        this._widget = widget;\n    }\n}","\nexport default class ItemConfig {\n    /** @type {string} - nazwa encji */\n    name = \"\";\n    /** @type {string} - tytuł wyświetlany */\n    title = \"\";\n    /** @type {string} nazwa encji w bazie danych */\n    entity = \"\";\n    /**\n     * @type {{footer: string, header: string, title: string}}\n     * @property {string|function} [header] - nazwa encji lub funkcja\n     * @property {string|function} [title] - nazwa encji lub funkcja\n     * @property {string|function} [footer] - nazwa encji lub funkcja\n     */\n    preview = {\n        type:   \"item\",\n        header: \"\",\n        title:  \"\",\n        footer: \"\",\n    };\n    \n    /**\n     *\n     * @param {string} name\n     * @param {string} title\n     * @param {string} entity\n     * @param {Object} [preview]\n     * @param {string|function} preview.type\n     * @param {string|function} preview.header\n     * @param {string|function} preview.title\n     * @param {string|function} preview.footer\n     * @param {string} [event] - obiekt eventów pochodzący z kontekstu\n     * @param {string} [handle] - obiekt handlerów pochodzących z kontekstu\n     */\n    constructor(name, title, entity, preview, event, handle) {\n        this.name = name;\n        this.title = title;\n        this.entity = entity;\n        this.preview = preview;\n        if (event) {\n            this.event = event;\n        }\n        if (handle) {\n            this.handle = handle;\n        }\n    }\n    \n}","/**\n * @property {string} name\n * @property {string} title\n * @property {string|array} emptyValue\n * @property {string} formName\n * @property {string} [parentForm]\n */\nexport default class CollectionConfig {\n    /** @type {string} - nazwa kolekcji */\n    name = \"\";\n    /** @type {string} - tytuł kolekcji */\n    title = \"\";\n    /** @type {string|array} emptyValue - domyślna wartość */\n    emptyValue = \"\";\n    /** @type {string} - nazwa formularza kolekcji */\n    formName = \"\";\n    /** @type {string|null} - nazwa formularza nadrzędnego */\n    parentForm = null;\n    /** @type {Object} - konfiguracja widoku formularza */\n    preview = {};\n    \n    /**\n     * @param {string} name\n     * @param {string} title\n     * @param {string|array} emptyValue\n     * @param {string} formName\n     * @param {string} preview\n     * @param {string} [parentForm]\n     */\n    constructor(name, title, emptyValue, formName, preview, parentForm) {\n        this.name = name;\n        this.title = title;\n        this.emptyValue = emptyValue;\n        this.formName = formName;\n        this.preview = preview;\n        this.parentForm = parentForm;\n    }\n    \n}","/**\n * #Konfiguracja walidacji w kontekście pola\n * ##Role\n * - required - czy jest niepuste <\n * - type consistency - czy zgadza się typ wartości\n * - value correctness - czy wartość jest poprawna\n *\n * @property {Object} fields - konfiguracja zasad walidacji pól\n */\nexport default class FieldsValidationConfig {\n    fields = {};\n    \n    /**\n     * Konfiguracja walidacji pola\n     *\n     * @param {Object} fields - konfiguracja zasad walidacji pól\n     */\n    constructor(fields) {\n        this.fields = fields;\n    }\n}","/**\n * #Konfiguracja walidacji w kontekście formularza\n * ##Role walidacji:\n * - depended - pole formularza jest zależne od innego\n *\n * @property {Object} [...arguments] - typ pola role validacji zdefiniowane obiektami klas ról\n * @see FormDependsRule\n *\n * @description **Warunki walidacji dla formularza:**\n * Każdy argument przekazany do konstruktora klasy powinien być instancją klasy roli\n * see: /App/Api/Component/ValidationRules/*\n */\nexport default class FormValidationConfig {\n    rules = [];\n    \n    /**\n     * Konfiguracja walidacji pola w kontekście formularza\n     *\n     * @param {Object} [arguments] - role validacji zdefiniowane obiektami klas ról\n     */\n    constructor() {\n        // console.log('arguments', arguments);\n        \n        //należy uwzględnić dowolną iloś argumentów/ról\n        for (let rule of arguments) {\n            this.rules.push(rule);\n        }\n    }\n}","/**\n * @name CollectionValidationConfig\n *\n * #Konfiguracja walidacji w kontekście kolekcji\n * ##Role walidacji:\n * - unique - see {@link CollectionUniqueRule}\n *\n * @property {Object} [...arguments] - typ pola role validacji zdefiniowane obiektami klas ról\n *\n * @description **Warunki walidacji dla formularza:**\n * Każdy argument przekazany do konstruktora klasy powinien być instancją klasy roli\n * see: ({@link /App/Api/Component/ValidationRules/} folder)\n */\nexport default class CollectionValidationConfig {\n    rules = [];\n    \n    /**\n     * Konfiguracja walidacji pola w kontekście formularza\n     *\n     * @param {[]} [arguments] - role validacji zdefiniowane obiektami klas ról\n     * @see CollectionUniqueRule\n     */\n    constructor() {\n        // console.log('arguments', arguments);\n        \n        //należy uwzględnić dowolną iloś argumentów/ról\n        for (let rule of arguments) {\n            this.rules.push(rule);\n        }\n    }\n}","import FieldsValidationConfig from \"./Validation/FieldsValidationConfig\";\nimport FormValidationConfig from \"./Validation/FormValidationConfig\";\nimport CollectionValidationConfig from \"./Validation/CollectionValidationConfig\";\n\n/**\n * Validation config should configure 3 areas:\n * ##1° fieldContext - ``(fields rules)``:\n *      *required for offline validation*\n *      • **required** - czy jest niepuste\n *      • **type consistency** - czy zgadza się typ wartości\n *      • **value correctness** - czy wartość jest poprawna\n *  ##2° itemContext - ``(how field depend on other fields in record)``\n *      *required for offline validation*\n *      np. isPartnership determinuje czy partnership jest required\n *      *Właściwie to ten przykład nie musi być walidowany, ponieważ załatwia go zachowanie kontrolek*\n *      *- Jeśli isPartnership to partnership jest włączony i wymagany*\n *      *- Jeśli nie isPartnership to partnership jest wyłączony i nawet nie trafia do walidacji*\n *  ##3° collectionContext - ``(how fields depend on other items fields)``\n *     *required for any validation*\n *     • np. __*isDefault*__ jest unikalne w kontekście kolekcji, tzn. może być tru tylko w jednym rekordzie\n *     • np. __*bankAccountName*__ jest unikalne w kontekście kolekcji, tzn. nie może się powtarzać w innych rekordach\n *     • np. __*accountNumber*__ jest unikalne w kontekście kolekcji, tzn. nie może się powtarzać w innych rekordach\n * @property {FieldsValidationConfig} fieldsRules - zasady walidacji pól\n * @property {FormValidationConfig} formRules - zasady walidacji pól w kontekście formularza\n * @property {CollectionValidationConfig} collectionRules - zasady walidacji pól w kontekście kolekcji\n */\nexport default class ValidationConfig {\n    \n    /**\n     * Constructor of ValidationConfig\n     *\n     * @param {[]} [arguments] - role walidacji zdefiniowane klasami strategii\n     */\n    constructor() {\n        // console.log('ValidationConfig.arguments', arguments);\n        for (let rules of arguments) {\n            if (rules instanceof FieldsValidationConfig) {\n                //zasady walidacji pól\n                this.fieldsRules = rules;\n            } else if (rules instanceof FormValidationConfig) {\n                //zasady walidacji pól w kontekście formularza\n                this.formRules = rules;\n            } else if (rules instanceof CollectionValidationConfig) {\n                //zasady walidacji pól w kontekście kolekcji\n                this.collectionRules = rules;\n            }\n        }\n    }\n    \n}","/**\n * #Konfiguracja walidacji w kontekście pola\n * ##Role\n * - required - czy jest niepuste <\n * - type consistency - czy zgadza się typ wartości\n * - value correctness - czy wartość jest poprawna\n * \n * @property {string} type - typ pola\n * @property {boolean} required - czy pole jest wymagane?\n * @property {RegExp} correcness - wzór do sprawdzenia poprawności wartości pola\n *  \n * @example ##type={wartość}\n * Może przyjmować wartości:\n *  'number' - pole <input> typu \"number\"\n *  'text' - pole <input> typu \"text\"\n *  'select' - pole <select>\n *  'date' - pole <input> typu \"date\"\n *  'checkbox' - pole <input> typu \"checkbox\"\n *  'radio' - pole <input> typu \"radio\"\n *  'collection' - kolekcja typu array\n *  \n *  @description **Warunki walidacji dla pola:**\n *  <table border=1 cellspacing=5 width=\"100%\">\n *      <tr>\n *          <th>type</th>\n *          <th>required</th>\n *          <th>type</th>\n *          <th>correctness</th>\n *      </tr>\n *      <tr>\n *          <td>***number***</td>\n *          <td>`value!==\"\"`</td>\n *          <td>`typeof () === 'number'`</td>\n *          <td>other rules</td>\n *      </tr>\n *      <tr>\n *          <td>***text***</td>\n *          <td>`value!==\"\"`</td>\n *          <td>`typeof () === 'string'`</td>\n *          <td>other rules</td>\n *      </tr>\n *      <tr>\n *          <td>***select***</td>\n *          <td>`value!==\"\"`</td>\n *          <td>`typeof () === 'string'`</td>\n *          <td>other rules</td>\n *      </tr>\n *      <tr>\n *          <td>***date***</td>\n *          <td>`value!==\"\"`</td>\n *          <td>`typeof () === 'datetime'`</td>\n *          <td>other rules</td>\n *      </tr>\n *      <tr>\n *          <td>***checkbox***</td>\n *          <td>`N/D`</td>\n *          <td>`typeof () === 'bool'`</td>\n *          <td>other rules</td>\n *      </tr>\n *      <tr>\n *          <td>***radio***</td>\n *          <td>`N/D`</td>\n *          <td>`typeof () === 'number'`</td>\n *          <td>other rules</td>\n *      </tr>\n *      <tr>\n *          <td>***collection***</td>\n *          <td>`value.length > 0`</td>\n *          <td>`typeof () === 'array'`</td>\n *          <td>other rules</td>\n *      </tr>\n *  </table>\n */\nexport default class FieldRules {\n    \n    /**\n     * Konfiguracja walidacji pola\n     *\n     * @param {string} type - typ pola\n     * @param {boolean} [required] - (opcjonalny) - czy pole jest wymagane\n     * @param {RegExp} [correctness] - (opcjonalny) - RegExp do sprawdzenia poprawności wartości\n     */\n    constructor(type, required, correctness) {\n        this.type = type;\n        if (required !== undefined) this.required = required;\n        if (correctness !== undefined) this.correctness = correctness;\n    }\n}","export class ValidatorRulesException {\n    displayName = 'ValidatorRulesException';\n    message = 'Coś jest nie tak';\n\n    constructor(message, errorData) {\n        if (message) {\n            this.message = message;\n        }\n        if (errorData !== undefined) {\n            console.log('errorData:', errorData);\n        }\n        throw new Error(`[${this.displayName}]: ${this.message}`);\n    }\n}\n\nexport class RuleException {\n    displayName = 'RulesException';\n    message = 'Coś jest nie tak';\n\n    constructor(message, errorData) {\n        if (message) {\n            this.message = message;\n        }\n        if (errorData !== undefined) {\n            console.log('errorData:', errorData);\n        }\n        throw new Error(`[${this.displayName}]: ${this.message}`);\n    }\n}\n\n/**\n * Klasa definiująca interfejs odpowiedzi walidacji roli\n */\nexport class ResultRule {\n    rule;\n    success = true;\n    message = '';\n\n    constructor(ruleName) {\n        this.rule = ruleName;\n    }\n\n    /**\n     * Ustawia komunikat błędu\n     *\n     * @param {string} message\n     */\n    setError = (message) => {\n        this.message = message;\n        this.success = false;\n    };\n\n    getAnswer = () => {\n        if (this.success) {\n            // Log.success(this.success);\n            return {\n                success: this.success,\n            };\n        } else {\n            // Log.error(this.message);\n            return {\n                success: this.success,\n                message: this.message,\n            };\n        }\n    }\n}\n\nexport default class ValidationRules {\n    displayName = 'ValidationRules';\n    rules = [];\n\n    /**\n     * Wykonuje walidację roli\n     *\n     * @description Waliduje wartość w określonym kontekście wg zdefiniowanej zasady\n     *\n     * @param {string} contextName - kontekst zasady (field, form, collection)\n     * @param {string} rule - nazwa zasady\n     * @param {string} value - wartość do sprawdzenia\n     * @param {Object} expected - wartość oczekiwana\n     * @param {Object} [contextData] - obiekt z danymi kontekstu sprawdzania\n     * @return {boolean} - wartość logiczna sprawdzenia\n     * @throws ValidatorRulesException\n     */\n    validateRule = (contextName, rule, value, expected, contextData) => {\n        switch (contextName) {\n            case 'field': {\n                switch (rule) {\n                    case 'type':\n                        return this._field.checkType(value, expected);\n                    case 'required':\n                        return this._field.checkRequired(value, expected);\n                    case 'correctness':\n                        return this._field.checkCorrectness(value, expected);\n                    default:\n                        throw new ValidatorRulesException(`Cannot validate rule without rule !!!`);\n                }\n            }\n            case 'form': {\n                if (contextData === undefined) {\n                    throw new ValidatorRulesException(`Cannot validate form rules without 'contextData' !!!`);\n                }\n                switch (rule) {\n                    case 'depends':\n                        //config znajduje się w zmiennej expected\n                        return this._form.checkDepends(value, expected, contextData);\n                    case 'test':\n                        break;\n                    default:\n                        throw new ValidatorRulesException(`Cannot validate rule without rule !!!`);\n                }\n                break;\n            }\n            case 'collection': {\n                if (contextData === undefined) {\n                    throw new ValidatorRulesException(`Cannot validate collection rules without 'contextData' !!!`);\n                }\n                // Log.info({\n                //     inputData: {\n                //         context: context,\n                //         rule: rule,\n                //         value: value,\n                //         expected: expected,\n                //         contextData: contextData,\n                //     },\n                // });\n\n                switch (rule) {\n                    case 'required':\n                        return this._collection.checkRequired(value, expected, contextData);\n                    case 'unique':\n                        return this._collection.checkUnique(value, expected, contextData);\n                    case 'requiredValue':\n                        return this._collection.checkRequiredValue(value, expected, contextData);\n                    default:\n                        throw new ValidatorRulesException(`Cannot validate rule without rule !!!`);\n                }\n            }\n            default:\n                throw new Error(`Undefined contextName ${contextName}`);\n        }\n    };\n\n    _field = {\n        /**\n         * Sprawdza zgodność typu wartości z wartością oczekiwaną\n         *\n         * @param value - wartość do sprawdzenia\n         * @param expected - wartość oczekiwana\n         * @return {boolean} boolean - wartość logiczna sprawdzenia\n         * @private\n         */\n        checkType: (value, expected) => {\n            let translatedType = null;\n            if (typeof value === 'object') {\n                if (Array.isArray(value)) {\n                    if (value[0] instanceof Date) {\n                        translatedType = 'date';\n                    } else {\n                        translatedType = 'collection';\n                    }\n                }\n            } else if (typeof value === 'string') {\n                translatedType = 'text';\n            } else if (typeof value === 'boolean') {\n                translatedType = 'checkbox';\n            } else if (value === undefined) {\n                translatedType = null;\n            } else {\n                translatedType = typeof value;\n            }\n            return translatedType === expected || translatedType === null;\n        },\n\n        /**\n         * Sprawdza czy wartość 'value' posiada zawartość zgodnie oczekiwaniem expected\n         *\n         * @param value - wartość do sprawdzenia\n         * @param expected - wartość oczekiwana\n         * @return {boolean} - wartość logiczna sprawdzenia\n         * @private\n         */\n        checkRequired: (value, expected) => {\n            console.log('value', value);\n            console.log('expected', expected);\n            console.log('checking Required for field result:', (value !== \"\" && value !== null) === expected || expected === undefined);\n            return (value !== \"\" && value !== null) === expected || expected === undefined;\n        },\n\n        /**\n         * TODO: Zaimplementować kiedy będzie potrzebne\n         *\n         * @param value\n         * @param expected\n         * @return {boolean}\n         */\n        checkCorrectness: (value, expected) => {\n            console.error('TODO: sprawdzanie poprawności wartości');\n            return typeof value === expected;\n        },\n    };\n\n    _form = {\n        /**\n         * Waliduje formularz zgodnie ze zdefiniowanymi zasadami\n         *\n         * @param value\n         * @param {Object} rule - zasady walidacji\n         * @param {Object} formData - dane całego formularza do wykorzystania przez zasady walidacji\n         */\n        checkDepends: (value, rule, formData) => {\n            // Log.intention([this.displayName,\n            //     `Mamy dane:`,\n            //     `value=\"${value}\"`,\n            //     `rule`, rule,\n            //     `formData`, formData,\n            //     `.. i co dalej?`,\n            //     `Zasada powinna zawierać:`,\n            //     `warunek - when`, rule['when'],\n            //     `oraz akcję do sprawdzenia na bieżącym polu - then`, rule['then'],\n            //     `zatem sprawdzenie będzie polegać na wykonaniu warunku`,\n            //     `i przy jego spełnieniu sprawdzić czy rola dla pola (this._field.check(what?)) jest valid`,\n            //     `...`,\n            //     `więc żeby uprościć proces analizy oraz`,\n            //     `właściwie udokumentować dowolnie skomplikowaną zasadę`,\n            //     `definicję - algorytm (funkcję realizującą) powinniśmy umieścić razem z konfiguracją zasady`,\n            //     `powinna ona być pod sprytnym skrótem rule.algorithm:`, rule.algorithm,\n            //     `...`,\n            //     `a wogóle znamy tutja this._field`, this._field,\n            // ]);\n\n            return rule.algorithm(value, rule, formData)(this._field);\n        },\n    };\n\n    _collection = {\n        /**\n         *\n         * @param value\n         * @param {CollectionRequiredRule} rule - obiekt zasady walidacji\n         * @param {Object} contextData - obiekt zawierający nazwę pola oraz dane kolekcji\n         * @return {Object} - obiekt rezultatu wykonania algorytmu walidacji zasady\n         */\n        checkRequired: (value, rule, contextData) => {\n            const algorithmResult = rule.algorithm(value, contextData);\n            console.log('Collection.checkRequired algorithmResult=', algorithmResult);\n            return algorithmResult;\n        },\n        /**\n         *\n         * @param value - wartość do sprawdzenia spłeniania zasady\n         * @param {CollectionUniqueRule} rule - obiekt zasady\n         * @param {Object} contextData - obiekt zawierający nazwę pola oraz dane kolekcji\n         * @return {Object} - obiekt rezultatu wykonania algorytmu walidacji zasady\n         */\n        checkUnique: (value, rule, contextData) => {\n            const algorithmResult = rule.algorithm(value, contextData);\n            console.log('Collection.checkUnique algorithmResult=', algorithmResult);\n            return algorithmResult;\n        },\n        /**\n         *\n         * @param value\n         * @param {CollectionRequiredRule} rule - obiekt zasady walidacji\n         * @param {Object} contextData - obiekt zawierający nazwę pola oraz dane kolekcji\n         * @return {Object} - obiekt rezultatu wykonania algorytmu walidacji zasady\n         */\n        checkRequiredValue: (value, rule, contextData) => {\n            const algorithmResult = rule.algorithm(value, contextData);\n            console.log('Collection.checkRequiredValue algorithmResult=', algorithmResult);\n            return algorithmResult;\n        },\n    };\n}","/**\n * Zasada walidacji unikalności pola formularza w kontekście kolekcji rekordów\n */\nimport {ResultRule} from \"../RulesClass\";\n\n/**\n * @class\n * @name CollectionUniqueRule\n * @description Klasa definiująca zasadę walidacji '*unique*' dla kontekstu '*collection*'\n * @tutorial collectionUniqueRule\n */\nexport default class CollectionUniqueRule {\n    displayName = 'CollectionUniqueRule';\n\n    /**\n     * #Algorytm walidacji zasady 'unique' dla kolekcji\n     *\n     * @param value - wartość do sprawdzenia\n     * @param contextData - Obiekt zawierający nazwę pola oraz dane kolekcji\n     * @return {ResultRule}\n     */\n    algorithm = (value, contextData) => {\n        // Log.intention([this.displayName,\n        //     `Mamy dane:`,\n        //     `fieldName = \"${contextData.fieldName}\"`,\n        //     `value=\"${value}\"`,\n        //     `typeof value=\"${typeof value}\"`,\n        //     `contextData`, contextData,\n        // ]);\n        const algorithmResult = new ResultRule('required');\n        \n        if (contextData.collectionData) {\n            for (let item of contextData.collectionData) {\n                if (item[contextData.fieldName] === value) {\n                    algorithmResult.setError(`Ta wartość nie może się powtarzać w kolekcji`);\n                    break;\n                }\n            }\n        }\n        \n        return algorithmResult.getAnswer();\n    };\n}","/**\n * Zasada walidacji wymagalności pola formularza w kontekście kolekcji rekordów\n */\nimport {ResultRule} from \"../RulesClass\";\n\n/**\n * @class\n * @name CollectionUniqueRule\n * @description Klasa definiująca zasadę walidacji '*unique*' dla kontekstu '*collection*'\n * @tutorial collectionRequiredRule\n */\nexport default class CollectionRequiredRule {\n    displayName = 'CollectionRequiredRule';\n\n    \n    /**\n     * #Algorytm walidacji zasady 'required' dla kolekcji\n     *\n     * @param value - wartość do sprawdzenia\n     * @param contextData - Obiekt zawierający nazwę pola oraz dane kolekcji\n     * @return {ResultRule}\n     */\n    algorithm = (value, contextData) => {\n        // Log.intention([this.displayName,\n        //     `Mamy dane:`,\n        //     `fieldName = \"${contextData.fieldName}\"`,\n        //     `value=\"${value}\"`,\n        //     `typeof value=\"${typeof value}\"`,\n        //     `contextData`, contextData,\n        // ]);\n        \n        const algorithmResult = new ResultRule('required');\n        \n        if (!value || (Array.isArray(value) && value.length === 0) || !Array.isArray(value)) {\n            algorithmResult.setError('W kolekcji musi istnieć przynajmniej jeden element');\n        }\n        \n        // if (contextData.collectionData.length === 0) {\n        //     algorithmResult.setError('W kolekcji wymagany jest przynajmniej jeden element');\n        // }\n        // for (let item of contextData.collectionData) {\n        //     if (item[contextData.fieldName] === value) {\n        //         algorithmResult.setError('W kolekcji wymagany jest przynajmniej jeden element');\n        //         break;\n        //     }\n        // }\n        \n        return algorithmResult.getAnswer();\n    };\n}","/**\n * Zasada walidacji pola formularza zależnego od wartości innego pola\n */\nimport {ResultRule} from \"../RulesClass\";\nimport FormDependsRuleException from \"./Exceptions/FormDependsRuleException\";\n\n/**\n * @class\n * @name FormDependsRule\n * @description Klasa definiująca zasadę walidacji '*depends*' dla kontekstu '*form*'\n * @tutorial formDependsRule\n */\nexport default class FormDependsRule {\n    displayName = 'FormDependsRule';\n    when;\n    then;\n\n    /**\n     * Określa rolę zależności w kontekście formularza\n     *\n     * @param {Object} when - struktura warunku roli\n     * @param {Object} then - struktura akcji do wykonania dla spełnionego warunku\n     */\n    constructor(when, then) {\n        this.when = when;\n        this.then = then;\n    }\n\n    /**\n     * #Algorytm walidacji zasady 'depends' dla formularza\n     * Dane wejściowe:\n     * - when - warunek który należy sprawdzić aby wykonać akcję sprawdzania docelowego pola\n     * - then - walidacja docelowego pola\n     *  @example\n     *  when {\n     *      field: ? - nazwa pola którego wartośc należy sprawdić\n     *      value: ? - wartość pola które należy sprawdić\n     *  }\n     *  then = {\n     *      required: ? - algorytm walidacji w kontekście 'field', e.g. checkRequired\n     *  }\n     * @param value\n     * @param {Object} rule - zasady walidacji\n     * @param {Object} formData - dane całego formularza do wykorzystania przez zasady walidacji\n     *\n     * @return {Object} - zwraca wartość wyliczoną wg funkcji wykonującej prostą walidację na polu formularza\n     * @tutorial /assets/docs/tutorials/formDependsRule.algorithm\n     * Nazwa tej funkcji to translacje indeksu w this.then:\n     * - required - wykonuje funkcję Rules._field.checkRequired(whenResult)\n     *\n     */\n    algorithm = (value, rule, formData) => {\n        // Log.intention([this.displayName,\n        //     `Mamy dane:`,\n        //     `value=\"${value}\"`,\n        //     `rule`, rule,\n        //     `formData`, formData,\n        // ]);\n        const whenResult = formData[this.when.field] === this.when.value;\n        const algorithmResult = new ResultRule('depends');\n        console.log('whenResult', whenResult);\n        if (whenResult) {\n            return (fieldFunctions) => {\n                const fieldChecker = Object.keys(this.then)[0];\n                //TODO: fix with new helper in app\n                // const fieldValidationResult = fieldFunctions[`check${Helper.ucfirst(fieldChecker)}`](value, this.then[fieldChecker]);\n                const fieldValidationResult = `fieldChecker`;\n\n                if (!fieldValidationResult) {\n                    switch (fieldChecker) {\n                        case 'type':\n                            algorithmResult.setError(`To pole ma niewłaściwy typ danych`);\n                            break;\n                        case 'required':\n                            algorithmResult.setError(`To pole jest wymagane`);\n                            break;\n                        case 'correctness':\n                            algorithmResult.setError(`To pole ma nieprawidłową wartość`);\n                            break;\n                        default:\n                            throw new FormDependsRuleException(`Niezdefiniowany algorytm`, fieldChecker);\n                    }\n                }\n                return algorithmResult.getAnswer();\n            };\n        } else {\n            return () => {\n                return algorithmResult.getAnswer();\n            };\n        }\n    };\n}","/**\n * @property {string} name\n * @property {string} type - (item, collection)\n * @property {string} decorator\n */\nexport default class FormConfig {\n    /** @type {string} - nazwa formularza */\n    name = \"\";\n    /** @type {string} - typ formularza - może to być item lub collection */\n    type = \"\";\n    /** @type {Object} - konfiguracja widoku formularza */\n    decorator = {};\n    \n    /**\n     * @param {string} name\n     * @param {string} type\n     * @param {string} decorator\n     */\n    constructor(name, type, decorator) {\n        this.name = name;\n        this.type = type;\n        this.decorator = decorator;\n    }\n    \n}","/**\n * Klasa Konfiguracji kontekstu konta bankowego\n *\n * @implements FormConfigInterface\n *\n * @fileOverview Klasa Konfiguracji kontekstu konta bankowego\n */\nimport FormConfigInterface from \"./FormConfigInterface\";\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport CollectionValidationConfig from \"./Element/Validation/CollectionValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport CollectionUniqueRule from \"../../Strategy/Validator/Strategy/Rules/CollectionUniqueRule\";\nimport FormConfig from \"./Element/FormConfig\";\n\n/**\n * Klasa konfiguracji kontekstu konta bankowego\n * @description bankAccount - powinien określać:\n * - *apiConfig*  - ustawienia Api backendowego\n * - *fields*     - konfigurację pól\n * - *item*       - ustawienia pojedynczego bankAccount\n * - *collection* - ustawienia kolekcji bankAccounts\n * - *validation* - reguły walidacji w kontekstach:\n *      1° **[fieldContext]** (fields rules):\n *          *required for offline validation*\n *          • **required** - czy jest niepuste\n *          • **type consistency** - czy zgadza się typ wartości\n *          • **value correctness** - czy wartość jest poprawna\n *      2° **[itemContext]** (how field depend on other fields in record)\n *          *required for offline validation*\n *          • np. isPartnership determinuje czy partnership jest required\n *      3° **[collectionContext]** (how fields depend on other items fields)\n *          *required for any validation*\n *          •\n *\n *\n * @implements FormConfigInterface\n *\n */\nexport default class BankAccountConfig extends FormConfigInterface {\n    type = 'entity';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'bank_accounts',\n    );\n    \n    fields = {\n        id:              new FieldConfig('hidden', 'id', 'ID', null),\n        bankAccountName: new FieldConfig('text', 'bankAccountName', 'Nazwa konta bankowego', ''),\n        accountNumber:   new FieldConfig('text', 'accountNumber', 'Numer konta', ''),\n        bankName:        new FieldConfig('text', 'bankName', 'Nazwa banku', ''),\n        isDefault:       new FieldConfig('checkbox', 'isDefault', 'Konto domyślne', false),\n    };\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'bankAccount',\n        'Konto bankowe',\n        'BankAccount',\n        {\n            type:           'radio',\n            defaultChecked: 'isDefault',\n            data:           {\n                header: \"bankAccountName\",\n                title:  \"accountNumber\",\n                footer: null,\n            },\n            emptyValue:     {\n                title: \"Zaznacz domyślne\",\n            },\n            actions:        {\n                left:  {\n                    delete: {\n                        color:  'red',\n                        label:  'Usuń',\n                        icon:   'fad fa-trash',\n                        action: 'bankAccount',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color:  'orange',\n                        label:  'Edytuj',\n                        icon:   'fad fa-pencil',\n                        action: 'bankAccount',\n                    },\n                },\n            },\n        },\n    );\n    \n    collection = new CollectionConfig(\n        'bankAccounts',\n        'Konta bankowe',\n        [],\n        'bankAccount',\n        {\n            title:   {\n                new:  'Nowe konto bankowe',\n                edit: 'Edycja konta bankowego',\n            },\n            actions: {\n                new: {\n                    color:  'green',\n                    label:  'Dodaj',\n                    icon:   'fal fa-plus',\n                    action: '/form/bankAccount/',\n                },\n            },\n        },\n        'company',\n    );\n    \n    form = new FormConfig(\n        'bankAccount',\n        'sheet',\n    );\n    \n    /**\n     * Konfiguracja walidacji\n     * @type {ValidationConfig}\n     */\n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id:              new FieldRules('number'),\n            bankAccountName: new FieldRules('text', true),\n            accountNumber:   new FieldRules('text', true),\n            bankName:        new FieldRules('text', true),\n            isDefault:       new FieldRules('checkbox'),\n        }),\n        new CollectionValidationConfig({\n            bankAccountName: new CollectionUniqueRule(),\n            accountNumber:   new CollectionUniqueRule(),\n            // isDefault:       new CollectionRequiredValueRule(true), \n            // - should be validated when company form is submitted\n        }),\n    );\n    \n    data = null;\n}","import FormConfigInterface from \"./FormConfigInterface\";\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport FormConfig from \"./Element/FormConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport FormValidationConfig from \"./Element/Validation/FormValidationConfig\";\nimport FormDependsRule from \"../../Strategy/Validator/Strategy/Rules/FormDependsRule\";\nimport CollectionValidationConfig from \"./Element/Validation/CollectionValidationConfig\";\nimport CollectionUniqueRule from \"../../Strategy/Validator/Strategy/Rules/CollectionUniqueRule\";\n\n/**\n * Klasa konfiguracji kontekstu kontrahenta\n *\n * @implements FormConfigInterface\n * \n */\nexport default class ContractorConfig extends FormConfigInterface {\n    type = 'entity';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'contractors',\n    );\n    \n    fields = {\n        id:            new FieldConfig('hidden', 'id', 'ID', null),\n        shortcut:      new FieldConfig('text', 'shortcut', 'Nazwa firmy', ''),\n        companyName:   new FieldConfig('text', 'companyName', 'Nazwa firmy', ''),\n        isPartnership: new FieldConfig('toggle', 'isPartnership', 'Spółka', false, {\n            simple: true,\n            event:  {\n                afterChange: 'isPartnershipChanged',\n            },\n        }),\n        partnership:   new FieldConfig('selectToggle', 'partnership', 'Rodzaj spółki', '', {\n            options:   [\n                {value: '', text: ''},\n                {value: 'sa', text: 'S.A.'},\n                {value: 'zoo', text: 'Sp. z o.o.'},\n            ],\n            toggledBy: {\n                field: 'isPartnership',\n                when:  {\n                    disabled: false,\n                },\n            },\n        }),\n        street:        new FieldConfig('text', 'street', 'Ulica', ''),\n        house:         new FieldConfig('text', 'house', 'Nr domu', ''),\n        appartment:    new FieldConfig('text', 'appartment', 'Nr lokalu', ''),\n        postalCode:    new FieldConfig('text', 'postalCode', 'Kod pocztowy', ''),\n        city:          new FieldConfig('text', 'city', 'Miejscowość', ''),\n        nip:           new FieldConfig('text', 'nip', 'NIP', ''),\n        regon:         new FieldConfig('text', 'regon', 'REGON', ''),\n    };\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'contractor',\n        'Kontrahent',\n        'ContractorAccount',\n        {\n            type:       'simple',\n            data:       {\n                header: \"nip\",\n                title:  \"companyName\",\n                // footer: (item) => Helper.parseAddress(item),\n            },\n            emptyValue: {\n                title: \"Wybierz nabywcę\",\n            },\n            actions:    {\n                left:  {\n                    delete: {\n                        color:  'red',\n                        label:  'Usuń',\n                        icon:   'fad fa-trash',\n                        action: 'contractor',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color:  'orange',\n                        label:  'Edytuj',\n                        icon:   'fad fa-pencil',\n                        action: 'contractor',\n                    },\n                },\n            },\n        },\n    );\n    \n    /** @type {CollectionConfig} - konfiguracja kolekcji  */\n    collection = new CollectionConfig(\n        'contractors',\n        'Kontrahenci',\n        [],\n        'contractor',\n        {\n            title:   {\n                new:  'Nowy kontrahent',\n                edit: 'Edycja kontrahenta',\n            },\n            actions: {\n                new: {\n                    color:  'green',\n                    label:  'Dodaj',\n                    icon:   'fal fa-plus',\n                    action: '/form/contractor/',\n                },\n            },\n        },\n        'company',\n    );\n    \n    form = new FormConfig(\n        'contractor',\n        'item',\n        'popup',\n    );\n    \n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id:            new FieldRules('number'),\n            shortcut:      new FieldRules('text'),\n            companyName:   new FieldRules('text', true),\n            isPartnership: new FieldRules('checkbox'),\n            partnership:   new FieldRules('text'),\n            street:        new FieldRules('text', true),\n            house:         new FieldRules('text', true),\n            appartment:    new FieldRules('text'),\n            postalCode:    new FieldRules('text', true),\n            city:          new FieldRules('text', true),\n            nip:           new FieldRules('text', true),\n            regon:         new FieldRules('text'),\n        }),\n        new FormValidationConfig({\n            partnership: new FormDependsRule(\n                {field: 'isPartnership', value: true},\n                {required: true},\n            ),\n        }),\n        new CollectionValidationConfig({\n            companyName: new CollectionUniqueRule(),\n            nip:         new CollectionUniqueRule(),\n        }),\n    );\n    \n    data = {};\n}","import FormConfigInterface from \"./FormConfigInterface\";\n\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport CollectionValidationConfig from \"./Element/Validation/CollectionValidationConfig\";\nimport FormValidationConfig from \"./Element/Validation/FormValidationConfig\";\n\nimport CollectionUniqueRule from \"../../Strategy/Validator/Strategy/Rules/CollectionUniqueRule\";\nimport CollectionRequiredRule from \"../../Strategy/Validator/Strategy/Rules/CollectionRequiredRule\";\nimport FormDependsRule from \"../../Strategy/Validator/Strategy/Rules/FormDependsRule\";\n\nimport FormConfig from \"./Element/FormConfig\";\nimport BankAccountConfig from \"./BankAccountConfig\";\nimport ContractorConfig from \"./ContractorConfig\";\nimport Helper from \"../../../Plugin/Helpers/Helper\";\n\n\n\n/**\n * Klasa konfiguracji kontekstu firmy\n *\n * @implements FormConfigInterface\n */\nexport default class CompanyConfig extends FormConfigInterface {\n    type = 'entity';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'companies',\n    );\n    \n    fields = {\n        id:            new FieldConfig('hidden', 'id', 'ID', null),\n        companyName:   new FieldConfig('text', 'companyName', 'Nazwa firmy', ''),\n        isPartnership: new FieldConfig('toggle', 'isPartnership', 'Spółka', false, {\n            simple: true,\n            event:  {\n                afterChange: 'isPartnershipChanged',\n            },\n        }),\n        partnership:   new FieldConfig('selectToggle', 'partnership', 'Rodzaj spółki', '', {\n            options:   [\n                {value: '', text: ''},\n                {value: 'sa', text: 'S.A.'},\n                {value: 'zoo', text: 'Sp. z o.o.'},\n            ],\n            toggledBy: {\n                field: 'isPartnership',\n                when:  {\n                    disabled: false,\n                },\n            },\n        }),\n        street:        new FieldConfig('text', 'street', 'Ulica', ''),\n        house:         new FieldConfig('text', 'house', 'Nr domu', ''),\n        appartment:    new FieldConfig('text', 'appartment', 'Nr lokalu', ''),\n        postalCode:    new FieldConfig('text', 'postalCode', 'Kod pocztowy', ''),\n        city:          new FieldConfig('text', 'city', 'Miejscowość', ''),\n        nip:           new FieldConfig('text', 'nip', 'NIP', ''),\n        regon:         new FieldConfig('text', 'regon', 'REGON', ''),\n        foundingDate:  new FieldConfig('datepicker', 'foundingDate', 'Data założenia', null),\n        bankAccounts:  new BankAccountConfig(),\n        contractors:   new ContractorConfig(),\n    };\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'company',\n        'Firma',\n        'Company',\n        {\n            type:       \"radio\",\n            data:       {\n                header:   \"\",\n                title:    (item) => Helper.fullName(item),\n                after:    \"nip\",\n                subtitle: \"\", // only for mediaList\n                text:     (item) => Helper.parseAddress(item), // only for mediaList\n                footer:   \"\",\n            },\n            emptyValue: {\n                title: \"Wybierz firmę\",\n            },\n            actions:    {\n                left:  {\n                    delete: {\n                        color:  'red',\n                        label:  'Usuń',\n                        icon:   'fad fa-trash',\n                        action: 'company',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color:  'orange',\n                        label:  'Edytuj',\n                        icon:   'fad fa-pencil',\n                        action: 'company',\n                    },\n                },\n            },\n        },\n        'companyChange',\n    );\n    \n    /** @type {CollectionConfig} - konfiguracja kolekcji  */\n    collection = new CollectionConfig(\n        'companies',\n        'Firmy',\n        [],\n        'company',\n        {\n            title:   {\n                new:  'Nowa firma',\n                edit: 'Edycja firmy',\n            },\n            actions: {\n                new: {\n                    color:  'green',\n                    label:  'Dodaj',\n                    icon:   'fal fa-plus',\n                    action: '/form/company/',\n                },\n            },\n        },\n    );\n    \n    form = new FormConfig(\n        'company',\n        'item',\n        'popup',\n    );\n    \n    /**\n     * Konfiguracja walidacji\n     * @description\n     * ##Powinny być trzy konteksty walidacji:\n     * 1. ###fieldsConfig\n     *      Konfiguracja walidacji pól formularza\n     * 2. ###formConfig\n     *      Konfiguracja walidacji formularza\n     * 3. ###collectionConfig\n     *      Konfiguracja walidacji kolekcji\n     * @type {ValidationConfig}\n     */\n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id:            new FieldRules('number'),\n            owner:         false,\n            companyName:   new FieldRules('text', true),\n            isPartnership: new FieldRules('checkbox'),\n            partnership:   new FieldRules('text'),\n            street:        new FieldRules('text', true),\n            house:         new FieldRules('text', true),\n            appartment:    new FieldRules('text'),\n            postalCode:    new FieldRules('text', true),\n            city:          new FieldRules('text', true),\n            nip:           new FieldRules('text', true),\n            regon:         new FieldRules('text'),\n            foundingDate:  new FieldRules('date', true),\n            bankAccounts:  new FieldRules('collection', true),\n            contractors:   new FieldRules('collection'),\n        }),\n        new FormValidationConfig({\n            partnership: new FormDependsRule(\n                {field: 'isPartnership', value: true},\n                {required: true},\n            ),\n        }),\n        new CollectionValidationConfig({\n            companyName:  new CollectionUniqueRule(),\n            nip:          new CollectionUniqueRule(),\n            bankAccounts: new CollectionRequiredRule(),\n        }),\n    );\n    \n    data = {\n        collections: {\n            company: [\n                'contractors',\n                'bankAccounts',\n                'economicEvents',\n            ],\n        },\n    };\n}","import React from \"react\";\nimport {BlockTitle, Icon, Link, List, ListGroup, ListItem, Navbar, Page, Panel, View} from \"framework7-react\";\nimport * as PropTypes from \"prop-types\";\nimport Helper from \"../../Plugin/Helpers/Helper\";\nimport CompanyConfig from \"../../Patterns/Facade/FormConfig/CompanyConfig\";\n\nexport default class PanelRight extends React.Component {\n    displayName = 'PanelRight';\n    static propTypes = {\n        display: PropTypes.func,\n        data: PropTypes.object,\n        state: PropTypes.object,\n        config: PropTypes.object,\n        app: PropTypes.object,\n        widgetFactory: PropTypes.object,\n    };\n    display;\n\n    render() {\n        if (this.props.app.displayable('panelLeft')) {\n            return <Panel right cover themeLight>\n                <View>\n                    <Page>\n                        <BlockTitle>Navigacja OFF-LINE</BlockTitle>\n                        <List>\n                            <ListItem link=\"#\" title=\"Jakiś link1\">\n                                <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                            </ListItem>\n                            <ListItem link=\"#\" title=\"Jakiś link2\">\n                                <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                            </ListItem>\n                            <ListItem link=\"#\" title=\"Jakiś lin2k\">\n                                <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                            </ListItem>\n\n                            <ListItem divider title=\"Divider Here\"/>\n\n                            <ListItem link=\"#\" title=\"Jakiś link\">\n                                <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                            </ListItem>\n                        </List>\n                    </Page>\n                </View>\n            </Panel>\n        }\n        this.display = this.props.app.displayable(this.displayName);\n        // console.log('this.props', this.props);\n        // eslint-disable-next-line no-unused-vars\n        let companySelected = null;\n        if (this.props.data.current.company) {\n            companySelected = {\n                field: 'companyName',\n                value: this.props.data.current.company && this.props.data.current.company.id,\n                // index: this.props.app.methods.getIndexOfElementArrayById(this.props.data.current.company.id, this.props.data.collection.company),\n                index: Helper.getIndexOfElementArrayById(this.props.data.current.company.id, this.props.data.collection.company),\n            };\n            // console.log('companySelected', companySelected);\n        }\n\n\n        const CompanyCollectionWidget = this.props.app.widget\n            .SwipeableCollection('accordion')\n            .withConfig(new CompanyConfig())\n            .withEvents(this.props.app.event)\n            .withHandlers(this.props.app.handle)\n            .buildWidget()\n        ;\n\n        // console.log('this.props.handle', this.props.handle);\n        return (\n            <React.Fragment>\n                <Panel right cover themeLight>\n                    <View>\n                        <Page>\n                            <Navbar title=\"Operations\" subtitle=\"Useful actions or nothing\">\n                                {!this.props.app.online &&\n                                <Link slot=\"nav-right\" color={this.props.app.online ? 'black' : 'red'}>\n                                    <Icon icon={`fad fa-wifi${this.props.app.online ? '' : '-slash'}`}/>\n                                </Link>}\n                            </Navbar>\n                            <List>\n                                <ListGroup>\n                                    {this.props.display('buttonCompany') && (\n                                        <CompanyCollectionWidget item field=\"company\" data={{\n                                            items: this.props.app.api.resource.data.collection.company,\n                                            current: this.props.app.api.resource.data.current,\n                                        }}/>\n                                    )}\n\n\n                                    {this.props.display('buttonLogout') &&\n                                    <React.Fraqgment>\n                                        <ListItem divider title=\"Divider Here\"/>\n                                        <ListItem link=\"#\" title=\"Wyloguj\" onClick={this.props.app.event.logout}>\n                                            <Icon slot=\"media\" icon=\"fad fa-sign-out\"/>\n                                        </ListItem>\n                                    </React.Fraqgment>\n                                    }\n                                </ListGroup>\n                            </List>\n                        </Page>\n                    </View>\n                </Panel>\n            </React.Fragment>\n        );\n    }\n}","import React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport {\n    BlockFooter,\n    Card,\n    List,\n    ListButton,\n    ListInput,\n    ListItem,\n    LoginScreen,\n    LoginScreenTitle,\n    Page,\n} from \"framework7-react\";\n// import {AppReactContext} from \"../../Context/Contexts\";\n\nexport default class LoginScreenModal extends React.Component {\n    displayName = this.__proto__.constructor.name;\n    static propTypes = {\n        app: PropTypes.func,\n        api: PropTypes.object,\n        errorMessage: PropTypes.string,\n    };\n    static contextType = React.createContext(this.$f7);\n    event = {\n        _request: (url, data, dataType) => {\n            return this.app.request.promise.postJSON(url, data, dataType).then(response => {\n                console.log('response', response);\n            }).catch(xhrError => {\n                console.log('_request.xhrError', xhrError);\n                console.log('_request.xhrError.response', xhrError.response);\n            })\n        },\n        loadingDone: async () => {\n            await this.app.dialog.close();\n        },\n        close: () => {\n\n            this.setState({\n                error: null,\n            });\n            this.$f7.loginScreen.close();\n        },\n        login: () => {\n            this.app.logger.startProcess('Logowanie...');\n            this.app.dialog.preloader('Loading...');\n\n            return this.app.request.promise.postJSON('https://localhost:8000/api/login', {\n                email: this.state.email,\n                password: this.state.password,\n            },'json').then(response => {\n                console.log('response',response);\n\n                // const headers = response.xhr.getAllResponseHeaders();\n                // const arrHeaders = headers.trim().split(/[\\r\\n]+/);\n\n                const locationHeader = response.xhr.getResponseHeader('location');\n\n                this.app.logger.info({locationHeader:locationHeader});\n                // this.app.logger.log(arrHeaders);\n                let result;\n                if (response) {\n                    if (response.data) {\n                        this.app.api.resource.fillData(response.data).then(async dbData => {\n                            console.log('this.app.api.resource.data',this.app.api.resource.data);\n                            // await this.setState(this.state);\n                            await this.$f7.views.main.router.back({reloadPrevious: true, ignoreCache: true });\n                            await this.$f7.loginScreen.close();\n                        });\n                    }\n                    if (locationHeader) {\n                        result = response.data;\n                    }\n                } else {\n                    this.setState({\n                        error: {\n                            type: 'Internal Error',\n                            message: `Wstąpił problem z przetworzeniem zapytania`,\n                        },\n                    });\n                    result = 'Zły response';\n                }\n                return result;\n            }).catch(xhrError => {\n                if (xhrError.status >= 400 && xhrError.status < 500) {\n                    const response = xhrError.xhr.response;\n                    console.log('xhrError', xhrError);\n                    console.log('response', response);\n                    console.log('_request.xhrError.response', JSON.parse(response));\n                } else {\n                    this.app.logger.error(xhrError);\n                }\n                console.log('_request.xhrError', xhrError);\n                console.log('_request.xhrError.response', xhrError.response);\n                return xhrError.xhr;\n            }).catch(error => {\n                console.log('error', error);\n                if (error.message) {\n                    this.setState({\n                        error: {\n                            type: error.name,\n                            message: error.message,\n                        },\n                    });\n                    this.app.logger.error(error);\n                } else {\n                    new Error(error);\n                }\n                return new Error(error);\n            }).finally(resultAfterAll => {\n                console.log('resultAfterAll', resultAfterAll);\n                this.app.logger.endProcess();\n                this.app.dialog.close();\n            });\n            //*/\n        },\n    };\n    buttons = {\n        'signIn': {\n            fill: true,\n            bgColor: 'green',\n            title: 'Zaloguj',\n        },\n        'close': {\n            fill: true,\n            bgColor: 'orange',\n            title: 'Zamknij',\n        },\n    };\n\n    constructor(props, context) {\n        super(props);\n        this.app = this.$f7;\n\n        this.state = {\n            email: '',\n            password: '',\n            error: null,\n            isLoading: false,\n        };\n\n        if (this.state.error) {\n            this.$f7.toast.create({\n                text: this.state.error,\n                position: 'top',\n                closeButton: true,\n            }).open();\n        }\n    }\n\n    render() {\n        // this.app.logger.info({\n        //     this: this,\n        // });\n\n        return (\n            <LoginScreen className=\"main-login-screen\" back>\n                <Page name=\"login\" noToolbar noNavbar noSwipeback loginScreen>\n                    <LoginScreenTitle>Logowanie</LoginScreenTitle>\n                    <List form>\n                        {this.state.error && (\n                            <ListItem>\n                                <Card className=\"width-100 bg-color-red\"\n                                      title={this.state.error.type}\n                                      content={this.state.error.message}/>\n                            </ListItem>\n                        )}\n                        <ListInput\n                            label=\"Email\"\n                            type=\"text\"\n                            placeholder=\"Your email\"\n                            value={this.state.email}\n                            onInput={(e) => {\n                                this.setState({email: e.target.value});\n                            }}\n                        />\n                        <ListInput\n                            label=\"Password\"\n                            type=\"password\"\n                            placeholder=\"Your password\"\n                            value={this.state.password}\n                            onInput={(e) => {\n                                this.setState({password: e.target.value});\n                            }}\n                        />\n                    </List>\n                    <List>\n                        <ListButton {...this.buttons['signIn']} onClick={this.event.login}/>\n                        <ListButton {...this.buttons['close']} onClick={this.event.close}/>\n                        <BlockFooter>\n                            Aby korzystać z aplikacji musisz się zalogować<br/>\n                            Po poprawnym zalogowaniu będzie możliwa instalacja aplikacji w twoim urządzeniu\n                        </BlockFooter>\n                    </List>\n                </Page>\n            </LoginScreen>\n        )\n    }\n}","import React from \"react\";\nimport {Block, BlockHeader, BlockTitle, Icon, List, ListItem} from \"framework7-react\";\nimport LoginScreenModal from \"../../Pages/Component/LoginScreenModal\";\n\nexport default class Invitation extends React.Component {\n    displayName = this.__proto__.constructor.name;\n    // static contextType = AppReactContext;\n    event = {};\n\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n\n        this.app = this.$f7;\n    }\n\n    render() {\n        return (\n            <Block noHairlines>\n                <BlockHeader>\n                    <BlockTitle medium>Welcome</BlockTitle>\n                    <p>This page is about some of my projects. You can read about the motivations to create them and\n                        delve into the codes</p>\n                </BlockHeader>\n\n                <p>GH Page itself was created with the help of Reactjs and Framework7. Therefore, it should as well\n                    look on mobile devices.</p>\n\n                <List mediaList className=\"media-center\">\n                    <ListItem chevronCenter title=\"Code Samples\" //disabled={true}\n                              subtitle=\"Descriptions and links to sample code repositories\"\n                              text=\"available without logging in\"\n                              link=\"/code-samples/\" noLinkClass\n                    >\n                        <Icon slot=\"media\" icon=\"fad fa-code fa-2x\"/>\n                    </ListItem>\n                    <ListItem chevronCenter title=\"Problem Resolver Project\"\n                              subtitle=\"Application project supporting problem solving\"\n                              text=\"available without logging in\"\n                              link=\"/problem-resolver/\" noLinkClass\n                    >\n                        <Icon slot=\"media\" icon=\"fad fa-project-diagram fa-2x\"/>\n                    </ListItem>\n                    <ListItem chevronCenter title=\"Sandbox\" //disabled={true}\n                              subtitle=\"A page to play with components\"\n                              text=\"available without logging in\"\n                              link=\"/sandbox/\" noLinkClass\n                    >\n                        <Icon slot=\"media\" icon=\"fad fa-presentation fa-2x\"/>\n                    </ListItem>\n                </List>\n                <LoginScreenModal/>\n            </Block>\n        )\n    }\n}","import React from \"react\";\nimport {Icon, Link, Navbar, NavLeft, NavRight} from \"framework7-react\";\n\n/**\n * This Shell Navbar\n */\nexport default class ShellNavbar extends React.Component {\n    displayName = this.__proto__.constructor.name;\n\n    constructor(props) {\n        super(props);\n\n        this.app = this.$f7;\n    }\n\n    render() {\n        // this.props.app.logger.log({app: this.app});\n\n        return (\n            <React.Fragment>\n                <Navbar title=\"Anatholius GitHub Page\" subtitle=\"Website for the presentation of my projects on GitHub\">\n                    <NavLeft slot=\"nav-left\">\n                        {this.app.displayable('panelLeft') && <Link color=\"black\" panelOpen=\"left\">\n                            <Icon icon=\"fad fa-arrow-alt-from-left\"/>\n                        </Link>}\n                    </NavLeft>\n\n                    <NavRight slot=\"nav-right\">\n\n                        {this.app.displayable('buttonInstall') &&\n                        <Link color=\"black\" onClick={this.app.event.installApp}>\n                            <Icon classname=\"no-link icon-only\" icon={`fad fa-phone-laptop`}/>\n                        </Link>}\n\n                        {!this.app.online && <Link color=\"black\">\n                            <Icon classname=\"no-link icon-only\"\n                                  icon={`fad fa-wifi${this.app.online ? '' : '-slash'}`}/>\n                        </Link>}\n\n                        {!this.app.displayable('panelRight') &&\n                        <Link color=\"black\" icon=\"fad fa-arrow-to-left\" panelOpen=\"right\"/>}\n                    </NavRight>\n                </Navbar>\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\n\nimport {BlockHeader, BlockTitle, Page, PageContent} from 'framework7-react';\nimport PanelLeft from \"../Components/Shell/PanelLeft\";\nimport PanelRight from \"../Components/Shell/PanelRight\";\nimport Invitation from \"../Components/Shell/Invitation\";\nimport ShellNavbar from \"../Components/Shell/ShellNavbar\";\nimport CompanyConfig from \"../Patterns/Facade/FormConfig/CompanyConfig\";\n\nexport default class HomePage extends React.Component {\n    displayName = this.__proto__.constructor.name;\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.app = this.$f7;\n\n        this.state = {};\n    }\n\n    render() {\n        const ProjectsCollectionWidget = this.app.widget\n            .SwipeableCollection('card')\n            .withConfig(new CompanyConfig())\n            .withEvents(this.app.event)\n            .withHandlers(this.app.handle)\n            .buildWidget()\n        ;\n        return <Page>\n            <ShellNavbar data={this.context.data} state={this.state} app={this.app}/>\n            {this.app.displayable('panelLeft') && (\n                <PanelLeft/>\n            )}\n\n            {this.app.displayable('resourceData') && (\n                <PanelRight display={this.app.displayable} data={this.app.api.resource.data} state={this.state}\n                            config={this.context.config}\n                            app={this.app}\n                />\n            )}\n\n            {!this.app.displayable('user') ? (\n                <Invitation event={this.event} state={this.state}/>\n            ) : (\n                <PageContent>\n                    <BlockHeader>\n                        <BlockTitle medium>\n                            Hello{this.app.displayable('user') ? ' ' + this.app.api.resource.data.config.user['firstName'] : ''}\n                        </BlockTitle>\n                    </BlockHeader>\n\n                    {!this.app.displayable('company') && this.app.displayable('companyCollection') && (\n                        <ProjectsCollectionWidget mediaList field=\"company\" data={{\n                            items: this.app.api.resource.data.collection.company,\n                            current: this.app.api.resource.data.current,\n                        }}/>\n                    )}\n\n                </PageContent>\n            )}\n\n        </Page>;\n    }\n}\nHomePage.contextType = React.createContext({});\n","import FormConfigInterface from \"./FormConfigInterface\";\nimport ApiConfig from \"./Element/ApiConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport FormConfig from \"./Element/FormConfig\";\n\n\n/**\n * Klasa konfiguracji kontekstu właściciela\n *\n * @implements FormConfigInterface\n *\n */\nexport default class OwnerConfig extends FormConfigInterface {\n    type = 'entity';\n    \n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'users',\n    );\n    \n    fields;\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'owner',\n        'Właściciel',\n        'User',\n    );\n    \n    collection;\n    \n    form = new FormConfig(\n        'owner',\n        'item',\n        'popup',\n    );\n    \n    validation;\n    \n    data = null;\n}","import FormConfigInterface from \"./FormConfigInterface\";\n\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport FormConfig from \"./Element/FormConfig\";\nimport FormValidationConfig from \"./Element/Validation/FormValidationConfig\";\nimport FormDependsRule from \"../../Strategy/Validator/Strategy/Rules/FormDependsRule\";\nimport CollectionValidationConfig from \"./Element/Validation/CollectionValidationConfig\";\nimport CollectionUniqueRule from \"../../Strategy/Validator/Strategy/Rules/CollectionUniqueRule\";\nimport CollectionRequiredRule from \"../../Strategy/Validator/Strategy/Rules/CollectionRequiredRule\";\n\n\n/**\n * Klasa konfiguracji kontekstu pozycji na fakturze\n *\n * @implements FormConfigInterface\n *\n */\nexport default class InvoiceItemConfig extends FormConfigInterface {\n    type = 'collection';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'invoice_items',\n    );\n    \n    fields = {\n        id:                new FieldConfig('hidden', 'id', 'ID', null),\n        economicEvent:     new FieldConfig('selectCollection', 'economicEvent', 'Zdarzenie gospodarcze', '', {\n            optionsWithEmptyValue: true,\n            collection:            {\n                name:       'economicEvents',\n                labelField: 'description',\n            },\n            buttons:               {\n                right: {\n                    add:  {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color:       'green',\n                        label:       'Dodaj',\n                        icon:        'fal fa-plus',\n                        href:        '/form/economicEvent/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color:       'orange',\n                        label:       'Edytuj',\n                        icon:        'fad fa-pencil',\n                        href:        '/form/economicEvent/:id/',\n                    },\n                },\n            },\n        }),\n        economicOperation: new FieldConfig('selectCollection', 'economicOperation', 'Operacja gospodarcza', '', {\n            optionsWithEmptyValue: true,\n            collection:            {\n                name:       'economicOperations',\n                labelField: 'description',\n            },\n            buttons:               {\n                right: {\n                    add:  {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color:       'green',\n                        label:       'Dodaj',\n                        icon:        'fal fa-plus',\n                        href:        '/form/economicOperation/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color:       'orange',\n                        label:       'Edytuj',\n                        icon:        'fad fa-pencil',\n                        href:        '/form/economicOperation/:id/',\n                    },\n                },\n            },\n        }),\n        pos:               new FieldConfig('text', 'pos', 'Nr pozycji', ''),\n        title:             new FieldConfig('text', 'title', 'Tytuł operacji', ''),\n        legalBasis:        new FieldConfig('text', 'legalBasis', 'Podstawa prawna', ''),\n        unit:              new FieldConfig('text', 'unit', 'Jednostka', ''),\n        unitCount:         new FieldConfig('text', 'unitCount', 'Ilość', ''),\n        unitPrice:         new FieldConfig('text', 'unitPrice', 'Cena jednostkowa', ''),\n        price:             new FieldConfig('text', 'price', 'Wartość', ''),\n    };\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'invoiceItem',\n        'Pozycja na fakturze',\n        'InvoiceItem',\n        {\n            type:       'simple',\n            data:       {\n                header: null,\n                title:  'economicOperation',\n                footer: 'price',\n            },\n            emptyValue: {\n                title: \"Wybierz pozycję na fakturze\",\n            },\n            actions:    {\n                left:  {\n                    delete: {\n                        color:  'red',\n                        label:  'Usuń',\n                        icon:   'fad fa-trash',\n                        action: 'invoiceItem',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color:  'orange',\n                        label:  'Edytuj',\n                        icon:   'fad fa-pencil',\n                        action: 'invoiceItem',\n                    },\n                },\n            },\n        },\n    );\n    \n    collection = new CollectionConfig(\n        'invoiceItems',\n        'Pozycje na fakturze',\n        [],\n        'invoiceItem',\n        {\n            type:    'card',\n            title:   {\n                new:  'Nowa pozycja na fakturze',\n                edit: 'Edycja pozycji na fakturze',\n            },\n            actions: {\n                new: {\n                    color:  'green',\n                    label:  'Dodaj',\n                    icon:   'fal fa-plus',\n                    action: '/form/invoiceItem/',\n                },\n            },\n        },\n        'invoice',\n    );\n    \n    form = new FormConfig(\n        'invoiceItem',\n        'collection',\n        'sheet',\n    );\n    \n    /**\n     * Konfiguracja walidacji\n     * @type {ValidationConfig}\n     */\n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id:                new FieldRules('number'),\n            economicEvent:     new FieldRules('text', true),\n            economicOperation: new FieldRules('text', true),\n            title:             new FieldRules('text'),\n            legalBasis:        new FieldRules('text', true),\n            unit:              new FieldRules('text', true),\n            unitCount:         new FieldRules('text', true),\n            unitPrice:         new FieldRules('text', true),\n            price:             new FieldRules('text', true),\n        }),\n        new FormValidationConfig({\n            paidValue: new FormDependsRule(\n                {field: 'paid', value: true},\n                {required: true},\n            ),\n        }),\n        new CollectionValidationConfig({\n            invoiceNumber: new CollectionUniqueRule(),\n            invoiceItems:  new CollectionRequiredRule(),\n        }),\n    );\n    \n    data = {\n        collections: {\n            company: [\n                'economicEvents',\n                'economicOperations',\n            ],\n        },\n    };\n    \n}","import FormConfigInterface from \"./FormConfigInterface\";\n\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport FormValidationConfig from \"./Element/Validation/FormValidationConfig\";\nimport CollectionValidationConfig from \"./Element/Validation/CollectionValidationConfig\";\n\nimport FormDependsRule from \"../../Strategy/Validator/Strategy/Rules/FormDependsRule\";\nimport CollectionUniqueRule from \"../../Strategy/Validator/Strategy/Rules/CollectionUniqueRule\";\nimport CollectionRequiredRule from \"../../Strategy/Validator/Strategy/Rules/CollectionRequiredRule\";\n\nimport InvoiceItemConfig from \"./InvoiceItemConfig\";\nimport FormConfig from \"./Element/FormConfig\";\n\n/**\n * Klasa konfiguracji kontekstu faktury\n * \n * @implements FormConfigInterface\n * \n */\nexport default class InvoiceConfig extends FormConfigInterface {\n    type = 'entity';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'invoices',\n    );\n    \n    fields = {\n        economicEvent: new FieldConfig('selectCollection', 'economicEvent', 'Zdarzenie gospodarcze', '', {\n            optionsWithEmptyValue: true,\n            collection:            {\n                name:       'economicEvents',\n                labelField: 'description',\n            },\n            buttons:               {\n                right: {\n                    add:  {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color:       'green',\n                        label:       'Dodaj',\n                        icon:        'fal fa-plus',\n                        href:        '/form/economicEvent/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color:       'orange',\n                        label:       'Edytuj',\n                        icon:        'fad fa-pencil',\n                        href:        '/form/economicEvent/:id/',\n                    },\n                },\n            },\n        }),\n        id:            new FieldConfig('hidden', 'id', 'ID', null),\n        city:          new FieldConfig('text', 'city', 'Miejscowość', ''),\n        datePrep:      new FieldConfig('datepicker', 'datePrep', 'Data wystawienia', ''),\n        contractor:    new FieldConfig('selectCollection', 'contractor', 'Nabywca', '', {\n            optionsWithEmptyValue: true,\n            collection:            {\n                name:       'contractors',\n                labelField: 'companyName',\n            },\n            buttons:               {\n                right: {\n                    add:  {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color:       'green',\n                        label:       'Dodaj',\n                        icon:        'fal fa-plus',\n                        href:        '/form/contractor/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color:       'orange',\n                        label:       'Edytuj',\n                        icon:        'fal fa-pencil',\n                        href:        '/form/contractor/:id/',\n                    },\n                },\n            },\n        }),\n        invoiceNumber: new FieldConfig('text', 'invoiceNumber', 'Numer faktury', ''),\n        paymentMethod: new FieldConfig('select', 'paymentMethod', 'Sposób płatności', 'transfer', {\n            options:               [\n                {value: 'transfer', text: 'przelew'},\n                {value: 'cash', text: 'gotówka'},\n            ],\n            optionsWithEmptyValue: false,\n        }),\n        paymentDate:   new FieldConfig('datepicker', 'paymentDate', 'Data płatności', ''),\n        bankAccount:   new FieldConfig('selectCollection', 'bankAccount', 'Konto do przelewu', '', {\n            optionsWithEmptyValue: false,\n            collection:            {\n                name:       'bankAccounts',\n                labelField: 'bankAccountName',\n            },\n        }),\n        invoiceItems:  new InvoiceItemConfig(),\n        amount:        new FieldConfig('text', 'amount', 'Razem', ''),\n        paid:          new FieldConfig('checkbox', 'paid', '', ''),\n        paidValue:     new FieldConfig('text', 'paidValue', 'Zapłacono', ''),\n        paidLeft:      new FieldConfig('text', 'paidLeft', 'Pozostało do zapłaty', ''),\n    };\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'invoice',\n        'Faktura',\n        'Invoice',\n        {\n            type:       'simple',\n            data:       {\n                header: \"datePrep\",\n                title:  \"invoiceNumber\",\n                after:  \"amount\",\n                // footer: (item) => Helper.fullName(item.contractor),\n            },\n            emptyValue: {\n                title: \"Wybierz fakturę\",\n            },\n            actions:    {\n                left:  {\n                    delete: {\n                        color:  'red',\n                        label:  'Usuń',\n                        icon:   'fad fa-trash',\n                        action: 'invoice',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color:  'orange',\n                        label:  'Edytuj',\n                        icon:   'fad fa-pencil',\n                        action: 'invoice',\n                    },\n                },\n            },\n        },\n    );\n    \n    /** @type {CollectionConfig} - konfiguracja kolekcji  */\n    collection = new CollectionConfig(\n        'invoices',\n        'Faktury',\n        [],\n        'invoice',\n        {\n            title:   {\n                new:  'Nowa faktura',\n                edit: 'Edycja faktury',\n            },\n            actions: {\n                new: {\n                    color:  'green',\n                    label:  'Dodaj',\n                    icon:   'fal fa-plus',\n                    action: '/form/invoice/',\n                },\n            },\n        },\n    );\n    \n    form = new FormConfig(\n        'invoice',\n        'item',\n        'popup',\n    );\n    \n    /**\n     * Konfiguracja walidacji faktury\n     * @type {ValidationConfig}\n     */\n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id:            new FieldRules('number'),\n            economicEvent: new FieldRules('text', true),\n            city:          new FieldRules('text', true),\n            datePrep:      new FieldRules('datepicker', true),\n            contractor:    new FieldRules('text', true),\n            invoiceNumber: new FieldRules('text', true),\n            paymentMethod: new FieldRules('text', true),\n            paymentDate:   new FieldRules('datepicker', true),\n            bankAccount:   new FieldRules('text', true),\n            invoiceItems:  false,\n            amount:        new FieldRules('text', true),\n            paid:          new FieldRules('text'),\n            paidValue:     new FieldRules('text'),\n            paidLeft:      new FieldRules('text', true),\n        }),\n        new FormValidationConfig({\n            paidValue: new FormDependsRule(\n                {field: 'paid', value: true},\n                {required: true},\n            ),\n        }),\n        new CollectionValidationConfig({\n            invoiceNumber: new CollectionUniqueRule(),\n            invoiceItems:  new CollectionRequiredRule(),\n        }),\n    );\n    \n    data = {\n        collections: {\n            company: [\n                'contractors',\n                'bankAccounts',\n                'economicEvents',\n            ],\n        },\n    };\n}","import FormConfigInterface from \"./FormConfigInterface\";\n\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport FormConfig from \"./Element/FormConfig\";\n\n/**\n * Klasa konfiguracji kontekstu pozycji na fakturze\n *\n * @implements FormConfigInterface\n *\n */\nexport default class EconomicEventConfig extends FormConfigInterface {\n    type = 'entity';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'economic_events',\n    );\n    \n    fields = {\n        id:                new FieldConfig('hidden', 'id', 'ID', null),\n        description:       new FieldConfig('text', 'title', 'Tytuł operacji', ''),\n        economicOperation: new FieldConfig('selectCollection', 'economicOperation', 'Operacja gospodarcza', '', {\n            optionsWithEmptyValue: true,\n            collection:            {\n                name:       'economicOperations',\n                labelField: 'description',\n            },\n            buttons:               {\n                right: {\n                    add:  {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color:       'green',\n                        label:       'Dodaj',\n                        icon:        'fal fa-plus',\n                        href:        '/form/economicOperation/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color:       'orange',\n                        label:       'Edytuj',\n                        icon:        'fad fa-pencil',\n                        href:        '/form/economicOperation/:id/',\n                    },\n                },\n            },\n        }),\n    };\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'economicEvent',\n        'Zdarzenie gospodarcze',\n        'EconomicEvent',\n        {\n            type:       'simple',\n            data:       {\n                header: null,\n                title:  'description',\n                footer: null,\n            },\n            emptyValue: {\n                title: \"Wybierz zdarzenie gospodarcze\",\n            },\n            actions:    {\n                left:  {\n                    delete: {\n                        color:  'red',\n                        label:  'Usuń',\n                        icon:   'fad fa-trash',\n                        action: 'economicEvent',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color:  'orange',\n                        label:  'Edytuj',\n                        icon:   'fad fa-pencil',\n                        action: 'economicEvent',\n                    },\n                },\n            },\n        },\n    );\n    \n    collection = new CollectionConfig(\n        'economicEvents',\n        'Zdarzenia gospodarcze',\n        [],\n        'economicEvent',\n        {\n            title:   {\n                new:  'Nowe zdarzenie gospodarcze',\n                edit: 'Edycja zdarzenia gospodarczego',\n            },\n            actions: {\n                new: {\n                    color:  'green',\n                    label:  'Dodaj',\n                    icon:   'fal fa-plus',\n                    action: '/form/economicEvent/',\n                },\n            },\n        },\n        'invoice',\n    );\n    \n    form = new FormConfig(\n        'economicEvent',\n        'item',\n        'sheet',\n    );\n    \n    /**\n     * Konfiguracja walidacji\n     * @type {ValidationConfig}\n     */\n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id:                new FieldRules('number'),\n            description:       new FieldRules('text', true),\n            economicOperation: new FieldRules('text', true),\n        }),\n    );\n    \n    data = {\n        collections: {\n            company: [\n                'economicEvents',\n            ],\n        },\n    };\n    \n}","import FormConfigInterface from \"./FormConfigInterface\";\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport FormConfig from \"./Element/FormConfig\";\nimport FormValidationConfig from \"./Element/Validation/FormValidationConfig\";\nimport FormDependsRule from \"../../Strategy/Validator/Strategy/Rules/FormDependsRule\";\nimport CollectionValidationConfig from \"./Element/Validation/CollectionValidationConfig\";\nimport CollectionUniqueRule from \"../../Strategy/Validator/Strategy/Rules/CollectionUniqueRule\";\n\n/**\n * Klasa konfiguracji kontekstu pozycji na fakturze\n *\n * @implements FormConfigInterface\n *\n */\nexport default class EconomicOperationConfig extends FormConfigInterface {\n    type = 'entity';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'economic_operations',\n    );\n    \n    fields = {\n        id:            new FieldConfig('hidden', 'id', 'ID', null),\n        economicEvent: new FieldConfig('selectCollection', 'economicEvent', 'Zdarzenie gospodarcze', '', {\n            optionsWithEmptyValue: true,\n            collection:            {\n                name:       'economicEvents',\n                labelField: 'description',\n            },\n            buttons:               {\n                right: {\n                    add:  {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color:       'green',\n                        label:       'Dodaj',\n                        icon:        'fal fa-plus',\n                        href:        '/form/economicEvent/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color:       'orange',\n                        label:       'Edytuj',\n                        icon:        'fad fa-pencil',\n                        href:        '/form/economicEvent/:id/',\n                    },\n                },\n            },\n        }),\n        type:          new FieldConfig('text', 'type', 'Typ operacji', '', {\n            optionsWithEmptyValue: true,\n            collection:            {\n                name:       'economicOperations',\n                labelField: 'description',\n            },\n            buttons:               {\n                right: {\n                    add:  {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color:       'green',\n                        label:       'Dodaj',\n                        icon:        'fal fa-plus',\n                        href:        '/form/economicOperation/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color:       'orange',\n                        label:       'Edytuj',\n                        icon:        'fad fa-pencil',\n                        href:        '/form/economicOperation/:id/',\n                    },\n                },\n            },\n        }),\n        bookColumn:    new FieldConfig('text', 'bookColumn', 'Docelowa kolumna księgi', ''),\n        description:   new FieldConfig('text', 'description', 'Opis operacji', ''),\n        isPeriodic:    new FieldConfig('toggle', 'isPeriodic', 'Cykliczna?', ''),\n        title:         new FieldConfig('text', 'title', 'Tytuł cyklu operacji', ''),\n        period:        new FieldConfig('text', 'period', 'Cykl operacji', ''),\n    };\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'economicOperation',\n        'Operacja gospodarcza',\n        'EconomicOperation',\n        {\n            type:       'simple',\n            data:       {\n                header: null,\n                title:  'description',\n                footer: null,\n            },\n            emptyValue: {\n                title: \"Wybierz operację gospodarczą\",\n            },\n            actions:    {\n                left:  {\n                    delete: {\n                        color:  'red',\n                        label:  'Usuń',\n                        icon:   'fad fa-trash',\n                        action: 'economicOperation',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color:  'orange',\n                        label:  'Edytuj',\n                        icon:   'fad fa-pencil',\n                        action: 'economicOperation',\n                    },\n                },\n            },\n        },\n    );\n    \n    collection = new CollectionConfig(\n        'economicOperations',\n        'Operacje gospodarcze',\n        [],\n        'economicOperation',\n        {\n            title:   {\n                new:  'Nowa operacja gospodarcza',\n                edit: 'Edycja operacji gospodarczej',\n            },\n            actions: {\n                new: {\n                    color:  'green',\n                    label:  'Dodaj',\n                    icon:   'fal fa-plus',\n                    action: '/form/economicOperation/',\n                },\n            },\n        },\n        'economicEvent',\n    );\n    \n    form = new FormConfig(\n        'economicOperation',\n        'item',\n        'sheet',\n    );\n    \n    /**\n     * Konfiguracja walidacji\n     * @type {ValidationConfig}\n     */\n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id:            new FieldRules('number'),\n            economicEvent: new FieldRules('text', true),\n            type:          new FieldRules('text', true),\n            bookColumn:    new FieldRules('text', true),\n            description:   new FieldRules('text', true),\n        }),\n        new FormValidationConfig({\n            title:  new FormDependsRule(\n                {field: 'isPeriodic', value: true},\n                {required: true},\n            ),\n            period: new FormDependsRule(\n                {field: 'isPeriodic', value: true},\n                {required: true},\n            ),\n        }),\n        new CollectionValidationConfig({\n            description: new CollectionUniqueRule(),\n            //TODO: zależność wielopolowa (isPeriodic :: title :: period)\n            \n            // nip:          new CollectionUniqueRule(),\n            // bankAccounts: new CollectionRequiredRule(),\n        }),\n    );\n    \n    data = {\n        collections: {\n            company: [\n                'economicEvents',\n                'economicOperations',\n            ],\n        },\n    };\n    \n}","import FormConfigInterface from \"./FormConfigInterface\";\n\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport CollectionValidationConfig from \"./Element/Validation/CollectionValidationConfig\";\n\nimport CollectionUniqueRule from \"../../Strategy/Validator/Strategy/Rules/CollectionUniqueRule\";\nimport CollectionRequiredRule from \"../../Strategy/Validator/Strategy/Rules/CollectionRequiredRule\";\n\nimport FormConfig from \"./Element/FormConfig\";\n\n\n/**\n * Klasa konfiguracji kontekstu faktury\n *\n * @implements FormConfigInterface\n * \n */\nexport default class IntproofConfig extends FormConfigInterface {\n    type = 'entity';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'intproofs',\n    );\n    \n    fields = {\n        id:          new FieldConfig('hidden', 'id', 'ID', null),\n        city:        new FieldConfig('text', 'city', 'Miejscowość', ''),\n        datePrep:    new FieldConfig('datepicker', 'datePrep', 'Data wystawienia', ''),\n        proofNumber: new FieldConfig('text', 'proofNumber', 'Numer DW', ''),\n        // intproofItems: new IntproofItemContext(),\n        amount:      new FieldConfig('text', 'amount', 'Razem', ''),\n    };\n    \n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'intproof',\n        'Dowód wewnętrzny',\n        'Intproof',\n        {\n            type:       'simple',\n            data:       {\n                header: (item) => 'full name of owner',//Helper.fullName(item.buyer),\n                title:  \"proofNumber\",\n                after:  \"amount\",\n                footer: null,\n            },\n            emptyValue: {\n                title: \"Wybierz DW\",\n            },\n            actions:    {\n                left:  {\n                    delete: {\n                        color:  'red',\n                        label:  'Usuń',\n                        icon:   'fad fa-trash',\n                        action: 'intproof',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color:  'orange',\n                        label:  'Edytuj',\n                        icon:   'fad fa-pencil',\n                        action: 'intproof',\n                    },\n                },\n            },\n        },\n    );\n    \n    /** @type {CollectionConfig} - konfiguracja kolekcji  */\n    collection = new CollectionConfig(\n        'intproofs',\n        'Dowody wewnętrzne',\n        [],\n        'intproof',\n        {\n            title:   {\n                new:  'Nowy dowód wewnętrzny',\n                edit: 'Edycja dowodu wewnętrznego',\n            },\n            actions: {\n                new: {\n                    color:  'green',\n                    label:  'Dodaj',\n                    icon:   'fal fa-plus',\n                    action: '/form/intproof/',\n                },\n            },\n        },\n    );\n    \n    form = new FormConfig(\n        'intproof',\n        'item',\n        'popup',\n    );\n    \n    /**\n     * Konfiguracja walidacji faktury\n     * @type {ValidationConfig}\n     */\n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id:            new FieldRules('number'),\n            city:          new FieldRules('text', true),\n            datePrep:      new FieldRules('datepicker', true),\n            proofNumber:   new FieldRules('text', true),\n            intproofItems: false,\n            amount:        new FieldRules('text', true),\n        }),\n        new CollectionValidationConfig({\n            proofNumber:   new CollectionUniqueRule(),\n            intproofItems: new CollectionRequiredRule(),\n        }),\n    );\n    \n    data = null;\n}","import FormConfigInterface from \"./FormConfigInterface\";\n\nimport ApiConfig from \"./Element/ApiConfig\";\nimport FieldConfig from \"./Element/FieldConfig\";\nimport ItemConfig from \"./Element/ItemConfig\";\nimport CollectionConfig from \"./Element/CollectionConfig\";\nimport ValidationConfig from \"./Element/ValidationConfig\";\nimport FieldsValidationConfig from \"./Element/Validation/FieldsValidationConfig\";\nimport FieldRules from \"./Element/Validation/FieldValidation/FieldRules\";\nimport FormConfig from \"./Element/FormConfig\";\nimport FormValidationConfig from \"./Element/Validation/FormValidationConfig\";\nimport FormDependsRule from \"../../Strategy/Validator/Strategy/Rules/FormDependsRule\";\nimport CollectionValidationConfig from \"./Element/Validation/CollectionValidationConfig\";\nimport CollectionUniqueRule from \"../../Strategy/Validator/Strategy/Rules/CollectionUniqueRule\";\nimport CollectionRequiredRule from \"../../Strategy/Validator/Strategy/Rules/CollectionRequiredRule\";\n\n\n/**\n * Klasa konfiguracji kontekstu pozycji na fakturze\n *\n * @implements FormConfigInterface\n *\n */\nexport default class IntproofItemConfig extends FormConfigInterface {\n    type = 'collection';\n    /** @type {ApiConfig} = konfiguracja Api backendowego */\n    apiConfig = new ApiConfig(\n        'intproof_items',\n    );\n\n    fields = {\n        id: new FieldConfig('hidden', 'id', 'ID', null),\n        economicEvent: new FieldConfig('selectCollection', 'economicEvent', 'Zdarzenie gospodarcze', '', {\n            optionsWithEmptyValue: true,\n            collection: {\n                name: 'economicEvents',\n                labelField: 'description',\n            },\n            buttons: {\n                right: {\n                    add: {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color: 'green',\n                        label: 'Dodaj',\n                        icon: 'fal fa-plus',\n                        href: '/form/economicEvent/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color: 'orange',\n                        label: 'Edytuj',\n                        icon: 'fad fa-pencil',\n                        href: '/form/economicEvent/:id/',\n                    },\n                },\n            },\n        }),\n        economicOperation: new FieldConfig('selectCollection', 'economicOperation', 'Operacja gospodarcza', '', {\n            optionsWithEmptyValue: true,\n            collection: {\n                name: 'economicOperations',\n                labelField: 'description',\n            },\n            buttons: {\n                right: {\n                    add: {\n                        displayWhen: {\n                            selected: false,\n                        },\n                        color: 'green',\n                        label: 'Dodaj',\n                        icon: 'fal fa-plus',\n                        href: '/form/economicOperation/',\n                    },\n                    edit: {\n                        displayWhen: {\n                            selected: true,\n                        },\n                        color: 'orange',\n                        label: 'Edytuj',\n                        icon: 'fad fa-pencil',\n                        href: '/form/economicOperation/:id/',\n                    },\n                },\n            },\n        }),\n        pos: new FieldConfig('text', 'pos', 'Nr pozycji', ''),\n        title: new FieldConfig('text', 'title', 'Tytuł operacji', ''),\n        unit: new FieldConfig('text', 'unit', 'Jednostka', ''),\n        unitCount: new FieldConfig('text', 'unitCount', 'Ilość', ''),\n        unitPrice: new FieldConfig('text', 'unitPrice', 'Cena jednostkowa', ''),\n        price: new FieldConfig('text', 'price', 'Wartość', ''),\n    };\n\n    /** @type {ItemConfig} - konfiguracja encji  */\n    item = new ItemConfig(\n        'intproofItem',\n        'Pozycja na fakturze',\n        'IntproofItem',\n        {\n            type: 'simple',\n            data: {\n                header: null,\n                title: 'economicOperation',\n                footer: 'price',\n            },\n            emptyValue: {\n                title: \"Wybierz pozycję na fakturze\",\n            },\n            actions: {\n                left: {\n                    delete: {\n                        color: 'red',\n                        label: 'Usuń',\n                        icon: 'fad fa-trash',\n                        action: 'intproofItem',//TODO: tu chyba trzbea machnąć jakiś callback\n                    },\n                },\n                right: {\n                    edit: {\n                        color: 'orange',\n                        label: 'Edytuj',\n                        icon: 'fad fa-pencil',\n                        action: 'intproofItem',\n                    },\n                },\n            },\n        },\n    );\n\n    collection = new CollectionConfig(\n        'intproofItems',\n        'Pozycje na fakturze',\n        [],\n        'intproofItem',\n        {\n            type: 'card',\n            title: {\n                new: 'Nowa pozycja na fakturze',\n                edit: 'Edycja pozycji na fakturze',\n            },\n            actions: {\n                new: {\n                    color: 'green',\n                    label: 'Dodaj',\n                    icon: 'fal fa-plus',\n                    action: '/form/intproofItem/',\n                },\n            },\n        },\n        'intproof',\n    );\n\n    form = new FormConfig(\n        'intproofItem',\n        'collection',\n        'sheet',\n    );\n\n    /**\n     * Konfiguracja walidacji\n     * @type {ValidationConfig}\n     */\n    validation = new ValidationConfig(\n        new FieldsValidationConfig({\n            id: new FieldRules('number'),\n            economicEvent: new FieldRules('text', true),\n            economicOperation: new FieldRules('text', true),\n            title: new FieldRules('text'),\n            legalBasis: new FieldRules('text', true),\n            unit: new FieldRules('text', true),\n            unitCount: new FieldRules('text', true),\n            unitPrice: new FieldRules('text', true),\n            price: new FieldRules('text', true),\n        }),\n        new FormValidationConfig({\n            paidValue: new FormDependsRule(\n                {field: 'paid', value: true},\n                {required: true},\n            ),\n        }),\n        new CollectionValidationConfig({\n            proofNumber: new CollectionUniqueRule(),\n            intproofItems: new CollectionRequiredRule(),\n        }),\n    );\n\n    data = {\n        collections: {\n            company: [\n                'economicEvents',\n                'economicOperations',\n            ],\n        },\n    };\n\n}","import React from 'react';\nimport {Block, BlockTitle, List, ListItem, Navbar, Page} from 'framework7-react';\n\nexport default () => (\n    <Page>\n        <Navbar title=\"Left Panel\"/>\n        <Block strong>\n            <p>Left panel content goes here</p>\n        </Block>\n        <BlockTitle>Load page in main view</BlockTitle>\n        <List>\n            <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose/>\n            <ListItem link=\"/dynamic-route/blog/45/post/125/?foo=bar#about/\" title=\"Dynamic Route\" view=\"#main-view\"\n                      panelClose/>\n            <ListItem link=\"/form/problem/\" title=\"Start issue\" view=\"#main-view\" panelClose/>\n            <ListItem link=\"/form/problem/\" title=\"Popup issue\" fill raised popupOpen=\"#popup\"/>\n        </List>\n    </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Right Panel\" />\n    <Block strong>\n      <p>Right panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"/>\n      <ListItem link=\"/form/\" title=\"Form\"/>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose/>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose/>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListItem,\n    ListInput,\n    Toggle,\n    BlockTitle,\n    Row,\n    Button,\n    Range,\n    Block,\n} from 'framework7-react';\n\nexport default () => (\n    <Page>\n        <Navbar title=\"Form\" backLink=\"Back\"/>\n        <BlockTitle>Form Example</BlockTitle>\n        <List form>\n            <ListInput\n                label=\"Name\"\n                type=\"text\"\n                placeholder=\"Name\"\n            />\n            <ListInput\n                label=\"E-mail\"\n                type=\"email\"\n                placeholder=\"E-mail\"\n            />\n            <ListInput\n                label=\"URL\"\n                type=\"url\"\n                placeholder=\"URL\"\n            />\n            <ListInput\n                label=\"Password\"\n                type=\"password\"\n                placeholder=\"Password\"\n            />\n            <ListInput\n                label=\"Phone\"\n                type=\"tel\"\n                placeholder=\"Phone\"\n            />\n            <ListInput\n                label=\"Gender\"\n                type=\"select\"\n                defaultValue=\"Male\"\n            >\n                <option>Male</option>\n                <option>Female</option>\n            </ListInput>\n            <ListInput\n                label=\"Birth date\"\n                type=\"date\"\n                placeholder=\"Birth date\" value=\"2014-04-30\"\n            />\n            <ListItem title=\"Toggle\">\n                <Toggle slot=\"after\"/>\n            </ListItem>\n            <ListInput\n                label=\"Slider\"\n                input={false}\n            >\n                <Range label={true} slot=\"input\" min={0} max={100} value={50} step={1}/>\n            </ListInput>\n            <ListInput\n                label=\"Textarea\"\n                type=\"textarea\"\n                placeholder=\"Bio\"\n            />\n            <ListInput\n                label=\"Resizable\"\n                type=\"textarea\"\n                placeholder=\"Bio\"\n                resizable\n            />\n        </List>\n        \n        <BlockTitle>Checkbox group</BlockTitle>\n        <List form>\n            {Array.from(Array(3).keys()).map(n => (\n                <ListItem key={n} checkbox name=\"my-checkbox\" value={n + 1} title={`Checkbox ${n + 1}`}/>\n            ))}\n        </List>\n        \n        <BlockTitle>Radio buttons group</BlockTitle>\n        <List form>\n            {Array.from(Array(3).keys()).map(n => (\n                <ListItem key={n} radio name=\"my-radio\" defaultChecked={n === 0} value={n + 1}\n                          title={`Radio ${n + 1}`}/>\n            ))}\n        </List>\n        \n        <BlockTitle>Buttons</BlockTitle>\n        <Block strong>\n            <Row tag=\"p\">\n                <Button className=\"col\">Button</Button>\n                <Button className=\"col\" fill>Fill</Button>\n            </Row>\n            <Row tag=\"p\">\n                <Button className=\"col\" raised>Raised</Button>\n                <Button className=\"col\" raised fill>Raised Fill</Button>\n            </Row>\n            <Row tag=\"p\">\n                <Button className=\"col\" round>Round</Button>\n                <Button className=\"col\" round fill>Round Fill</Button>\n            </Row>\n            <Row tag=\"p\">\n                <Button className=\"col\" outline>Outline</Button>\n                <Button className=\"col\" round outline>Outline Round</Button>\n            </Row>\n            <Row tag=\"p\">\n                <Button className=\"col\" small outline>Small</Button>\n                <Button className=\"col\" small round outline>Small Round</Button>\n            </Row>\n            <Row tag=\"p\">\n                <Button className=\"col\" small fill>Small</Button>\n                <Button className=\"col\" small round fill>Small Round</Button>\n            </Row>\n            <Row tag=\"p\">\n                <Button className=\"col\" large raised>Large</Button>\n                <Button className=\"col\" large fill raised>Large Fill</Button>\n            </Row>\n            <Row tag=\"p\">\n                <Button className=\"col\" large fill raised color=\"red\">Large Red</Button>\n                <Button className=\"col\" large fill raised color=\"green\">Large Green</Button>\n            </Row>\n        </Block>\n    </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"About\" backLink=\"Back\"/>\n    <BlockTitle>About My App</BlockTitle>\n    <Block strong>\n      <p>Here is About page!</p>\n      <p>You can go <Link back>back</Link>.</p>\n      <p>Mauris posuere sit amet med vens. Ut ante dolr, temr nec commdo rutrum, varus at sem. Nuam ac nisi non neque ornare pretium. Nulla mauris mauris, consequat et elementum sit amet, egestas sed orci. In hac habitasse platea dictumst.</p>\n      <p>Fusce eros lectus, accmsan eget mi vel, iaculis tincidunt felis. Nulla tincidunt pharra sagitis. Fusce in felis eros. Nulla sit amet aliquam lorem, et gravida ipsum. Mauris consectetur nisl non sollicitudin tristique. Praesent vitae metus ac quam rhoncus mattis vel et nisi. Aenean aliquet, felis quis dignissim iaculis, lectus quam tincidunt ligula, et venenatis turpis risus sed lorem. Morbi eu metus elit. Ut vel diam dolor.</p>\n    </Block>\n  </Page>\n);\n","import React, { Component } from 'react';\nimport { Page, Navbar, Block, Link } from 'framework7-react';\n\nexport default class DynamicRoutePage extends Component {\n  render() {\n    return (\n      <Page>\n        <Navbar title=\"Dynamic Route\" backLink=\"Back\" />\n        <Block strong>\n          <ul>\n            <li><b>Url:</b> {this.$f7route.url}</li>\n            <li><b>Path:</b> {this.$f7route.path}</li>\n            <li><b>Hash:</b> {this.$f7route.hash}</li>\n            <li><b>Params:</b>\n              <ul>\n                {Object.keys(this.$f7route.params).map(key => (\n                  <li key={key}><b>{key}:</b> {this.$f7route.params[key]}</li>\n                ))}\n              </ul>\n            </li>\n            <li><b>Query:</b>\n              <ul>\n                {Object.keys(this.$f7route.query).map(key => (\n                  <li key={key}><b>{key}:</b> {this.$f7route.query[key]}</li>\n                ))}\n              </ul>\n            </li>\n            <li><b>Route:</b> {JSON.stringify(this.$f7route.route)}</li>\n          </ul>\n        </Block>\n        <Block strong>\n          <Link onClick={() => this.$f7router.back()}>Go back via Router API</Link>\n        </Block>\n      </Page>\n    );\n  }\n}","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","import React, {Component} from 'react';\nimport {\n    AccordionContent,\n    Block,\n    BlockTitle,\n    Link,\n    List,\n    ListItem,\n    Message,\n    Navbar,\n    NavLeft,\n    NavRight,Messages,\n    NavTitle,\n    Page,\n    Toolbar,\n} from 'framework7-react';\n\n\nexport default class ProblemResolverPage extends Component {\n    displayName = this.__proto__.constructor.name;\n\n    render() {\n        console.log(this.displayName,this.props)\n        return <Page>\n            <Navbar>\n                <NavLeft>\n                    <Link slot=\"title\" icon=\"fad fa-chevron-left\" panelOpen=\"left\"/>\n                </NavLeft>\n                <NavTitle>\n                    Problem Resolver\n                    <span className=\"subtitle\">Problem solving application</span>\n                </NavTitle>\n                <NavRight>\n                    <Link color=\"black\" icon=\"fad fa-arrow-to-left\" panelOpen=\"right\"/>\n                </NavRight>\n            </Navbar>\n            <Toolbar bottom>\n                <Link>The Left Link</Link>\n                <Link href=\"https://github.com/anatholius/problem-resolver\" external target=\"_blank\">See the code</Link>\n                <Link>The Right Link</Link>\n            </Toolbar>\n            <Messages newMessagesFirst>\n                <Message\n                    type=\"sent\"\n                    text=\"Hello World\"\n                    name=\"John Doe\"\n                    avatar=\"http://localhost:3000/static/icons/black/icon-72x72.png\"\n                >\n                    <div slot=\"start\">Start</div>\n                    <div slot=\"end\">End</div>\n                    <div slot=\"content-start\">Content Start</div>\n                    <div slot=\"content-end\">Content End</div>\n                    <div slot=\"bubble-start\">Bubble Start</div>\n                    <div slot=\"bubble-end\">Bubble End</div>\n                </Message>\n\n            <blockquote>The materials were inspired by the website <Link\n                href=\"https://www.skillsyouneed.com/ips/problem-solving.html\" external\n                target=\"_blank\">skillsyouneed.com</Link>\n            </blockquote>\n\n            <Block strong>\n                <BlockTitle>How to solve the problem?</BlockTitle>\n                <p>To be able to think about solving a problem, you must be aware of the fundamental importance of the\n                    problem.</p>\n                <p>Much work in solving a problem is to understand the essence of the problem. Instead of focusing on\n                    symptoms, look for the source of the problem. If the problem has a cause and the cause can be\n                    eliminated, the problem is solved.</p>\n                <h5>To successfully solve problems, you need key skills such as:</h5>\n                <List accordionList>\n                    <ListItem accordionItem title=\"Creativity\">\n                        <AccordionContent>\n                            <Block>\n                                <p>\n                                    Problems are usually resolved intuitively or systematically. Intuition is used when\n                                    no new knowledge is needed, i.e. you know enough to be able to make a quick decision\n                                    and solve a problem, or you use common sense or experience to solve a problem. Very\n                                    complex problems or problems you have never experienced before will probably require\n                                    a more systematic and logical approach to solve them, and for this you will need\n                                    creative thinking.\n                                </p>\n                            </Block>\n                        </AccordionContent>\n                    </ListItem>\n                    <ListItem accordionItem title=\"Research Skills\">\n                        <AccordionContent>\n                            <Block>\n                                <p>\n                                    (Search / research skills) - Defining and solving problems often requires some\n                                    research: it can be a simple Google search engine or a more rigorous research\n                                    project.\n                                </p>\n                            </Block>\n                        </AccordionContent>\n                    </ListItem>\n                    <ListItem accordionItem title=\"Teamwork\">\n                        <AccordionContent>\n                            <Block>\n                                <p>\n                                    Many problems can be defined and solved thanks to the contribution of others.\n                                    Teamwork does not necessarily have to be about professional work, but it is equally\n                                    important at home, in the school, or in the company of friends.\n                                </p>\n                            </Block>\n                        </AccordionContent>\n                    </ListItem>\n                    <ListItem accordionItem title=\"Emotional intelligence\">\n                        <AccordionContent>\n                            <Block>\n                                <p>\n                                    It is worth considering the impact that the problem and / or its solution has on you\n                                    and other people. Emotional intelligence, the ability to recognize emotions in\n                                    yourself and others, will help you find the right solution\n                                </p>\n                            </Block>\n                        </AccordionContent>\n                    </ListItem>\n                    <ListItem accordionItem title=\"Risk management\">\n                        <AccordionContent>\n                            <Block>\n                                <p>\n                                    Solving a problem involves some risk - this risk should be compared with not solving\n                                    the problem\n                                </p>\n                            </Block>\n                        </AccordionContent>\n                    </ListItem>\n                    <ListItem accordionItem title=\"Decision-making\">\n                        <AccordionContent>\n                            <Block>\n                                <p>\n                                    Problem solving and decision making are closely related skills, and decision making\n                                    is an important part of the problem solving process because you will often have to\n                                    deal with various options and alternatives.\n                                </p>\n                            </Block>\n                        </AccordionContent>\n                    </ListItem>\n                </List>\n            </Block>\n            <Block strong>\n                <BlockTitle bold>What is the problem</BlockTitle>\n                The Concise Oxford Dictionary (1995) defines it as:\n                <blockquote>A doubtful or difficult matter that needs to be resolved</blockquote>\n                and\n                <blockquote>Something difficult to understand, achieve or solve</blockquote>\n                <b>It is also worth considering our own view of the problem</b>\n                <p>We are constantly exposed to opportunities in life, at work, at school and at home. However, many\n                    opportunities are lost or are not fully exploited. We are often not sure how to take advantage of\n                    this opportunity and create barriers, the reasons why we cannot take advantage of it. These barriers\n                    can transform a potentially positive situation into a negative one - a problem.</p>\n                <p>Are we missing a big problem? It is human nature to notice and focus on small, easy-to-solve\n                    problems, but it is much harder to work on large problems that can cause some of the smaller\n                    ones.</p>\n                <p>When dealing with a potential problem, consider the following questions:</p>\n                <p>Is the problem a real problem or is it just how we perceive it</p>\n                <p>Is this problem a chance?</p>\n                <p>Does the problem need a solution?</p>\n            </Block>\n            <Block strong>\n                <BlockTitle bold><b>All problems have two common features: goals and barriers</b></BlockTitle>\n                <h3>Goals</h3>\n                <b>Problems include actions to achieve a certain objective or desired state of affairs and may include\n                    avoiding a situation or event</b>\n                <p>Goals can be anything you want to achieve or where you want to be. If you're hungry, your goal is\n                    probably to eat something. If you are an entrepreneur, your main goal is to make a profit from\n                    revenues, and this main goal may need to be divided into many sub-goals to achieve the ultimate goal\n                    of obtaining these profits.</p>\n                <h3>Barriers</h3>\n                <b>If there were no barriers to achieving the goal, there would be no problems. Problem solving is about\n                    overcoming barriers or obstacles that prevent you from reaching your goal immediately.</b>\n                <p>According to our examples above, if you feel hungry your goal is food. The lack of food may be a\n                    barrier to this. So you should go to the store and buy food, removing the barrier and solving this\n                    problem. There may be many more barriers for entrepreneurs, so try to recognize them and remove or\n                    find other ways to achieve your business goals.</p>\n            </Block>\n            <Block>\n                <p>Trying to solve a complex problem may be a mistake. An old adage says \"a common problem is a halved\n                    problem.\" So sharing a problem with someone else can be a good way to get closer to it.</p>\n            </Block>\n            <Block>\n                <h2>Stages of problem solving</h2>\n                <b>Successful troubleshooting usually involves a series of steps or steps, such as those described\n                    below.</b>\n                <h3>1. Problem identification</h3>\n                <b>This stage includes: detection and diagnosis of the problem; determining the nature of the problem;\n                    problem definition</b>\n                <p>The first phase of problem solving may seem obvious, but often requires more reflection and analysis.\n                    Identifying the problem alone can be a difficult task. Is this a problem at all? What is the nature\n                    of the problem, are there really many problems? What is the best way to define a problem? By\n                    spending some time defining a problem, you will not only understand it better, but you will be able\n                    to convey its nature to others, which leads to the second phase.</p>\n                <h3>2. Problem structure</h3>\n                <b>This stage includes: observation period, careful control, establishing facts and developing a clear\n                    picture of the problem</b>\n                <p>After identifying the problem, structuring it involves obtaining additional information about the\n                    problem and increasing understanding. In this phase, it's about establishing facts and analyzing,\n                    building a more comprehensive picture of both the goal (s) and the barrier (barriers). This stage\n                    may not be necessary for very simple problems, but is necessary for problems of a more complex\n                    nature</p>\n                <h3>3. Searching for possible solutions</h3>\n                <b>At this stage, you will generate a number of possible courses of action, but with little attempt to\n                    evaluate them at this stage</b>\n                <p>Based on the information gathered in the first two phases of the problem solving structure, it's time\n                    to start thinking about possible solutions to the identified problem. In a group situation, this\n                    stage is often carried out as a brainstorming process, allowing each person in the group to express\n                    their views on possible solutions (or partial solutions). In organizations, different people will\n                    have different expertise in different areas, and it is therefore useful to hear the views of each\n                    stakeholder</p>\n                <h3>4. Decision making</h3>\n                <b>This stage involves analyzing various possible directions of action and then selecting the best\n                    solution to implement</b>\n                <p>This is perhaps the most complex part of the problem solving process. Continuing the previous step,\n                    it's time to look at each potential solution and thoroughly analyze it. Some solutions may not be\n                    possible due to other problems, such as time limits or budgets. At this stage, it is also important\n                    to think about what can happen if nothing is done to solve the problem - sometimes trying to solve a\n                    great problem that leads to many other problems requires very creative thinking and innovative\n                    ideas.</p>\n                <p>Finally, decide what course of action - making decisions is an important skill. (About this subpage\n                    to earn)</p>\n                <h3>5. Implementation</h3>\n                <b>This stage involves adopting and carrying out the chosen course of action</b>\n                <p>Implementation means acting on the chosen solution. During implementation, more problems may arise,\n                    especially if the identification or structure of the original problem has not been fully carried\n                    out.</p>\n                <h3>6. Monitoring / seeking opinions</h3>\n                <b>The last stage concerns the review of the results of solving problems in a given period, including\n                    obtaining feedback on the success of the results of the chosen solution</b>\n                <p>The final troubleshooting step is to check if the process was successful. This can be achieved by\n                    monitoring and receiving feedback from people affected by any changes. It is good practice to record\n                    the results and any additional problems that arise.</p>\n            </Block>\n            </Messages>\n        </Page>;\n    }\n}\n","import React, {Component} from 'react';\nimport {\n    Block,\n    BlockFooter,\n    BlockTitle,\n    Button,\n    Col,\n    Link,\n    List,\n    ListButton,\n    ListInput,\n    ListItem,\n    LoginScreen,\n    LoginScreenTitle,\n    Navbar,\n    NavLeft,\n    NavRight,\n    NavTitle,\n    Page,\n    Popup,\n    Row,\n    Toolbar,\n    View,\n} from 'framework7-react';\nimport PanelLeft from \"../Components/Shell/PanelLeft\";\nimport PanelRight from \"../Components/Shell/PanelRight\";\n\n\nexport default class SandboxPage extends Component {\n    displayName = this.__proto__.constructor.name;\n\n    render() {\n        console.log(this);\n\n        return <Page>\n            <Navbar>\n                <NavLeft>\n                    <Link slot=\"title\" icon=\"fad fa-chevron-left\" back/>\n                </NavLeft>\n                <NavTitle>\n                    Sandbox\n                    <span className=\"subtitle\">Fun and checking components</span>\n                </NavTitle>\n                <NavRight>\n                    <Link color=\"black\" icon=\"fad fa-arrow-to-left\" panelOpen=\"right\"/>\n                </NavRight>\n            </Navbar>\n\n            <PanelLeft/>\n\n            <PanelRight display={this.$f7.displayable} data={this.$f7.api.resource.data} state={this.state}\n                        config={this.context.config}\n                        app={this.$f7}\n            />\n\n            <Toolbar bottom>\n                <Link>Left Link</Link>\n                <Link>Right Link</Link>\n            </Toolbar>\n            <br/><br/>\n            <BlockTitle>Navigation</BlockTitle>\n            <List>\n                <ListItem link=\"/about/\" title=\"About\"/>\n                <ListItem link=\"/form/\" title=\"Form\"/>\n            </List>\n            <BlockTitle>Modals</BlockTitle>\n            <Block strong>\n                <Row>\n                    <Col width=\"50\">\n                        <Button fill raised popupOpen=\"#popup\">Popup</Button>\n                    </Col>\n                    <Col width=\"50\">\n                        <Button fill raised loginScreenOpen=\"#login-screen\">Login Screen</Button>\n                    </Col>\n                </Row>\n            </Block>\n            <BlockTitle>Panels</BlockTitle>\n            <Block strong>\n                <Row>\n                    <Col width=\"50\">\n                        <Button fill raised panelOpen=\"left\">Left Panel</Button>\n                    </Col>\n                    <Col width=\"50\">\n                        <Button fill raised panelOpen=\"right\">Right Panel</Button>\n                    </Col>\n                </Row>\n            </Block>\n            <List>\n                <ListItem link=\"/dynamic-route/blog/45/post/125/?foo=bar#about\" title=\"Dynamic Route\"/>\n                <ListItem link=\"/load-something-that-doesnt-exist/\" title=\"Default Route (404)\"/>\n            </List>\n\n\n            {/* Popup */}\n            <Popup id=\"popup\">\n                <View>\n                    <Page>\n                        <Navbar title=\"Popup\">\n                            <NavRight>\n                                <Link popupClose>Close</Link>\n                            </NavRight>\n                        </Navbar>\n                        <Block>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque, architecto. Cupiditate\n                            laudantium rem nesciunt numquam, ipsam. Voluptates omnis, a inventore atque ratione aliquam.\n                            Omnis iusto nemo quos ullam obcaecati, quod.</Block>\n                    </Page>\n                </View>\n            </Popup>\n\n            {/* Login Screen */}\n            <LoginScreen id=\"login-screen\">\n                <View>\n                    <Page loginScreen>\n                        <LoginScreenTitle>Login</LoginScreenTitle>\n                        <List form>\n                            <ListInput\n                                label=\"Username\"\n                                name=\"username\"\n                                placeholder=\"Username\"\n                                type=\"text\"\n                            />\n                            <ListInput\n                                label=\"Password\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </List>\n                        <List>\n                            <ListButton title=\"Sign In\" loginScreenClose/>\n                            <BlockFooter>\n                                <p>Click Sign In to close Login Screen</p>\n                            </BlockFooter>\n                        </List>\n                    </Page>\n                </View>\n            </LoginScreen>\n        </Page>;\n    }\n}\n","import React from \"react\";\nimport {Block} from \"framework7-react\";\n\n\nconst CommandDescription = () => (\n    <Block>\n        <p>When I created this application I wanted to use the routing system offered by Framework7. Api router\n            provides the ability to create asynchronous routes, which in turn I wanted to use when creating\n            custom components while the route is loading. An example of such components are dynamic\n            forms resulting from the structure and configuration of other parts of the application.</p>\n        <p>I decided to dress this functionality in design patterns. And so at the very beginning, during configuration\n            routing I define an asynchronous function in which I use the <b> Command </b> pattern to create one\n            configuration of the route, so that when it is loaded, the appropriate form will be created using\n            the <b>Builder</b> pattern. Finally, the reactowy component of the form is returned to the application,\n            strictly corresponds to Framework7 flow routing.</p>\n    </Block>\n);\nexport default CommandDescription;","import React from \"react\";\nimport {Block} from \"framework7-react\";\n\n\nconst FacadeDescription = () => (\n    <React.Fragment>\n        <Block>\n            <p>While working on an application where the essence of the action is a complicated entity structure, I wanted in how\n                the easiest way to draw <sup> <b> 1 </b> </sup> dependencies in the code. I used it for this purpose\n                the <b>Facade</b> pattern.\n            </p>\n            <p>There is nothing else but the configuration of the properties of individual forms enclosed in the JSON object. this\n                configuration, however, helps you later use this information to create the form\n                creating situation-specific components according to the form display conventions\n                adopted in the given application.</p>\n        </Block>\n        <small><b>1</b> - when I was designing the application I also drew many mind maps related to it</small>\n    </React.Fragment>\n);\nexport default FacadeDescription;","import React from 'react';\nimport {Block, Link, Navbar, Page, Toolbar} from 'framework7-react';\nimport Helper from \"../Plugin/Helpers/Helper\";\nimport CommandDescription from \"./Component/CodeSample/js/CommandDescription\";\nimport FacadeDescription from \"./Component/CodeSample/js/FacadeDescription\";\nimport PrototypeDescription from \"./Component/CodeSample/js/PrototypeDescription\";\nimport SingletonDescription from \"./Component/CodeSample/js/SingletonDescription\";\nimport StrategyDescription from \"./Component/CodeSample/js/StrategyDescription\";\nimport FirstAdminCommandDescription from \"./Component/CodeSample/php/FirstAdminCommandDescription\";\nimport ProblemResolverDescription from \"./Component/CodeSample/php/ProblemResolverDescription\";\nimport ShopwareSampleDescription from \"./Component/CodeSample/php/ShopwareSampleDescription\";\n\nconst components = {\n    js: {\n        command: {\n            link: 'https://github.com/anatholius/sample-codes/tree/master/javascript/Patterns/Command',\n            desc: CommandDescription,\n        },\n        facade: {\n            link: 'https://github.com/anatholius/sample-codes/tree/master/javascript/Patterns/Facade',\n            desc: FacadeDescription,\n        },\n        prototype: {\n            link: 'https://github.com/anatholius/sample-codes/tree/master/javascript/Patterns/Prototype',\n            desc: PrototypeDescription,\n        },\n        singleton: {\n            link: 'https://github.com/anatholius/sample-codes/tree/master/javascript/Patterns/Singleton',\n            desc: SingletonDescription,\n        },\n        strategy: {\n            link: 'https://github.com/anatholius/sample-codes/tree/master/javascript/Patterns/Strategy',\n            desc: StrategyDescription,\n        },\n    },\n    php: {\n        firstAdminCommand: {\n            link: 'https://github.com/anatholius/sample-codes/blob/master/php/FirstAdminCommand.php',\n            desc: FirstAdminCommandDescription,\n        },\n        problemResolver: {\n            link: 'https://github.com/anatholius/problem-resolver',\n            desc: ProblemResolverDescription,\n        },\n        shopwareSample: {\n            link: 'https://github.com/anatholius/sample-codes/tree/master/php/SomePlugin',\n            desc: ShopwareSampleDescription,\n        },\n    },\n};\n\nexport default class CodeSamplesDetailPage extends React.Component {\n    displayName = this.__proto__.constructor.name;\n\n    render() {\n        const DescriptionComponent = components[this.$f7route.params.genus][this.$f7route.params.pattern].desc;\n\n        return <Page>\n            <Navbar\n                title={`${this.$f7route.params.genus === 'js' ? 'Pattern: ' : ''}${Helper.ucfirst(this.$f7route.params.pattern)}`}\n                backLink/>\n            <Toolbar tabbar bottom labels>\n                <Link href={components[this.$f7route.params.genus][this.$f7route.params.pattern].link} external\n                      target=\"_blank\" icon=\"fab fa-github\">Look at source</Link>\n            </Toolbar>\n            <Block strong>\n                <p><b>Pattern: {Helper.ucfirst(this.$f7route.params.pattern)}</b></p>\n                <DescriptionComponent/>\n            </Block>\n        </Page>;\n    }\n}\n","import React from \"react\";\nimport {Block} from \"framework7-react\";\nimport Highlight from 'react-highlight';\n\nconst PrototypeDescription = () => (\n    <Block>\n        <p>When creating an application with a form system, just creating a form with simple controls turned out to be\n            be not enough. That's why I thought that the form would be built based on the fields it contains,\n            however, treating it as an abstract creation that may have its own custom substructures and functionalities.\n            In this way, I decided to create field widgets that reflect and serve expectations\n            user in the context of using the form.</p>\n        <p>I came up with several types of fields, which as a result correspond to the types of widgets placed in the\n            target form component. Because any type of field may appear several times in the form, but\n            apply to other fields of the form and therefore data, I used to implement this idea\n            the <b>Prototype</b> pattern.</p>\n        <p>As everyone (certainly most) knows, JavaScript is a language based on this design pattern. In principle,\n            every object in JS is a prototype. For this reason, when creating these widgets, I took many steps back and\n            forth to achieve the effect without violating core language standards.</p>\n        <p>Ultimately, all this dance with the code was a success. When creating a new form, all you have to do is write\n            something like:</p>\n        <Highlight language=\"javascript\">{`<form>\n    <FieldWidget fieldName={someFieldName} data={{some: 'JSON data'}}/>\n    <CollectionWidget fieldName={collectionFieldName} data={{some: 'JSON data'}}/>\n    <FieldWidget fieldName={differentFieldName} data={{some: 'JSON data'}}/>\n</form>\n`}</Highlight>\n\n    </Block>\n);\nexport default PrototypeDescription;","import React from \"react\";\nimport {Block} from \"framework7-react\";\n\n\nconst SingletonDescription = () => (\n    <Block>\n        <p>This is probably the most famous and most disliked pattern in the world :)</p>\n        <p>If we have a simple structure of properties that we want to use in many places without duplicating the code,\n            and at the same time, we want these properties to be \"one of a kind\" each time we close them in\n            object according to the <b>Singleton</b> pattern. That's how I would describe it in my own words :)</p>\n        <p>In my applications I usually use it for exception classes that I want to display in a unified way. No\n            in this great philosophy, and greatly facilitates the debugging of applications in the development\n            process.</p>\n    </Block>\n);\nexport default SingletonDescription;","import React from \"react\";\nimport {Block} from \"framework7-react\";\n\n\nconst StrategyDescription = () => (\n    <Block>\n        <p>When writing from scratch Api for an application running in a browser without an internet connection as\n            the form handling element requires validation. For this purpose, an ideal design pattern\n            is <b> Strategy </b>.</p>\n        <p>In my case, I divided the validation into three areas:\n            <ul>\n                <li>field validation in itself,</li>\n                <li>field validation relative to the form,</li>\n                <li>field validation relative to the collection it is in.</li>\n            </ul>\n        </p>\n        <p>To this end, I developed a structure of dependencies and wrote classes in the strategy pattern that perform actions according to\n            configuration of field, form and application restrictions.</p>\n    </Block>\n);\nexport default StrategyDescription;","import React from \"react\";\nimport {Block} from \"framework7-react\";\n\n\nconst FirstAdminCommandDescription = () => (\n    <Block>\n        <p>Starting a new application in Symfony is easy because great tools are written for it. It's easy to create a basic structure that you can immediately test in your browser. However, if the application contains an authorization system, but does not have the option of registration, there is a need to create the first superadmin user who will be able to manage subsequent users within the application.</p>\n        <p>This script was created with the Symfony tool for creating command line commands and written by me to be able to create such a user from the command line so that when running the application in the browser you can log in immediately.</p>\n    </Block>\n);\nexport default FirstAdminCommandDescription;","import React from \"react\";\nimport {Block} from \"framework7-react\";\n\n\nconst ProblemResolverDescription = () => (\n    <Block>\n        <p>About half a year ago, I studied the structure of basic implementation whereby the income and expenditure ledger was strictly based on legal provisions. I also read programming of best practices that got stuck in the topic of problem solving. As it turned out, solving problems not necessarily programming, is a broad sphere in which psychologists would have the most to say. I came across an interesting site (skillyouneed.com) where I read a lot about it. It was the first impulse to design such an application that in a properly structured way would help to solve any problem. I developed an application structure that included the entire problem solving process.</p>\n        <p>How is this supposed to work?</p>\n        <p>The basic structure of the problem description consists of:\n            <ul>\n                <li>- title - (string)</li>\n                <li>- description (text)</li>\n                <li>- goals (collection, complex) - this is to be a type of TODO letter to achieve a solution to the\n                    problem\n                </li>\n                <li>- obstacles (collection, complex) - elements that will require additional attention to the\n                    solution\n                </li>\n                <li>- opportunities (collection, complex) - elements in the process of solving the problem that in any\n                    way can lead to incidental profits.\n                </li>\n                <li>- solution (structure, complex) - documentation that is to be a summary of the results achieved from\n                    the problem solving process.\n                </li>\n            </ul>\n        </p>\n        <p>Each complex property has a structure that looks similar to this, but contains information only in its\n            context. Any element of any collection in this structure can be marked as a task. At this point, a task will\n            be created whose structure would be similar to tasks in popular workflow systems.</p>\n        <p>Each property can have expressions that may require further explanation. This expression would be marked as\n            part of the dictionary. The dictionary element would contain explanatory fields in its structure. This way a\n            dictionary would be built on the basis of a project encyclopedia (something like wikipedia).</p>\n    </Block>\n);\nexport default ProblemResolverDescription;","import React from \"react\";\nimport {Block} from \"framework7-react\";\n\n\nconst ShopwareSampleDescription = () => (\n    <Block>\n        <p>\n            Recently, I have spent a lot of time working with the Shopware 6 application. It is an e-commerce\n            application that is a modern alternative to the popular Magento. This version of the Shopware was created\n            with Symfony 4+.\n        </p>\n        <p>\n            The Shopware application is designed in such a way that it leaves an open way to expand it in any way with\n            the so-called plugins that are actually known as Symfony \"bundles\". While working with this application\n            I&nbsp;came up with and created many improvements added to it with plugins.\n        </p>\n        <p>\n            I was wondering for a long time what code could be presented from the solutions created here.\n            I came to the conclusion that to someone unfamiliar with the specifics of this application, the code\n            fragments might seem completely incomprehensible. So I will tell you about a small excerpt, things like:\n            where did the idea come from, why this way, and what benefits the described passage can bring.\n        </p>\n        <h3>Migrations</h3>\n        <p>\n            At the outset, I would like to point out that this is a topic invisible to end users. But it can make\n            life easier for developers who create extensions for Shopware.\n        </p>\n        <p>\n            Migrations are executed during the plug-in installation process or directly from Terminal\n            using commands executed by the developer.\n        </p>\n        <p>\n            The migration mechanism implemented in Shopware has two basic life cycle functions:\n            <ul>\n                <li><b>update</b> - executes the migration installation instructions</li>\n                <li><b>updateDestructive</b> - executes the rollback instructions</li>\n            </ul>\n        </p>\n        <p>\n            The content of both of these functions is created by the developer.\n        </p>\n        <h4>True story</h4>\n        <p>\n            It happened to me that I was working on many plugins simultaneously in one application. Each of them had\n            some own migrations.\n        </p>\n        <p>\n            Everything was fine until I had to uninstall the plugin and undo its migrations.\n        </p>\n        <p>\n            It turns out that the <i> updateDestructive </i> function executes the instructions from the currently\n            uninstalled migration, but the migration mechanism itself goes on and uninstalls all other migrations\n            (here: from other plugins) that were installed after this one. You can imagine the result :/\n        </p>\n        <p>\n            This behavior is not due to the Shopware implementation, but is a consequence of the Symfony\n            bundle design. This issue has long been discussed by the Symfony community.\n            In general, there is a rule not to implement system-impacting changes in the bundle.\n        </p>\n        <p>\n            However, I wanted to be able to uninstall the migration together with the plugin.\n        </p>\n        <p>\n            In this way, we got to know the reasons for creating an extension that allows you to use the migration\n            lifecycle functions and the plug-in lifecycle functions to allow the developer (or the plug-in uninstalling\n            function) to withdraw the migration of this plugin only.\n        </p>\n        <h4>Conclusions</h4>\n        <p>\n            This small service class can give you the ability to use any stage of the plug-in lifecycle and perform\n            any function you define in the migration class.\n        </p>\n        <p>\n            This will be done independently of any other migrations on the system, and without compromising data\n            from other migrations.\n        </p>\n        <p>\n            All you need to do is write the appropriate migration functions (usually MySQL queries), but you can\n            also use the repository system from Shopware. Just use in the migration function the third parameter to\n            include container to get to the autowirable classes.\n        </p>\n    </Block>\n);\nexport default ShopwareSampleDescription;\n","import React from 'react';\nimport {Block, Link, List, ListItem, Navbar, Page, Toolbar, View, Views} from 'framework7-react';\n\n\nexport default class CodeSamplesPage extends React.Component {\n    displayName = this.__proto__.constructor.name;\n\n    render() {\n        console.log(this.displayName, this.$f7route);\n\n        return <Page>\n            <Navbar title=\"Code Samples\" backLink/>\n            {this.showViews()}\n        </Page>\n    }\n\n    showViews = () => {\n        return <Views tabs>\n            <Toolbar tabbar>\n                <Link tabLink=\"#view-php\" tabLinkActive>PHP</Link>\n                <Link tabLink=\"#view-js\">JavaScript</Link>\n            </Toolbar>\n            <View id=\"view-php\" className=\"view-php\" tab tabActive master masterDetailBreakpoint={800}>\n                <Page noNavbar className=\"page-master-detail\">\n                    <p>In this section I present descriptions of code fragments or ways to solve various problems\n                        programming while working with PHP. The basic tool I use is Symfony 4+ and\n                        derivative applications useful for programming server behavior in the context of applications\n                        online.</p>\n                </Page>\n                <Page noNavbar className=\"page-master\">\n                    <Block className=\"visible-\">\n                        In this section I present descriptions of code fragments or ways to solve various problems\n                        programming while working with PHP. The basic tool I use is Symfony 4+ and\n                        derivative applications useful for programming server behavior in the context of applications\n                        online.\n                    </Block>\n                    <Block>\n                        <h2>Navigation</h2>\n                    </Block>\n                    <List>\n                        <ListItem reloadDetail={true} link=\"/code-samples/php/firstAdminCommand/\" view=\".view-php\">\n                            Command\n                            <small className=\"margin-left\">\n                                the first super admin in the Symfony application\n                            </small>\n                        </ListItem>\n                        <ListItem reloadDetail={true} link=\"/code-samples/php/problemResolver/\" view=\".view-php\">\n                            Problem Resolver\n                        </ListItem>\n                        <ListItem reloadDetail={true} href=\"/code-samples/php/shopwareSample/\" view=\".view-php\">\n                            Shopware\n                            <small className=\"margin-left\">\n                                code examples in the Shopware application\n                            </small>\n                        </ListItem>\n                    </List>\n                </Page>\n            </View>\n            <View id=\"view-js\" className=\"view-js\" tab masterDetailBreakpoint={800}>\n                <Page noNavbar withToolbar className=\"page-master-detail\">\n                    <p>In this section I present motivation descriptions and some ways to solve individual problems\n                        programming with the help of design patterns in JavaScript. This is a summary\n                        several sample codes almost alive drawn from live projects.</p>\n                    <p>By looking into the source in the repository you can find references to other patterns that in\n                        I did not put this sample repository. This shows that the overall picture\n                        the application is usually much more complex.</p>\n                    <p>Also in the programming process I often use various types of loggers (from console.logs to\n                        their own classes that perform more complex operations for this purpose). So they can happen\n                        commented excerpts with such references</p>\n                </Page>\n                <Page noNavbar className=\"page-master\">\n                    <Block>\n                        <h2>Navigation</h2>\n                    </Block>\n                    <List>\n                        <ListItem reloadDetail={true} link=\"/code-samples/js/command/\" view=\".view-js\">\n                            Command Pattern\n                        </ListItem>\n                        <ListItem reloadDetail={true} link=\"/code-samples/js/facade/\" view=\".view-js\">\n                            Facade Pattern\n                        </ListItem>\n                        <ListItem reloadDetail={true} link=\"/code-samples/js/prototype/\" view=\".view-js\">\n                            Prototype Pattern\n                        </ListItem>\n                        <ListItem reloadDetail={true} link=\"/code-samples/js/singleton/\" view=\".view-js\">\n                            Singleton Pattern\n                        </ListItem>\n                        <ListItem reloadDetail={true} link=\"/code-samples/js/strategy/\" view=\".view-js\">\n                            Strategy Pattern\n                        </ListItem>\n                    </List>\n                </Page>\n            </View>\n        </Views>\n    }\n\n}\n","import React from 'react';\nimport {App, View} from \"framework7-react\";\nimport AppConfig from \"./Config/AppConfig\";\nimport HomePage from \"./Pages/HomePage\";\nimport ResourceConfig from \"./Patterns/Facade/ResourceConfig\";\nimport PanelLeftPage from \"./Pages/PanelLeftPage\";\nimport PanelRightPage from \"./Pages/PanelRightPage\";\nimport FormPage from \"./Pages/FormPage\";\nimport AboutPage from \"./Pages/AboutPage\";\nimport DynamicRoutePage from \"./Pages/DynamicRoutePage\";\nimport NotFoundPage from \"./Pages/NotFoundPage\";\nimport ProblemResolverPage from \"./Pages/ProblemResolverPage\";\nimport SandboxPage from \"./Pages/SandboxPage\";\nimport CodeSamplesDetailPage from \"./Pages/CodeSamplesDetailPage\";\nimport CodeSamplesPage from \"./Pages/CodeSamplesPage\";\n\nconst resourceConfig = new ResourceConfig();\n\nexport default class Shell extends React.Component {\n    displayName = this.__proto__.constructor.name;\n    static contextType = React.createContext(resourceConfig._form);\n    _config;\n    app;\n\n    constructor(props, context) {\n        super(props, context);\n\n        const appConfig = new AppConfig();\n        appConfig.addAsyncRoute('home', '/', {\n            component: HomePage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('problemResolver', '/problem-resolver/', {\n            component: ProblemResolverPage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('codeSamples', '/code-samples/', {\n            component: CodeSamplesPage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n            master: true,\n        }, {});\n        appConfig.addAsyncRoute('codeSampleDetail', '/code-samples/:genus/:pattern', {\n            component: CodeSamplesDetailPage,\n            master: true,\n            context: appConfig,\n            transition: 'f7-parallax',\n        }, {\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('sandbox', '/sandbox/', {\n            component: SandboxPage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('panelLeft', '/panel-left/', {\n            component: PanelLeftPage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('panelRight', '/panel-right/', {\n            component: PanelRightPage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('simpleForm', '/form/', {\n            component: FormPage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('form', '/form/:formName/', {\n            component: FormPage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('about', '/about/', {\n            component: AboutPage,\n        }, {\n            transition: 'f7-cover-v',\n            context: appConfig,\n        });\n        appConfig.addAsyncRoute('dynamicPage', '/dynamic-route/blog/:blogId/post/:postId/', {\n            component: DynamicRoutePage,\n        }, {\n            transition: 'f7-cover-v',\n        });\n        appConfig.addAsyncRoute('notFoundPage', '(.*)', {\n            component: NotFoundPage,\n        }, {\n            transition: 'f7-cover-v',\n        });\n        this._config = appConfig;\n        console.log('appConfig', appConfig);\n\n        this.state = {};\n        this.deferredPrompt = null;\n\n    }\n\n\n    componentDidMount = () => {\n        // console.log(`${this.displayName} is mounting`, this);\n        this.app = this.$f7;\n        // this.app.logger.log({'this._config': this._config.routes});\n\n        window.addEventListener('beforeinstallprompt', e => {\n            // Stash the event so it can be triggered later.\n            this.deferredPrompt = e;\n\n            this.setState({\n                showInstallButton: true,\n            });\n        });\n        window.addEventListener(\"online\", () => {\n            console.log('online listener');\n            this.setState({\n                online: true,\n            });\n        });\n        window.addEventListener(\"offline\", async () => {\n            console.log('offline listener');\n            this.setState({\n                online: false,\n            });\n        });\n\n        // console.log('this.app', this.app);\n\n        this.app.utils.extend(this.app, {\n            _config: this._config,\n            event: this.event,\n            handle: this.handle,\n        });\n\n        // this.app.logger.startProcess('init IndexedDB data');\n        this.app.api.init().then(() => {\n            this._config.data = this.app.api.resource.data;\n            // this.app.logger.info(this._config.data);\n            this.setState(this.state);\n        });\n        // this.app.logger.endProcess();\n    };\n\n    render() {\n        return (\n            <App params={this._config}>\n                <View main url=\"/\" pushState/>\n            </App>\n        );\n    }\n\n\n    handle = {\n        formSubmit: async (e) => {\n            console.group(`handle.formSubmit w ${this.displayName}`);\n\n            let ref = this.ref;\n            if (this.constructor.name.indexOf('Decorator') !== -1) {\n                ref = this._concreteFormComponent.ref;\n            }\n\n            const dataset = ref[this.props.formName].current.dataset;\n            const formName = dataset.form;\n            const formData = this.state.form;\n\n            let stateAfterSubmit = {};\n\n            await this.$f7.methods.formSubmit(formName, formData, this._configForm).then(entity => {\n                console.log(`Here we can do something with freshly saved ${formName}:`, entity);\n                this.handle.formClose(formName);\n            }).catch(validationError => {\n                console.error('validationError', validationError);\n                if (typeof validationError === 'string') {\n                    throw new Error('validationError');\n                } else {\n                    console.log('validationError', typeof validationError, validationError);\n                }\n                let stateErrors = this.state.errors || {};\n                stateErrors[formName] = validationError.errors;\n\n                stateAfterSubmit = Object.assign(this.state, {\n                    errors: stateErrors,\n                });\n            });\n\n            await this.setState(stateAfterSubmit);\n\n        },\n        controlChange: (e) => {\n            const control = e.currentTarget;\n            const dataset = control.closest('form').dataset;\n\n            let fieldConfig;\n            if (this.settings.fields[control.name]) {\n                fieldConfig = this.settings.fields[control.name];\n            } else {\n                fieldConfig = this.settings.fields[dataset.form].collection;\n            }\n\n            if (fieldConfig) {\n                if (fieldConfig.event && fieldConfig.event['beforeChange'] && typeof this.event[fieldConfig.event['beforeChange']] === 'function') {\n                    this.event[fieldConfig.event['beforeChange']](e);\n                }\n                let value = control.value;\n                if (control.type === 'checkbox') {\n                    value = control.checked;\n                }\n\n                this.setState(prevState => {\n                    const newState = {...prevState};\n                    newState.form[control.name] = value;\n                    this.storage[this.formName][control.name] = value;\n                    this.$f7.form.storeFormData(`${this.formName}-form`, this.storage[this.formName]);\n                    return newState;\n                });\n\n                //update local storage\n                if (fieldConfig.event && fieldConfig.event['afterChange'] !== undefined && typeof this.event[fieldConfig.event['afterChange']] === 'function') {\n                    this.event[fieldConfig.event['afterChange']](e);\n                }\n            }\n        },\n        controlCalendarChange: (value, fieldName, form) => {\n            if (this.state\n                && ((!this.state.form[fieldName] && value) ||\n                    (this.state.form[fieldName] && value.toString() !== this.state.form[fieldName].toString()))\n            ) {\n                this.setState(prevState => {\n                    const newState = {...prevState};\n                    newState.form[fieldName] = value[0] ? value[0].toISOString().slice(0, 10) : [];\n                    // this.settings.storage[dataset.form][fieldName] = newState.form[dataset.form][fieldName];\n                    return newState;\n                });\n            }\n        },\n        formClose: (form) => {\n            if (form.currentTarget) {\n                console.log('closing form2', form.currentTarget);\n            }\n            let formName = '';\n            if (typeof form === 'string') {\n                formName = form;\n            } else {\n                console.error('The form is:', form);\n                formName = this.formName;\n            }\n\n            if (this.$f7.views.main.router.currentRoute['modal'].opened) {\n                this.$f7.views.main.router.back();\n\n                delete this._api.forms[formName];\n                this._api.formsQueue.pop();\n            } else {\n                console.log('Modal is already closed');\n            }\n        },\n    };\n\n    event = {\n        installApp: () => {\n            // Show the prompt\n            this.deferredPrompt.prompt();\n            // Wait for the user to respond to the prompt\n            this.deferredPrompt.userChoice\n                .then((choiceResult) => {\n                    if (choiceResult.outcome === 'accepted') {\n                        console.log('User accepted the A2HS prompt');\n                        this.setState({\n                            showInstallButton: false,\n                        });\n                    } else {\n                        console.log('User dismissed the A2HS prompt');\n                    }\n                    this.deferredPrompt = null;\n                });\n        },\n        projectChange: (e) => {\n            const control = e.currentTarget;\n            this.app.api.resource.setCurrent(control.value, 'company').then(result => {\n                this.setState({\n                    current: result,\n                });\n            });\n        },\n    };\n\n\n}\n","import OwnerConfig from \"./FormConfig/OwnerConfig\";\nimport CompanyConfig from \"./FormConfig/CompanyConfig\";\nimport BankAccountConfig from \"./FormConfig/BankAccountConfig\";\nimport ContractorConfig from \"./FormConfig/ContractorConfig\";\nimport InvoiceConfig from \"./FormConfig/InvoiceConfig\";\nimport InvoiceItemConfig from \"./FormConfig/InvoiceItemConfig\";\nimport EconomicEventConfig from \"./FormConfig/EconomicEventConfig\";\nimport EconomicOperationConfig from \"./FormConfig/EconomicOperationConfig\";\nimport IntproofConfig from \"./FormConfig/IntproofConfig\";\nimport IntproofItemConfig from \"./FormConfig/IntproofItemConfig\";\n\nexport default class ResourceConfig {\n    _form = {\n        owner: new OwnerConfig(),\n        company: new CompanyConfig(),\n        bankAccount: new BankAccountConfig(),\n        contractor: new ContractorConfig(),\n        economicEvent: new EconomicEventConfig(),\n        economicOperation: new EconomicOperationConfig(),\n        invoice: new InvoiceConfig(),\n        invoiceItem: new InvoiceItemConfig(),\n        intproof: new IntproofConfig(),\n        intproofItem: new IntproofItemConfig(),\n    };\n\n    getFormConfig = (formName) => {\n        return this._form[formName];\n    };\n\n    /**\n     * Generuje IRI dla danej encji\n     * (uwzględnia IRI dla ownera)\n     *\n     * @param entityName - nazwa encji\n     * @param ownerId - id właściciela firmy\n     * @returns {string}\n     */\n    getIRI = (entityName, ownerId) => {\n        if (entityName === 'owner') {\n            const entityConfig = this.getFormConfig(entityName);\n            const ownerConfig = this.getFormConfig('owner');\n            console.log('entityConfig', entityConfig);\n            console.log('ownerConfig', ownerConfig);\n            return `/api/${entityName !== 'owner' ? 'kpir/' : ''}${entityConfig.apiConfig.action}/${ownerId}`;\n        } else {\n            throw new Error(`No IRI generated for entity ${entityName}`);\n        }\n    };\n}","import Helper from \"./Helpers/Helper\";\n\nlet logInside = true;\n\nconst HelperPlugin = {\n    name: 'helper',\n    // extend app params with helper params\n    params: {\n        helper: false,\n    },\n    create: function () {\n        const app = this;\n        // extend app methods with helper methods when app instance just created\n        app.helper = Helper;\n\n        app.helper.enable = () => {\n            logInside = true;\n        };\n        app.helper.disable = () => {\n            logInside = false;\n        };\n    },\n    on: {\n        init: function () {\n            const app = this;\n            if (app.params.helper) logInside = true;\n            if (logInside) console.log('HelperPlugin init');\n        },\n    },\n};\nexport default HelperPlugin;","// const getStackTrace = function () {\n//     const obj = {};\n//     Error.captureStackTrace(obj, getStackTrace);\n//     return obj.stack;\n// };\nconst color = {\n    log: {\n        text: '#fff',\n        bg: '#242424',\n    },\n    info: {\n        text: '#fff',\n        bg: '#287aec',\n    },\n    success: {\n        text: '#fff',\n        bg: '#339529',\n    },\n    warning: {\n        // text: '#ffdd9e',\n        text: '#403827',\n        bg: '#f5bd00',\n    },\n    error: {\n        text: '#ff8080',\n        bg: '#290000',\n    },\n    intention: {\n        text: '#000',\n        bg: '#65b72d',\n    },\n    effect: {\n        text: '#ffc122',\n        bg: '#65b72d',\n    },\n    todo: {\n        text: '#a8c023',\n        bg: '#242424',\n    },\n    keys: {\n        value: '#c93a36',\n        key: '#c863d0',\n    },\n};\nconst defaultCollapsed = true;\n\nexport default class Log {\n    static state = 'standby';\n\n    static helper;\n\n    static _source = (obj) => {\n        const lines = obj.stack.split(\"\\n\");\n        // console.info('lines', lines);\n        const result = {\n            lines: lines,\n            lineObjects: [],\n        };\n\n        const regex = /at\\s([^(]+)\\s\\((.*):(\\d+):(\\d+)\\)/g;\n        for (let line of lines) {\n            const lineObject = regex.exec(line);\n            result.lineObjects.push(lineObject);\n        }\n\n        const lineObject = result.lineObjects[2];\n\n\n        if (lineObject && lineObject[1] && lineObject[1].indexOf('.') !== -1) {\n            // return lineObject[1].split('.')[1];\n            // return lineObject[1];\n            const parts = lineObject[1].split('.');\n            result['object'] = parts[0];\n            result['function'] = parts[1];\n        } else {\n            if (lineObject && lineObject[1].indexOf('new') === 0) {\n                const parts = lineObject[1].split(' ');\n                result['object'] = parts[1];\n                result['function'] = 'constructor';\n            } else {\n                // const parts = lineObject[1].split('.'); \n                result['object'] = 'Object';\n                result['function'] = lineObject ? lineObject[1] : lineObject;\n                // return lineObject[1];\n            }\n        }\n        return result;\n    };\n    static _arguments = (argsData) => {\n        let args;\n\n        if (Array.isArray(argsData[0])) {\n            args = argsData[0];\n        } else {\n            args = Object.keys(argsData).map(key => argsData[key]);\n        }\n        return args;\n    };\n    static _log = (args, iterateObjects = true) => {\n        for (let item of args) {\n            if (!item) continue;\n\n            if (typeof item === 'object' && iterateObjects) {\n                let map = null;\n                if (item instanceof Map) {\n                    map = item;\n                } else {\n                    map = Log.helper.objectToMap(item);\n                }\n\n                for (let [key, value] of map) {\n                    if (typeof value === 'string') {\n                        console.log(`%c${key}%c: %c\"${value}\"%c`\n                            , `background: ${color.log.bg};color: ${color.keys.key};font-weight:700`\n                            , `background: ${color.log.bg};color: ${color.log.text}`\n                            , `background: ${color.log.bg};color: ${color.keys.value};font-weight:400;font-style:italic`\n                            , `background: ${color.log.bg};color: ${color.log.text}`,\n                        );\n                    } else {\n                        console.log(`%c${key}%c:`\n                            , `background: ${color.log.bg};color: ${color.keys.key};font-weight:700`\n                            , `background: ${color.log.bg};color: ${color.log.text}`\n                            , value,\n                        );\n                    }\n                }\n            } else {\n                console.log(item);\n            }\n        }\n        console.groupCollapsed('trace:');\n        console.trace();\n        console.groupEnd();\n    };\n\n    static extractNames = (objectNames, preparationFunction) => {\n        const objectLines = [];\n        // eslint-disable-next-line\n        for (let [index, lineObject] of objectNames.lineObjects.entries()) {\n            if (lineObject === null || lineObject[1].indexOf(preparationFunction) !== -1) {\n                continue;\n            } else {\n            // console.log('index',index);\n                objectLines.push(lineObject);\n            }\n        }\n        const source = {\n            object: '',\n            function: '',\n        };\n        if (objectLines[0]) {\n            const atObjectLineText = objectLines[0][1];\n            if (atObjectLineText.indexOf('new') === 0) {\n                source.object = atObjectLineText.substr(4);\n                source.function = 'constructor()';\n            } else if (atObjectLineText.indexOf('.') !== -1) {\n                source.object = atObjectLineText.substr(0, atObjectLineText.indexOf('.'));\n                source.function = atObjectLineText.substr(atObjectLineText.indexOf('.') + 1) + '()';\n            }\n        }\n        return source\n    };\n\n    /** @private */\n    static _prepareArgs(givenArgs) {\n        const obj = {};\n        Error.captureStackTrace(obj);\n        let args = this._arguments(givenArgs);\n\n\n        const objectNames = this._source(obj);\n\n        const source = this.extractNames(objectNames, '_prepareArgs');\n        return {args, source};\n    }\n\n    static startProcess = (processTitle) => {\n        Log.state = 'process';\n        // console.clear();\n        console.group('Process:', processTitle);\n    };\n    static endProcess = () => {\n        Log.state = 'standby';\n        console.groupEnd();\n    };\n\n    static intention() {\n        let {args, source} = this._prepareArgs(arguments);\n\n        console.groupCollapsed(`%cIntention%c of %c${source.object}%c ${source.function}`,\n            `background: ${color.intention.bg};color: ${color.intention.text};border:1px solid ${Log.state === 'process' ? '#ff0020' : '#aaa'};font-weight:700;padding:1px 7px;border-radius:3px`,\n            `background: ${color.log.bg};color: grey`,\n            `background: ${color.log.bg};color: ${color.log.text};border:1px solid #aaa;color: white;font-weight:700;padding:1px 7px;border-radius:3px`,\n            `background: ${color.log.bg};color: ${color.log.text}`);\n        this._log(args, false);\n        console.groupEnd();\n    }\n\n    static effect() {\n        let {args, source} = this._prepareArgs(arguments);\n\n        console.groupCollapsed(`%cEffect%c of %c${source.object}%c ${source.function}`,\n            `background: ${color.effect.bg};color: ${color.effect.text};border:1px solid ${Log.state === 'process' ? '#ff0020' : '#aaa'};font-weight:700;padding:1px 7px;border-radius:3px`,\n            `background: ${color.log.bg};color: grey`,\n            `background: ${color.log.bg};color: ${color.log.text};border:1px solid #aaa;color: white;font-weight:700;padding:1px 7px;border-radius:3px`,\n            `background: ${color.log.bg};color: ${color.log.text}`);\n        this._log(args, false);\n        console.groupEnd();\n    }\n\n    static todo() {\n        let {args, source} = this._prepareArgs(arguments);\n\n        console.groupCollapsed(`%cTODO%c in %c${source.object}%c ${source.function}`,\n            `background: ${color.todo.bg};color: ${color.todo.text};border:1px solid ${Log.state === 'process' ? '#ff0020' : '#aaa'};font-weight:700;padding:1px 7px;border-radius:3px`,\n            `background: ${color.log.bg};color: grey`,\n            `background: ${color.log.bg};color: ${color.log.text};border:1px solid #aaa;color: white;font-weight:700;padding:1px 7px;border-radius:3px`,\n            `background: ${color.log.bg};color: ${color.log.text}`);\n        this._log(args, false);\n        console.groupEnd();\n    }\n\n\n    static log() {\n        // console.log('arguments', arguments);\n        let {args, source} = this._prepareArgs(arguments);\n\n        console[`group${defaultCollapsed ? 'Collapsed' : ''}`](`%c${source.object}%c ${source.function}`\n            , `background: ${color.log.bg};color: ${color.log.text};border:1px solid ${Log.state === 'process' ? '#ff0020' : '#aaa'};color: white;font-weight:700;padding:1px 7px;border-radius:3px`\n            , `background: ${color.log.bg};color: ${color.log.text}`);\n        this._log(args);\n        console.groupEnd();\n    }\n\n    static info() {\n        let {args, source} = this._prepareArgs(arguments);\n\n        console[`group${defaultCollapsed ? 'Collapsed' : ''}`](`%cInfo%c %c${source.object}%c ${source.function}`\n            , `background: ${color.info.bg};color: ${color.info.text};font-weight:700;border:1px solid ${Log.state === 'process' ? '#ff0020' : '#aaa'};padding:2px 7px;border-radius:3px;`, `background: ${color.log.bg};color: ${color.log.text}`\n            , `background: ${color.log.bg};color: ${color.log.text};border:1px solid #aaa;color: white;font-weight:700;padding:1px 7px;border-radius:3px`\n            , `background: ${color.log.bg};color: ${color.log.text}`);\n        this._log(args);\n        console.groupEnd();\n    }\n\n\n    static success() {\n        let {args, source} = this._prepareArgs(arguments);\n\n        console[`group${defaultCollapsed ? 'Collapsed' : ''}`](`%cSuccess%c %c${source.object}%c ${source.function}`\n            , `background: ${color.success.bg};color: ${color.success.text};font-weight:700;border:1px solid ${Log.state === 'process' ? '#ff0020' : '#aaa'};padding:2px 7px;border-radius:3px;`, `background: ${color.log.bg};color: ${color.log.text}`\n            , `background: ${color.log.bg};color: ${color.log.text};border:1px solid #aaa;color: white;font-weight:700;padding:1px 7px;border-radius:3px`\n            , `background: ${color.log.bg};color: ${color.log.text}`);\n        this._log(args);\n        console.groupEnd();\n    }\n\n    static warning() {\n        let {args, source} = this._prepareArgs(arguments);\n\n        console[`group${defaultCollapsed ? 'Collapsed' : ''}`](`%cWarning%c %c${source.object}%c ${source.function}`\n            , `background: ${color.warning.bg};color: ${color.warning.text};font-weight:700;border:1px solid ${Log.state === 'process' ? '#ff0020' : color.warning.text};padding:2px 7px;border-radius:3px;`, `background: ${color.log.bg};color: ${color.log.text}`\n            , `background: ${color.log.bg};color: ${color.log.text};border:1px solid #aaa;color: white;font-weight:700;padding:1px 7px;border-radius:3px`\n            , `background: ${color.log.bg};color: ${color.log.text}`);\n        this._log(args);\n        console.groupEnd();\n    }\n\n    static error() {\n        let {args, source} = this._prepareArgs(arguments);\n\n        const errorObject = args[0];\n        const errorType = errorObject.name;\n        const errorMessage = errorObject.message;\n\n        console[`group${defaultCollapsed && !errorType ? 'Collapsed' : ''}`](`%c${errorType ? errorType : 'Error'}%c in %c${source.object}%c ${source.function}`\n            , `background: ${color.error.bg};color: ${color.error.text};font-weight:700;border:1px solid ${Log.state === 'process' ? '#ff0020' : color.error.text};padding:2px 7px;border-radius:3px;`, `background: ${color.log.bg};color: ${color.log.text}`\n            , `background: ${color.log.bg};color: ${color.log.text};border:1px solid #aaa;color: white;font-weight:700;padding:1px 7px;border-radius:3px`\n            , `background: ${color.log.bg};color: ${color.log.text}`);\n        if (errorMessage) {\n            console.error(errorMessage);\n        } else {\n            this._log(args);\n        }\n        console.groupEnd();\n    }\n\n}\n","import Log from \"./Helpers/Log\";\n\nlet logInside = false;\n\nconst LoggerPlugin = {\n    name: 'logger',\n    // extend app params with debugger params\n    params: {\n        logger: false,\n    },\n    create: function () {\n        const app = this;\n        // extend app methods with debugger methods when app instance just created\n        app.logger = Log;\n        if (app.helper) {\n            app.logger.helper = app.helper;\n        } else {\n            throw new Error('You have to install HelperPlugin before LogPlugin');\n        }\n\n        app.logger.enable = () => {\n            logInside = true;\n        };\n        app.logger.disable = () => {\n            logInside = false;\n        };\n    },\n    on: {\n        init: function () {\n            const app = this;\n            if (app.params.log) logInside = true;\n            if (logInside) console.log('LoggerPlugin init');\n        },\n        pageBeforeIn: function (page) {\n            if (logInside) console.log('pageBeforeIn', page);\n        },\n        pageAfterIn: function (page) {\n            if (logInside) console.log('pageAfterIn', page);\n        },\n        pageBeforeOut: function (page) {\n            if (logInside) console.log('pageBeforeOut', page);\n        },\n        pageAfterOut: function (page) {\n            if (logInside) console.log('pageAfterOut', page);\n        },\n        pageInit: function (page) {\n            if (logInside) console.log('pageInit', page);\n        },\n        pageBeforeRemove: function (page) {\n            if (logInside) console.log('pageBeforeRemove', page);\n        },\n    },\n};\nexport default LoggerPlugin;","// import {contextConfig} from \"../../Context/Contexts\";\n\nexport default class Resource {\n    displayName = this.constructor.name;\n    config = {\n        dbName: 'kpir',\n        version: 1,\n        tables: {\n            config: {name: 'config'},\n            current: {name: 'current'},\n            company: {name: 'company', keyPath: ['owner', 'id']},\n            book: {name: 'book', keyPath: ['owner', 'company', 'id']},\n            settlement: {name: 'settlement', keyPath: ['owner', 'company', 'book', 'id']},\n            document: {name: 'document', keyPath: ['owner', 'company', 'book', 'settlement', 'id']},\n            invoice: {name: 'invoice', keyPath: ['owner', 'company', 'book', 'settlement', 'document', 'id']},\n            intproof: {\n                name: 'intproof',\n                keyPath: ['owner', 'company', 'book', 'settlement', 'document', 'id'],\n            },\n            economicEvent: {name: 'economicEvent', keyPath: ['owner', 'company', 'id']},\n            economicOperation: {name: 'economicOperation', keyPath: ['owner', 'company', 'economicEvent', 'id']},\n        },\n        entity: {\n            user: {table: 'config'},\n            owner: {table: 'config'},\n            company: {table: 'company'},\n            book: {table: 'book'},\n            settlement: {table: 'settlement'},\n            document: {table: 'document'},\n            invoice: {table: 'invoice'},\n            intproof: {table: 'intproof'},\n            economicEvent: {table: 'economicEvent'},\n            economicOperation: {table: 'economicOperation'},\n        },\n    };\n    db = null;\n    data = {\n        config: {},\n        current: {},\n        collection: {},\n    };\n\n    log = [];\n\n    init(config) {\n        console.log(`${this.displayName}.init()`, config);\n\n        this.url = config.url;\n        return this;\n    }\n\n    /**\n     * Intencją tej metody jest skonfigurowanie bazy\n     *\n     * @param data\n     * @param namespace\n     */\n    setupDB = async (data, namespace) => {\n        const self = this;\n        if (!namespace) {\n            namespace = self.config.dbName;\n        }\n        return await new Promise(function (resolve, reject) {\n            let db;\n            if (namespace !== self.config.dbName) {\n                db = null;\n            }\n\n            // If setupDB has already been run and the database was set up, no need to\n            // open the database again; just run our callback and return!\n            if (db) {\n                // callback();\n                resolve(self.db);\n                return;\n            }\n\n            let dbName = namespace === '' ? self.config.dbName : namespace;\n            let dbOpen = indexedDB.open(dbName, self.config.version);\n\n            // Fires when the version of the database goes up, or the database is created\n            // for the first time\n            dbOpen.onupgradeneeded = e => {\n                db = e.target['result'];\n                if (data) {\n                    //Jeśli są dane przy otwieraniu bazy tzn że trzeba utworzyć tabele, inaczej nie ma co zaśmiecać\n                    // pamięci. Taka sytuacje jest wtedy go na stronę wejzdie gośc i sobie będzie chciał poklikać\n                    // bez tworzenia tabel w bazie\n\n                    const dbTables = Object.keys(self.config.tables);\n\n                    for (let table of dbTables) {\n                        if (!self.config.tables[table]) {\n                            throw new Error(`Tabela '${table}' nie jest skonfigurowana do użycia w IndexedDB`);\n                        }\n                        if (!db.objectStoreNames.contains(self.config.tables[table].name)) {\n                            if (self.config.tables[table].keyPath) {\n                                const objectStore = db.createObjectStore(self.config.tables[table].name, {\n                                    keyPath: self.config.tables[table].keyPath,\n                                });\n                                if (Array.isArray(self.config.tables[table].keyPath)) {\n                                    for (let key of self.config.tables[table].keyPath) {\n                                        objectStore.createIndex(key, key, {unique: false, multiEntry: true});\n                                    }\n                                }\n                            } else {\n                                db.createObjectStore(self.config.tables[table].name);\n                            }\n                        }\n                    }\n                    console.groupEnd();\n                } else if (db.objectStoreNames.length === 0) {\n                    e.target['transaction'].abort();\n                    resolve();\n                } else {\n                    console.log('no data given');\n                }\n            };\n\n            // Fires once the database is opened (and onupgradeneeded completes, if onupgradeneeded was called)\n            dbOpen.onsuccess = e => {\n                db = e.target['result'];\n                resolve(db);\n            };\n\n            // Fires when we can't open the database\n            dbOpen.onerror = e => {\n                reject(`error[${e.target['error'].code}] ${e.target['error'].message}`);\n            };\n        });\n    };\n\n    /**\n     * Intencją tej metody jest otworzyć bazę danych do odczytu i/lub zapisu\n     *\n     * @param data\n     * @return {Promise<*>}\n     */\n    useDB = async (data) => {\n        const self = this;\n        if (!self.db) {\n            await this.setupDB(data).then(async db => {\n                self.db = db;\n                return await self.db;\n            });\n        }\n        return await self.db;\n    };\n\n    /**\n     * Intencją tej metody jest odczytanie wszystkich danych z bazy\n     */\n    readData = async () => {\n        const self = this;\n        return await self.useDB().then(async db => {\n            if (db) {\n                // let data = self.data;\n                for (let table of db.objectStoreNames) {\n                    await self._tableObject(table).then(result => {\n                        if (['config', 'current'].indexOf(table) !== -1) {\n                            self.data[table] = result;\n                        } else {\n                            self.data.collection[table] = result.length ? result : null;\n                        }\n                    });\n                }\n                // test for only one company\n                // self.data.collection.company = [self.data.collection.company[0]];\n                if (self.data.collection.company.length === 1) {\n                    await self.setCurrent(self.data.collection.company[0].id, 'company')\n                }\n                return self.data;\n            }\n        });\n    };\n\n    /**\n     * Intencją tej metody jest wypełnienie bazy danych danymi $data\n     *\n     * @param data\n     */\n    fillData = async (data) => {\n        return await this.useDB(data).then(async () => {\n            for (let entityName in data) {\n                if (data.hasOwnProperty(entityName)) {\n                    await this._saveData(data[entityName], entityName);\n                }\n            }\n\n            return this.data;\n        });\n    };\n\n    /**\n     * Intencją tej metody jest ustawienie w tabeli 'current' $data o kluczu $name\n     *\n     * @param data\n     * @param name\n     */\n    setCurrent = async (data, name) => {\n        //@important data powinno być konwertowalne do typu 'number'\n        const id = Number(data);\n        if (isNaN(id)) {\n            throw new Error(`Nierawidłowa wartość id='${data}' dla kolekcji '${name}'!`)\n        }\n        return await this.useDB().then(async () => await this._saveData(id, name));\n    };\n\n    /**\n     * Intencją tej metody jest ustawienie w tabeli 'current' $data o kluczu $name\n     *\n     * @param data\n     * @param name\n     */\n    setConfig = async (data, name) => {\n        console.log(name, data);\n        return await this.useDB().then(async () => await this._saveData(data, name));\n    };\n\n    /**\n     * Intencją tej metody jest dodanie/aktualizacja danych $data w tabeli kolekcji $name\n     *\n     * @param data\n     * @param name\n     */\n    setData = async (data, name) => {\n        const key = [data.owner, data.id];\n\n        return await this.useDB().then(async (db) => {\n            await this._saveData(data, name, key);\n            return data;\n        });\n    };\n\n    /**\n     * PRIVATE functions\n     */\n\n    /**\n     * Pobiera dane z tabeli (store) IndexedDB\n     *\n     * @param table\n     * @private\n     */\n    _tableObject = async (table) => {\n        const self = this;\n        return await new Promise((resolve, reject) => {\n            const tableObject = self.db.transaction([table]).objectStore(table);\n            const keyPath = tableObject.keyPath;\n            const request = tableObject.getAll();\n            const list = {};\n            request.onsuccess = e => {\n                if (keyPath) {\n                    return resolve(e.target.result);\n                } else {\n                    const cursorRequest = tableObject.openCursor();\n                    cursorRequest.onsuccess = async ce => {\n                        const cursor = await ce.target.result;\n                        if (cursor) {\n                            // console.log(`cursor(${cursor.key}):`, cursor.value);\n                            list[cursor.key] = cursor.value;\n                            cursor.continue();\n                        } else {\n                            // console.log(`Entries(${table}) all displayed:`, list);\n                            resolve(list)\n                        }\n                    };\n                }\n            };\n            request.onerror = (e) => {\n                // throw e.target['error'].message;\n                reject(`[readData].requestKeys: ${e.target['error'].name}(${e.target['error'].code}): ${e.target['error'].message}`);\n            };\n        });\n    };\n\n    /**\n     * Zapisuje dane do bazy IndexedDB w zależności od predefiniowanego kontekstu zależnego od typu danych\n     *\n     * Kiedy dataType jest wartością? - wartość kluczas obiektu - (tabela current/cursor do wyszukiwania)\n     *  Powinniśmy dostać {keyName: $entityName, keyValue:number} e.g. {company: 3}\n     *  Dane powinny zoistać odczytane z odpowiedniego stora kolekcji poprzez index id\n     *  Date trafiają do tabeli 'current'\n     *\n     * Kiedy dataType jest obiektem? - encja o zdefiniowaym przez data kluczu - (tabela config)\n     *  Powinniśmy dostać {entityName:string} oraz {data:object} e.g. {entityName: $data}\n     *  Date trafiają do tabeli 'config'\n     *\n     * Kiedy dataType jest itemem? - entityName to nazwa store który nie jest config natomiast data jest obiektem\n     *  Powinniśmy dostać {entityName:string}, {data:object}, {key:keyPath} e.g. {entityName:{$key: $data}}\n     *  Date trafiają do tabeli 'config'\n     *\n     * Kiedy dataType jest kolekcją? - tablica obiektów kolekcji - (tabele kolekcji)\n     *  Powinniśmy dostać {data:array} e.g. [{entityName: $values}]\n     *  Date trafiają do tabel $entityName\n     *\n     * @private\n     * @param data - dane do zapisu\n     * @param entityName - nazwa tabeli/store w której mają być zapisane dane\n     */\n    _saveData = async (data, entityName, key) => {\n        this.log = [];\n        /*\n         const exampleData = {\n            //do tabeli 'current' d.w.({$klucz: $wartość}) zapisywany rekord z kolekcji $klucz o id=$wartość\n            company:    3,\n            book:       1,\n            settlement: 4,\n            document:   26,\n            //trafiają do tabeli 'config'\n            user:       {\n                email:        'user@company.com',\n                firstName:    'Aldefons',\n                lastNameName: 'Ownerski',\n            },\n            //trafiają do tabel wg indexu\n            company:    [\n                {\n                    companyName: 'Firma A',\n                    ...{otherValues: ''},\n                },\n                {\n                    companyName: 'Firma B',\n                    ...{otherValues: ''},\n                },\n            ],\n            book:       [\n                {\n                    year: 2017,\n                    ...{otherValues: ''},\n                },\n                {\n                    year: 2018,\n                    ...{otherValues: ''},\n                },\n            ],\n        };\n         //*/\n\n        let stores = [];\n\n\n        if (typeof data === 'number') {\n            await stores.push('current', entityName);\n        } else if (typeof data === 'object' && !Array.isArray(data) && !key) {\n            await stores.push('config');\n        } else if (typeof data === 'object' && Array.isArray(data) && !key) {\n            await stores.push(entityName);\n        } else if (typeof data === 'object' && !Array.isArray(data) && key) {\n            await stores.push(entityName);\n        } else {\n            console.error('requested data:', data);\n            throw new Error(`Trying to save Data in IndexedDB, but: Unsupported type of data`);\n        }\n        stores = [...new Set(stores)];\n\n        let tx = null;\n        if (this.db) {\n            tx = await this.db.transaction(stores, 'readwrite');\n        } else {\n            throw new Error('No database (self.db) defined!')\n        }\n\n        //executing\n        if (tx) {\n            if (typeof data === 'number') {\n                // console.log(`current of ${entityName}:`, data);\n\n                console.log('entityName:', entityName);\n\n                const entityData = await this._get(tx, entityName, data);\n                await console.log(`entityData =`, entityData);\n\n                await this._put(tx, 'current', entityData, entityName);\n                if (!this.data['current']) {\n                    this.data['current'] = {};\n                }\n                this.data['current'][entityName] = entityData;\n                return entityData\n            } else if (typeof data === 'object' && !Array.isArray(data) && !key) {\n                console.log(`object  of ${entityName}:`, data);\n                await this._put(tx, 'config', data, entityName);\n                if (!this.data['config']) {\n                    this.data['config'] = {};\n                }\n                this.data['config'][entityName] = data;\n                return data;\n            } else if (typeof data === 'object' && Array.isArray(data) && !key) {\n                console.log(`collection of ${entityName}`, data);\n                for (let item of data) {\n                    await this._put(tx, entityName, item);\n                    if (!this.data['collection']) {\n                        this.data['collection'] = {};\n                    }\n                    if (!this.data['collection'][entityName]) {\n                        this.data['collection'][entityName] = [];\n                    }\n                    await this.data['collection'][entityName].push(item);\n                }\n            } else if (typeof data === 'object' && !Array.isArray(data) && key) {\n                console.log(`item of ${entityName} with key(${key}):`, data['bankAccounts'][0]);\n                await this._put(tx, entityName, data);\n            } else {\n                console.error('requested data:', data);\n                throw new Error('Unsupported type of data');\n            }\n        } else {\n            throw new Error('No transaction (tx) defined!');\n        }\n    };\n\n    /**\n     * Add data to IndexedDB\n     *\n     * @param tx - rozpoczęta transakcja\n     * @param table - nazwa tabeli (store)\n     * @param data - dane do wstawienia\n     * @param key (optional) - klucz pod którym mają być zapisane dane\n     * @return {Promise<void>}\n     * @private\n     */\n    _add = async (tx, table, data, key) => {\n        const tableObject = tx.objectStore(table);\n        let add = null;\n        if (key) {\n            add = tableObject.add(data[key], key);\n        } else {\n            add = tableObject.add(data[key]);\n        }\n        add.onsuccess = async result => {\n            //event on put operation\n            // console.log(`put.${table}.result`, result);\n            this.data[table][key] = await data[key];\n        };\n    };\n    /**\n     * Put data to IndexedDB\n     *\n     * @param tx - rozpoczęta transakcja\n     * @param table - nazwa tabeli (store)\n     * @param data - dane do aktualizacji/wstawienia\n     * @param key (optional) - klucz pod którym mają być zapisane dane\n     * @return {Promise<void>}\n     * @private\n     */\n    _put = async (tx, table, data, key) => {\n        const tableObject = await tx.objectStore(table);\n        if (key) {\n            await tableObject.put(data, key);\n        } else {\n            await tableObject.put(data);\n        }\n    };\n    /**\n     * Get data from index TODO: it should get data from store by key also\n     *\n     * @param tx\n     * @param table\n     * @param key\n     * @private\n     */\n    _get = async (tx, table, key) => {\n        const tableObject = tx.objectStore(table);\n        return await new Promise((resolve, reject) => {\n            let getIndex = tableObject.index('id');\n            let getCursor = getIndex.openCursor(IDBKeyRange.only(key));\n            getCursor.onsuccess = async e => {\n                const cursor = e.target['result'];\n                await resolve(cursor.value);\n            };\n            getCursor.onerror = e => {\n                console.log('Zonkol: ', e.target.error);\n                throw new Error(`Wystąpił jednak błąd: ${e.target.error.message}`)\n            };\n        });\n    };\n    _delete = async (tx, table, key) => {\n        console.error('ResourceClass._delete is TODO');\n        throw new Error(`TODO: Należy zaimplementować ResourceClass._delete`);\n    };\n\n\n}","import Resource from \"./Api/Resource\";\n\nlet logInside = true;\n\nconst ApiPlugin = {\n    name: 'api',\n    // extend app params with resource params\n    params: {\n        api: false,\n    },\n    create: function () {\n        const app = this;\n        // extend app methods with resource methods when app instance just created\n        app.api = {\n            resource: new Resource(),\n            init: async () => {\n                return await this.api.resource.readData().then(result => {\n                    // console.log('Okazuje się że result to:',result);\n                    let resultData = null;\n                    if (result) {\n                        resultData = result;\n                    }\n                    // this.logger.log(resultData);\n                    return resultData;\n                });\n            },\n        };\n\n        app.api.enable = () => {\n            logInside = true;\n        };\n        app.api.disable = () => {\n            logInside = false;\n        };\n    },\n    on: {\n        //TODO: Here we can load IndexedDB data or other things before instantiate app\n        init: function () {\n            const app = this;\n            if (app.params.helper) logInside = true;\n            if (logInside) console.log('ApiPlugin init');\n\n\n        },\n    },\n};\nexport default ApiPlugin;","// import Resource from \"./Api/Resource\";\n\nlet logInside = true;\n\nconst PWAPlugin = {\n    name: 'pwa',\n    // extend app params with resource params\n    params: {\n        pwa: false,\n        installed: false,\n    },\n    create: function () {\n        const app = this;\n        // extend app methods with resource methods when app instance just created\n        app.pwa = {\n            installed: false,\n        };\n            //     resource: new Resource(),\n\n        /*\n        await this.app.pwa.resource.readData().then(result => {\n            console.log('Okazuje się że result to:', result);\n            let resultData = null;\n            if (result) {\n                resultData = result;\n            }\n            console.info('resultData', resultData);\n            this.app.data = resultData;\n            console.log('resource', this.app.data);\n        });\n        //*/\n\n        app.pwa.enable = () => {\n            logInside = true;\n        };\n        app.pwa.disable = () => {\n            logInside = false;\n        };\n    },\n    on: {\n        init: function () {\n            const app = this;\n            if (app.params.helper) logInside = true;\n            if (logInside) console.log('PWAPlugin init');\n        },\n    },\n};\nexport default PWAPlugin;","let logInside = false;\n\nconst DisplayablePlugin = {\n    name: 'displayable',\n    // extend app params with resource params\n    params: {\n        api: false,\n        display: {},\n    },\n    create: function () {\n        const app = this;\n        // extend app methods with resource methods when app instance just created\n        app.displayable = (displayName) => {\n\n            if (!this.display) this.display = {};\n            // const data = this.api.resource.data;\n            if (!app.helper) {\n                throw new Error('You have to install HelperPlugin before DisplayablePlugin');\n            }\n            if (!app.api) {\n                throw new Error('You have to install ApiPlugin before DisplayablePlugin');\n            }\n            // if (!app.pwa) {\n            //     throw new Error('You have to install PWAPlugin before DisplayablePlugin');\n            // }\n\n            switch (app.helper.lcfirst(displayName)) {\n                case 'resourceData':\n                    this.display.resourceData = app.api.resource.data && Object.keys(app.api.resource.data).length > 0;\n                    return this.display.resourceData;\n                case 'shellNavbar':\n                    if (!this.display.shell) this.display.shell = {};\n\n                    this.display.shell.navbar = true;\n                    break;\n                case 'panelLeft':\n                    if (!this.display.panel) this.display.panel = {};\n\n                    this.display.panel.left = false;\n                    break;\n                case 'panelRight':\n                    if (!this.display.panel) this.display.panel = {};\n                    this.display.panel.right = app.displayable('buttonCompany') || app.displayable('buttonLogout');\n                    break;\n                case 'company':\n                    this.display.company = app.api.resource.data && app.api.resource.data.current && app.api.resource.data.current.company;\n                    return this.display.company;\n                case 'companyCollection':\n                    this.display.companyCollection = app.api.resource.data.collection && app.api.resource.data.collection.company;\n                    return this.display.companyCollection;\n                case 'book':\n                    this.display.book = app.api.resource.data.collection && app.api.resource.data.collection.book;\n                    return this.display.book;\n                case 'user':\n                    this.display.user = app.api.resource.data && app.api.resource.data.config && app.api.resource.data.config.user;\n                    return this.display.user;\n                case 'buttonInstall':\n                    if (!this.display.button) this.display.button = {};\n                    this.display.button.install = app.online && !app.pwa.installed && app.displayable('user');\n                    break;\n                case 'buttonCompany':\n                    if (!this.display.button) this.display.button = {};\n                    this.display.button.company = app.api.resource.data && app.api.resource.data.current && app.api.resource.data.current.company &&\n                        app.api.resource.data.collection && app.api.resource.data.collection.company;\n                    break;\n                case 'buttonLogout':\n                    if (!this.display.button) this.display.button = {};\n                    this.display.button.logout = app.online && app.api.resource.data.config && app.api.resource.data.config.user;\n                    break;\n                default:\n                    console.error('zonk');\n                    throw new Error(`Undefined displayName`);\n            }\n\n\n            const indexes = app.helper.camelToArray(displayName);\n            let canDisplay = true;\n            if (indexes.length === 1) {\n                canDisplay = this.display[indexes[0]];\n            } else if (indexes.length === 2) {\n                canDisplay = this.display[indexes[0]][indexes[1]];\n            } else if (indexes.length === 3) {\n                canDisplay = this.display[indexes[0]][indexes[1]][indexes[2]];\n            }\n            // console.log(`Can I display ${displayName}? The answer is:`,canDisplay);\n            // console.groupCollapsed(`display('${displayName}'): `, Boolean(canDisplay));\n            // console.log('this.display', this.display);\n            // console.log('indexes', indexes);\n            // console.groupEnd();\n            if (logInside) {\n                console.info(`Checking if can display \"${displayName}\" component:`, Boolean(canDisplay));\n            }\n\n            return Boolean(canDisplay);\n        };\n\n        app.displayable.enable = () => {\n            logInside = true;\n        };\n        app.displayable.disable = () => {\n            logInside = false;\n        };\n    },\n    on: {\n        init: function () {\n            const app = this;\n            if (app.params.helper) logInside = true;\n            if (logInside) console.log('DisplayablePlugin init');\n        },\n    },\n};\nexport default DisplayablePlugin;","import React from \"react\";\nimport {\n    AccordionContent,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Icon,\n    List,\n    ListItem,\n    NavTitle,\n    Segmented,\n} from \"framework7-react\";\n\n/**\n * @class SwipeableCollectionWidget\n * @memberOf WidgetPrototype\n * @summary [wzorzec: Prototype -> ConcretePrototype -> PrototypeInstance]\n */\nexport default class SwipeableCollectionWidget {\n    /**\n     * @type {string}\n     * @private\n     */\n    _type = 'card';\n    _app;\n    _formConfig;\n    _itemPrototype = null;\n    /**\n     * @type {{}}\n     * @private\n     */\n    _handlers = {};\n    /**\n     * @type {{}}\n     * @private\n     */\n    _events = {};\n\n    /**\n     * @type {{\n     *      wrapperClass: array,\n     *      mediaList: boolean,\n     *      parentForm: null?,\n     *      title: null,\n     *      actions: {\n     *          add: {\n     *              color: string,\n     *              action: null,\n     *              label: string\n     *          }\n     *      }\n     * }}\n     */\n    widget = {\n        wrapperClass: ['width-100', 'flex-grow-1', 'no-margin-left', 'no-margin-right', 'card-outline'],\n        title: null,\n        actions: {\n            add: {color: 'green', label: 'Dodaj', action: null},\n        },\n        parentForm: null,\n        mediaList: false,\n    };\n    /**\n     *\n     * @type {{name: null}}\n     */\n    field = {\n        name: null,\n    };\n    /**\n     *\n     * @type {{\n     *      preview: {},\n     *      type: string,\n     *      actions: {\n     *          left: {},\n     *          right: {\n     *              edit: {\n     *                  color: string,\n     *                  action: null,\n     *                  label: string\n     *              },\n     *              delete: {\n     *                  color: string,\n     *                  action: null,\n     *                  label: string\n     *              }\n     *          }\n     *      }\n     * }}\n     */\n    item = {\n        type: 'item', //radio, checkbox,item - domyślnie 'item'\n        actions: { // akcje dla przycisków które się pokazują po przesunięciu itema w lewo lub w prawo\n            left: {},\n            right: {\n                edit: {color: 'orange', label: 'Edit', action: null},\n                delete: {color: 'red', label: 'Usuń', action: null},\n            },\n        },\n        preview: {},\n    };\n    /**\n     * @type {{\n     *      current: {\n     *          data: null,\n     *          field: {\n     *              subtitle: null|string|function,\n     *              after: null|string|function,\n     *              text: null|string|function,\n     *              title: null|string|function\n     *          },\n     *          index: null\n     *      },\n     *      errorMessage: null,\n     *      items: null\n     *  }}\n     */\n    data = {\n        items: null, // kolekcja itemów\n        current: {\n            data: null,\n            field: {\n                title: null,\n                after: null,\n                subtitle: null,\n                text: null,\n            },\n            index: null,\n        },\n        errorMessage: null,\n    };\n\n    constructor(build) {\n        // console.log('build', build);\n        this._type = build.type;\n        this._app = build.app;\n        this._formConfig = build.formConfig;\n\n        this._itemPrototype = this._app.widget.SwipeableItem(this._formConfig.item.preview.type)\n            .withApp(this._app)\n            .withConfig(this._formConfig.item)\n            .buildItem();\n        // console.log('this._itemPrototype', this._itemPrototype);\n        // this._itemPrototype = this._itemPrototype.prototypeInstance();\n        // this._itemPrototype = new SwipeableItemWidget.Builder(this._formConfig.item.preview.type).withApp(this).prototypeInstance();\n\n        /*\n        switch (this._formConfig.item.preview.type) {\n            case 'simple': {\n                // throw new SwipeableCollectionWidgetPrototypeException('SwipeableSimpleItemWidget nie został zaimplementowany');\n                this._itemPrototype = (new SwipeableSimpleItemWidget(this._formConfig.item)).prototypeInstance();\n                break;\n            }\n            case 'checkbox': {\n                throw new SwipeableCollectionWidgetPrototypeException('SwipeableSimpleItemWidget nie został zaimplementowany');\n                // this._itemPrototype = (new SwipeableCheckboxItemWidget(itemConfig)).prototypeInstance();\n                // break;\n            }\n            case 'radio': {\n                this._itemPrototype = (new SwipeableRadioItemWidget(this._formConfig.item, this.app)).prototypeInstance();\n                break;\n            }\n            default: {\n                throw new SwipeableCollectionWidgetPrototypeException(`Nieznany typ itema widgetu SwipeableCollection!!!\nSprawdź konfigurację '${this.__proto__.constructor.name}'`);\n            }\n        }\n        //*/\n    }\n\n    static get Builder() {\n        class Builder {\n            constructor(type) {\n                this.type = type;\n            }\n\n            withApp(app) {\n                this.app = app;\n                return this;\n            }\n\n            withConfig(config) {\n                // console.log('which should set config');\n                this.formConfig = config;\n                return this;\n            }\n\n            withHandlers(handlers) {\n                // console.log('and should set handlers');\n                this.handle = handlers;\n                return this;\n            }\n\n            withEvents(events) {\n                // console.log('and should set events');\n                this.event = events;\n                return this;\n            }\n\n            /**\n             *\n             * @returns {SwipeableCollectionWidget}\n             */\n            buildWidget() {\n                const newCollectionWidget = new SwipeableCollectionWidget(this);\n                // console.log('then should create SwipeableCollectionWidget');\n                // const clone = newCollectionWidget._clone();\n                // console.log('clone', clone);\n                // console.log('and return it');\n                return newCollectionWidget.collectionWidget;\n                // return clone;\n            }\n        }\n\n        // console.log('should return Builder');\n\n        return Builder;\n    }\n\n    collectionWidget = (props) => {\n        // console.log(`${this.__proto__.constructor.name}.collectionWidget:`, this);\n        this.configureProps(props);\n        // const actions = this.widget.actions;\n        // console.warn(`Będziemy renderować collectionCardWidget( ${this.name} )`, this);\n\n        let card = null;\n        switch (this._type) {\n            case 'card':\n                card = this._renderCard(props);\n                break;\n            case 'accordion':\n                card = this._renderAccordion(props);\n                break;\n            case 'list':\n                card = this._renderList(props);\n                break;\n            default:\n                card = this._renderList(props);\n                break;\n        }\n\n        if (this.item.type === 'item') {\n            return <li className=\"item-content\">\n                <div className=\"item-inner\">\n                    {card}\n                </div>\n            </li>;\n        } else return card;\n    };\n\n    _renderCard = (props) => {\n        return <Card className={this.widget.wrapperClass.join(' ')}>\n            <div className={this.data.errorMessage && 'item-input-wrap'}>\n                <CardHeader ref={e => this.buttonToPopoverWrapper = e}>\n                    <NavTitle>{this.widget.title}</NavTitle>\n                    <Segmented>\n                        {Object.keys(this.widget.actions).map(key => {\n                            const button = this.widget.actions[key];\n                            return <Button key={key} tabLinkActive\n                                           color={button.color}\n                                           href={button.action}\n                                           data-parent-form={this.widget.parentForm}>\n                                <Icon icon={button.icon}>{button.label}</Icon>\n                            </Button>\n                        })}\n                    </Segmented>\n                </CardHeader>\n                {this.data.items && <CardContent>\n                    <List mediaList={this.widget.mediaList}>\n                        {this.data.items.map((item, index) => this.renderItem(this.item.preview.type, item, index))}\n                    </List>\n                </CardContent>}\n                {this.data.errorMessage && <div className=\"item-input-error-message\">{\n                        Array.isArray(this.data.errorMessage) ?\n                            this.settings.data.errorMessage.join(' • ') :\n                            this.settings.data.errorMessage\n                    }</div>}\n            </div>\n        </Card>;\n    };\n    _renderAccordion = (props) => {\n        const accordionContent = <AccordionContent>\n            <List mediaList={this.widget.mediaList}>\n                {this.data.items.map((item, index) => {\n                    // return <div key={index}>item dupa</div>\n                    return this.renderItem(this.item.type, item, index)\n                })}\n            </List>\n        </AccordionContent>;\n\n        const accordionItem = <ListItem accordionItem title={this.data.current.field.title}\n                                        badge={this.data.items.length}>\n            <Icon slot=\"media\" icon=\"fad fa-briefcase\"/>\n            {accordionContent}\n        </ListItem>;\n\n        if (props.item) {\n            return accordionItem;\n        } else {\n            return (\n                <List accordionList inset>\n                    {accordionItem}\n                </List>\n            );\n        }\n    };\n    _renderList = (props) => {\n        return <div>collection list widget dla '{this.props.field}' </div>;\n    };\n\n    renderItem = (type, item, index) => {\n        // console.warn('Będziemy renderować item');\n        // this._app.logger.log({\n        //     this: this,\n        //     'this._itemPrototype': this._itemPrototype,\n        //     type: type,\n        //     item: item,\n        // });\n        this._itemPrototype.configure(index, item, this.item);\n        return this._itemPrototype.render();\n    };\n\n\n    configureProps = (props) => {\n        // console.log(`${this.__proto__.constructor.name}.configureProps[props]`, props);\n        // console.log(`${this.__proto__.constructor.name}.configureProps[this]`, this);\n\n        const fieldName = props.field;\n        this.name = fieldName;\n        this.field.name = fieldName;\n        const formConfig = this._formConfig;\n        const itemConfig = formConfig.item;\n        const fieldConfig = formConfig.fields[fieldName];\n        // const values = props.data.form;\n\n        // this._app.logger.log({\n        //     'this._formConfig': this._formConfig,\n        //     fieldName: fieldName,\n        //     formConfig: formConfig,\n        //     fieldConfig: fieldConfig,\n        //     itemConfig: itemConfig,\n        //     values: values,\n        // });\n\n        if (fieldConfig) {\n            this.widget.title = fieldConfig.collection.title;\n            this.widget.actions = fieldConfig.collection.preview.actions;\n        } else {\n            this.widget.title = formConfig.collection.title;\n            this.widget.actions = formConfig.collection.preview.actions;\n        }\n\n        this.widget.parentForm = this._formConfig.collection.parentForm;\n\n\n        if (fieldConfig) {\n            this.item = fieldConfig.item;\n        } else {\n            this.item = itemConfig;\n        }\n        // this.settings.item.type = itemConfig.preview.type;\n        //action do itema są ustawiane w kontekście itema zatem nie tu\n        // this.settings.item.actions.right.edit.href = 'TODO';\n        // this.settings.item.actions.right.edit.onclick = 'TODO';\n        // this.settings.item.actions.right.delete.href = 'TODO';\n        // this.settings.item.actions.right.delete.onclick = 'TODO';\n\n        // if (props) {\n        //     console.groupCollapsed('Zostały dane props z kórymi coś trzeba zrobić');\n        //     console.log('props', props);\n        //     console.groupEnd();\n        // }\n\n        if (props.mediaList) {\n            this.widget.mediaList = props.mediaList;\n        }\n        // console.clear();\n        // console.log('this', this);\n        // console.log('this._itemPrototype', this._itemPrototype);\n        this._itemPrototype.widget.mediaList = this.widget.mediaList;\n\n        if (props.data) {\n            this.updateData(props.data);\n        }\n    };\n\n\n    updateData = (data) => {\n        // Log.log({\n        //     data: data,\n        //     this: this,\n        // });\n        if (data.items) {\n            this.data.items = data.items;\n        } else if (data.form && data.form[this.field.name]) {\n            this.data.items = data.form[this.field.name];\n        }\n\n        if (data.current) {\n            this.data.current.data = data.current;\n            this.data.current.field = this._itemPrototype._composeItem(\n                data.current,\n                this._formConfig.item.preview,\n            );\n        }\n\n        if (data.errorMessage) {\n            console.log('data.errors', data.errors);\n            this.data.errorMessage = data.errorMessage;\n            this.widget.wrapperClass = [\n                ...this.widget.wrapperClass,\n                'item-input-with-error-message',\n                'item-input-invalid',\n                'border-color-red',\n            ];\n        }\n    };\n\n\n    /**\n     * @return {WidgetPrototypeAbstract}\n     */\n    prototypeInstance = () => {\n        return this._clone();\n    };\n\n    /**\n     * Ustawia właściwość obiektu\n     *\n     * @param property\n     * @param value\n     */\n    setProperty = (property, value) => {\n        this[property] = value;\n    };\n\n    /**\n     * Kopiuje właściwości prototypu do klona\n     *\n     * @return {WidgetPrototypeAbstract}\n     */\n    _clone = () => {\n        console.log(`${this.__proto__.constructor.name}`, this);\n        let widget = new this.__proto__.constructor(this._formConfig);\n        let keys = Object.keys(this);\n        keys.forEach(k => {\n            widget.setProperty(k, this[k]);\n        });\n        console.log(', clone it:', widget);\n\n        return widget;\n    };\n}","import React from \"react\";\nimport {Icon, ListItem, SwipeoutActions, SwipeoutButton} from \"framework7-react\";\n\n/**\n * @class SwipeableItemWidget\n * @memberOf WidgetPrototype\n * @instance\n * @summary [wzorzec: Prototype -> ConcretePrototype -> PrototypeInstance]\n */\nexport default class SwipeableItemWidget {\n    /**\n     * @type {string}\n     * @private\n     */\n    _type = 'simple';\n    _app;\n    _itemConfig;\n    state = {\n        opened: false,\n    };\n\n    key = null;\n    widget = {\n        sortable: false,\n        mediaList: null,\n    };\n    item = {\n        name: null,\n        value: null,\n        defaultChecked: null,\n        data: {\n            header: '',\n            title: '',\n            after: '',\n            subtitle: '',\n            text: '',\n            footer: '',\n        },\n        onChange: null,\n        actions: {\n            left: {\n                btnLeft1: {\n                    color: 'blue',\n                    label: 'Left1',\n                },\n            },\n            right: {\n                btnRight1: {\n                    color: 'blue',\n                    label: 'Right1',\n                },\n            },\n        },\n    };\n    data = {};\n\n\n    constructor(build) {\n        // console.log('build', build);\n        this._type = build.type;\n        this._itemConfig = build.itemConfig;\n        this._app = build.app;\n        this._formConfig = build.formConfig;\n    }\n\n    static get Builder() {\n        class Builder {\n            constructor(type) {\n                this.type = type;\n            }\n\n            withApp(app) {\n                // console.log('which should set app object');\n                this.app = app;\n                return this;\n            }\n\n            withConfig(config) {\n                // console.log('which should set config');\n                this.itemConfig = config;\n                return this;\n            }\n\n            withHandlers(handlers) {\n                // console.log('and should set handlers');\n                this.handle = handlers;\n                return this;\n            }\n\n            withEvents(events) {\n                // console.log('and should set events');\n                this.event = events;\n                return this;\n            }\n\n            /**\n             *\n             * @returns {SwipeableItemWidget}\n             */\n            buildItem() {\n                const newItemWidget = new SwipeableItemWidget(this);\n                // console.log('then should create SwipeableItemWidget');\n                // const clone = newCollectionWidget._clone();\n                // console.log('clone', clone);\n                // console.log('and return it', newItemWidget);\n                return newItemWidget;//.itemWidget();\n                // return clone;\n            }\n        }\n\n        // console.log('should return Builder',Builder);\n\n        return Builder;\n    }\n\n    configure = (index, item, useConfig) => {\n        // console.warn('Konfiguracja itema...',index, item, useConfig);\n        this._configureSettings(index, item, useConfig);\n    };\n\n\n    itemWidget = () => {\n        return <ListItem key={this.item.key} swipeout radio\n                         name={this.item.name}\n                         value={this.item.value}\n                         defaultChecked={this.item.defaultChecked}\n                         header={this.item.data.header}\n                         title={this.item.data.title}\n                         after={this.item.data.after}\n                         subtitle={this.item.data.subtitle}\n                         text={this.item.data.text}\n                         onClick={(e) => {\n                             if (this.state.opened) {\n                                 e.preventDefault();\n                             }\n                         }}\n                         footer={this.item.data.footer}\n                         onSwipeoutOpen={() => {\n                             this.state.opened = true;\n                         }}\n                         onSwipeoutClosed={() => {\n                             this.state.opened = false;\n                         }}\n                         onChange={e => {\n                             if (!this.state.opened) {\n                                 // console.log('this',this);\n                                 return this.item.onChange(e)\n                             } else {\n                                 e.preventDefault();\n                             }\n                         }}\n        >\n            {this.widget.sortable && <Icon slot=\"media\" icon=\"fad fa-bars\"/>}\n            {this._renderActions(this.data, this.key)}\n        </ListItem>;\n    };\n\n    render = () => {\n        return this.itemWidget()\n    };\n\n    _composeItem = (item, configPreview) => {\n        let itemConfig = {\n            name: null,\n            value: null,\n            defaultChecked: null,\n            data: {\n                header: null,\n                title: 'Wybierz',\n                after: null,\n                subtitle: null,\n                text: null,\n                footer: null,\n            },\n            onChange: null,\n            actions: {\n                left: null,\n                right: null,\n            },\n        };\n\n        // this._app.logger.info({\n        //     configPreview: configPreview,\n        // });\n\n        if (item) {\n            if (typeof configPreview.defaultChecked === 'function') {\n                itemConfig.defaultChecked = configPreview.defaultChecked(item);\n            } else {\n                itemConfig.defaultChecked = item[configPreview.defaultChecked];\n            }\n            if (configPreview.data.title) {\n                if (typeof configPreview.data.title === 'function') {\n                    itemConfig.data.title = configPreview.data.title(item)\n                } else {\n                    itemConfig.data.title = item[configPreview.data.title];\n                }\n            }\n            if (configPreview.data.subtitle) {\n                let subtitleValue = '';\n                if (typeof configPreview.data.subtitle === 'function') {\n                    subtitleValue = configPreview.data.subtitle(item)\n                } else {\n                    subtitleValue = item[configPreview.data.subtitle];\n                }\n                itemConfig.data.subtitle = subtitleValue;\n            }\n            if (configPreview.data.after) {\n                let afterValue = null;\n                if (typeof configPreview.data.after === 'function') {\n                    afterValue = configPreview.data.after(item)\n                } else {\n                    afterValue = item[configPreview.data.after];\n                }\n                if (this.widget.mediaList) {\n                    itemConfig.data.after = afterValue;\n                } else {\n                    itemConfig.data.footer = afterValue;\n                }\n            }\n            if (configPreview.data.header) {\n                let headerValue = null;\n                if (typeof configPreview.data.header === 'function') {\n                    headerValue = configPreview.data.header(item)\n                } else {\n                    headerValue = item[configPreview.data.header];\n                }\n                itemConfig.data.header = headerValue;\n            }\n            if (configPreview.data.text) {\n                let textValue = '';\n                if (typeof configPreview.data.text === 'function') {\n                    textValue = configPreview.data.text(item);\n                } else {\n                    textValue = item[configPreview.data.text];\n                }\n                itemConfig.data.text = textValue;\n            }\n            if (configPreview.data.footer) {\n                let footerValue = null;\n                if (typeof configPreview.data.footer === 'function') {\n                    footerValue = configPreview.data.footer(item)\n                } else {\n                    footerValue = item[configPreview.data.footer];\n                }\n                itemConfig.data.footer = footerValue;\n            }\n        } else {\n            itemConfig = configPreview.emptyValue;\n        }\n\n        // console.log('this._app.handle',this._app.handle);\n        // console.log('this._app.event',this._app.event);\n        // console.log('this._itemConfig.event',this._itemConfig.event);\n\n        itemConfig.onChange = this._app.event[this._itemConfig.event];\n\n        if (configPreview.actions.left) {\n            if (!itemConfig.actions) {\n                itemConfig.actions = {};\n            }\n            itemConfig.actions.left = configPreview.actions.left\n        }\n        if (configPreview.actions.right) {\n            if (!itemConfig.actions) {\n                itemConfig.actions = {};\n            }\n            itemConfig.actions.right = configPreview.actions.right\n        }\n        return itemConfig;\n    };\n\n    _configureSettings = (index, item, useConfig) => {\n        // console.warn('Konfiguracja settings', this.config);\n        this.data = item;\n        // this.item = this._composeItem(item, this.config.preview);\n        this.item = this._composeItem(item, useConfig.preview);\n        this.item.key = index;\n        this.item.name = this._itemConfig.name;\n        this.item.value = item.id;\n\n    };\n\n    _renderActions = (item, index) => {\n        const itemActions = this.item.actions;\n        return <React.Fragment>\n            {itemActions.left && this._renderAction('left', item, index)}\n            {itemActions.right && this._renderAction('right', item, index)}\n        </React.Fragment>\n    };\n\n    _renderAction = (side, item, index) => {\n        // console.info('rendering action with index', index);\n        const actionsProps = {};\n        if (side === 'left') {\n            actionsProps.left = true;\n        } else {\n            actionsProps.right = true;\n        }\n        const itemActions = this.item.actions;\n        return <SwipeoutActions {...actionsProps}>\n            {Object.keys(itemActions[side]).map((action, i) => {\n                const buttonProps = {\n                    color: itemActions[side][action].color,\n                };\n                if (typeof itemActions[side][action].action === 'string') {\n                    buttonProps.href = `/${item.id === null ? 'collection' : 'form'}/${itemActions[side][action].action}/${item.id === null ? index : item.id}/`;\n                } else if (typeof itemActions[side][action].action === 'function') {\n                    buttonProps.onClick = itemActions[side][action].action;\n                }\n                const buttonAttributes = {\n                    label: itemActions[side][action].label,\n                    icon: itemActions[side][action].icon,\n                };\n                return (\n                    <SwipeoutButton key={i} {...buttonProps}>\n                        <Icon icon={buttonAttributes.icon}>\n                        </Icon>\n                        {buttonAttributes.label ? buttonAttributes.label : ''}\n                    </SwipeoutButton>\n                )\n            })}\n        </SwipeoutActions>;\n    };\n\n\n    /* PROTOTYPING */\n\n\n    /**\n     * @return {WidgetPrototypeAbstract}\n     */\n    prototypeInstance = () => {\n        return this._clone();\n    };\n\n    /**\n     * Ustawia właściwość obiektu\n     *\n     * @param property\n     * @param value\n     */\n    setProperty = (property, value) => {\n        this[property] = value;\n    };\n\n    /**\n     * Kopiuje właściwości prototypu do klona\n     *\n     * @return {WidgetPrototypeAbstract}\n     */\n    _clone = () => {\n        console.log(`trying to clone......`);\n        let widget = new this.constructor(this._itemConfig);\n        let keys = Object.keys(this);\n        keys.forEach(k => {\n            widget.setProperty(k, this[k]);\n        });\n        widget.app = this.app;\n\n        return widget;\n    }\n}","import SwipeableCollectionWidget\n    from \"../Patterns/Prototype/ConcretePrototype/SwipeableWidget/SwipeableCollectionWidget\";\nimport SwipeableItemWidget from \"../Patterns/Prototype/ConcretePrototype/SwipeableWidget/SwipeableItemWidget\";\n\nlet logInside = true;\n\nconst WidgetPlugin = {\n    name: 'widget',\n    // extend app params with resource params\n    params: {\n        widget: false,\n    },\n    create: function () {\n        const app = this;\n        // extend app methods with resource methods when app instance just created\n\n\n        // widgetFactory.setFormConfig(new CompanyConfig());\n\n        // const widgetFactory = new WidgetFactory(type);\n        // widgetFactory.setApp(app);\n        // return widgetFactory;\n\n        app.widget = {\n            /**\n             *\n             * @param type - type of collection widget (simple, card)\n             * @returns {Builder}\n             * @constructor\n             */\n            SwipeableCollection: (type) => {\n                return new SwipeableCollectionWidget.Builder(type).withApp(this);\n            },\n            /**\n             *\n             * @param type - type of item widget (simple, radio, checkbox)\n             * @returns {Builder}\n             * @constructor\n             */\n            SwipeableItem: (type) => {\n                return new SwipeableItemWidget.Builder(type).withApp(this);\n            },\n            // CollectionWidget: widgetFactory.createSwipeableCollectionWidget('card').prototypeInstance().collectionWidget,\n        };\n\n        app.widget.enable = () => {\n            logInside = true;\n        };\n        app.widget.disable = () => {\n            logInside = false;\n        };\n    },\n\n    on: {\n        init: function () {\n            const app = this;\n            if (app.params.helper) logInside = true;\n            if (logInside) console.log('WidgetPlugin init');\n        },\n    },\n};\nexport default WidgetPlugin;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/app.scss';\nimport './scss/layout.scss';\nimport 'framework7/css/framework7.bundle.min.css';\nimport 'highlight.js/styles/darcula.css'\n// Import F7 Bundle\nimport Framework7 from 'framework7/framework7.esm.bundle';\n// Import F7-React Plugin\nimport Framework7React from 'framework7-react';\nimport Shell from './Shell';\n// Import KPIR Plugins\nimport HelperPlugin from \"./Plugin/HelperPlugin\";\nimport LoggerPlugin from \"./Plugin/LoggerPlugin\";\nimport ApiPlugin from \"./Plugin/ApiPlugin\";\nimport PWAPlugin from \"./Plugin/PWAPlugin\";\nimport DisplayablePlugin from \"./Plugin/DisplayablePlugin\";\nimport WidgetPlugin from \"./Plugin/WidgetPlugin\";\n\n// Init F7-React Plugin\nFramework7.use(Framework7React);\n\n// Init KPiR Plugins\nFramework7.use(HelperPlugin);\nFramework7.use(LoggerPlugin);\nFramework7.use(ApiPlugin);\nFramework7.use(PWAPlugin);\nFramework7.use(DisplayablePlugin);\nFramework7.use(WidgetPlugin);\n\nReactDOM.render(<Shell f7={Framework7}/>, document.getElementById('root'));\n"],"sourceRoot":""}